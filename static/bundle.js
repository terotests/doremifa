(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Doremifa = require("../src/");
var html = Doremifa.html;
var setState = Doremifa.setState;
var getState = Doremifa.getState;
var someClass = /** @class */ (function (_super) {
    __extends(someClass, _super);
    function someClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    someClass.prototype.render = function () {
        return html(templateObject_1 || (templateObject_1 = __makeTemplateObject(["<div>Object test with render()</div>"], ["<div>Object test with render()</div>"])));
    };
    return someClass;
}(Doremifa.drmfComponent));
var obj = new someClass();
function renderType(state) {
    switch (state.type) {
        case 0:
            return 'Just a Text <b>HTML not rendered</b>';
        case 1:
            return ['Array ', html(templateObject_2 || (templateObject_2 = __makeTemplateObject(["<b>Of</b> "], ["<b>Of</b> "]))), [3, ' Different elems']];
        case 2:
            return obj;
        case 3:
            return html(templateObject_3 || (templateObject_3 = __makeTemplateObject(["<div>HTML <u>template</u> built with literal</div>"], ["<div>HTML <u>template</u> built with literal</div>"])));
    }
}
// initial state
setState({
    editable: false,
    type: 0,
    time: (new Date).toTimeString(),
    items: [1, 2, 3, 4].map(function (id) { return ({ id: id, name: 'item ' + id }); })
});
var idcnt = 4;
var add_item = function () {
    var state = getState();
    idcnt++;
    setState({
        items: state.items.concat([{ id: idcnt, name: 'item ' + idcnt }])
    });
};
var delete_item = function (item) {
    var state = getState();
    setState({
        items: state.items.filter(function (i) { return i.id != item.id; }).slice()
    });
};
function editable_row(item) {
    return html(templateObject_4 || (templateObject_4 = __makeTemplateObject(["<li ", " class=\"list-group-item\"><input value=", " oninput=", "/><a \nclass=\"btn btn-light float-right\" role=\"button\" href=", ">Edit</a>\n<button type=\"button\" class=\"btn btn-light float-right\" \n  onclick=", "\n>Remove</button>   \n</li>"], ["<li ", " class=\"list-group-item\"><input value=", " oninput=",
        "/><a \nclass=\"btn btn-light float-right\" role=\"button\" href=", ">Edit</a>\n<button type=\"button\" class=\"btn btn-light float-right\" \n  onclick=", "\n>Remove</button>   \n</li>"])), Doremifa.key(item.id), item.name, function (e) {
        item.name = e.target.value;
    }, "#details/id/" + item.id, function (_) { return delete_item(item); });
}
function std_row(item) {
    return html(templateObject_5 || (templateObject_5 = __makeTemplateObject(["<li class=\"list-group-item\">", "</li>"], ["<li class=\"list-group-item\">", "</li>"])), item.name);
}
function render_cat(x, y, width, item) {
    var s = 'position:absolute;left:' + x + 'px;top:' + y + 'px; z-index:10000;';
    return html(templateObject_6 || (templateObject_6 = __makeTemplateObject(["<div style=", "><svg width=", " height=", " \n\n    xmlns=\"http://www.w3.org/2000/svg\" id=\"svg2\" viewBox=\"0 0 900 900\" version=\"1.1\"\n    onclick=", "    \n    >\n  <g id=\"g4\" fill=\"none\" transform=\"matrix(1.7656463,0,0,1.7656463,324.90716,255.00942)\">\n   <g id=\"g6\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path8\" d=\"m-122.3,84.285s0.1,1.894-0.73,1.875c-0.82-0.019-17.27-48.094-37.8-45.851,0,0,17.78-7.353,38.53,43.976z\"/>\n   </g>\n   <g id=\"g10\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path12\" d=\"m-118.77,81.262s-0.55,1.816-1.32,1.517c-0.77-0.298,0.11-51.104-19.95-55.978,0,0,19.22-0.864,21.27,54.461z\"/>\n   </g>\n   <g id=\"g14\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path16\" d=\"m-91.284,123.59s1.636,0.96,1.166,1.64c-0.471,0.67-49.642-12.13-59.102,6.23,0,0,3.68-18.89,57.936-7.87z\"/>\n   </g>\n   <g id=\"g18\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path20\" d=\"m-94.093,133.8s1.856,0.4,1.622,1.19c-0.233,0.79-50.939,4.13-54.129,24.53,0,0-2.46-19.08,52.507-25.72z\"/>\n   </g>\n   <g id=\"g22\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path24\" d=\"m-98.304,128.28s1.778,0.66,1.432,1.41-50.998-3.34-57.128,16.37c0,0,0.35-19.24,55.696-17.78z\"/>\n   </g>\n   <g id=\"g26\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path28\" d=\"m-109.01,110.07s1.31,1.38,0.67,1.9-44.38-25.336-58.53-10.29c0,0,8.74-17.147,57.86,8.39z\"/>\n   </g>\n   <g id=\"g30\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path32\" d=\"m-116.55,114.26s1.45,1.22,0.88,1.81c-0.58,0.59-46.97-20.148-59.32-3.6,0,0,6.74-18.023,58.44,1.79z\"/>\n   </g>\n   <g id=\"g34\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path36\" d=\"m-119.15,118.34s1.6,1,1.11,1.67c-0.49,0.66-49.27-13.56-59.25,4.51,0,0,4.22-18.77,58.14-6.18z\"/>\n   </g>\n   <g id=\"g38\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path40\" d=\"m-108.42,118.95s1.12,1.53,0.42,1.97c-0.7,0.43-40.77-30.818-56.73-17.71,0,0,10.87-15.884,56.31,15.74z\"/>\n   </g>\n   <g id=\"g42\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path44\" d=\"m-128.2,90s0.6,1.8-0.2,2-29.4-41.8-48.6-34.2c0,0,15.2-11.8,48.8,32.2z\"/>\n   </g>\n   <g id=\"g46\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path48\" d=\"m-127.5,96.979s0.97,1.629,0.23,1.996c-0.74,0.368-37.72-34.476-54.83-22.914,0,0,12.3-14.8,54.6,20.918z\"/>\n   </g>\n   <g id=\"g50\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path52\" d=\"m-127.62,101.35s1.12,1.53,0.42,1.97c-0.7,0.43-40.77-30.818-56.73-17.713,0,0,10.87-15.881,56.31,15.743z\"/>\n   </g>\n   <g id=\"g54\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path56\" d=\"m-129.83,103.06c0.5,6.05,1.49,12.62,3.23,15.74,0,0-3.6,12.4,5.2,25.6,0,0-0.4,7.2,1.2,10.4,0,0,4,8.4,8.8,9.2,3.88,0.65,12.607,3.72,22.468,5.12,0,0,17.132,14.08,13.932,26.88,0,0-0.4,16.4-4,18,0,0,11.6-11.2,2,5.6l-4.4,18.8s25.6-21.6,10-3.2l-10,26s19.6-18.4,12.4-10l-3.2,8.8s43.2-27.2,12.4,2.4c0,0,8-3.6,12.4-0.8,0,0,6.8-1.2,6,0.4,0,0-20.8,10.4-24.4,28.8,0,0,8.4-10,5.2,0.8l0.4,11.6s4-21.6,3.6,16c0,0,19.2-18,7.6,2.8v16.8s15.2-16.4,8.8-3.6c0,0,10-8.8,6,6.4,0,0-0.8,10.4,3.6-0.8,0,0,16-30.6,10-4.4,0,0-0.8,19.2,4,4.4,0,0,0.4,10.4,9.6,17.6,0,0-1.2-50.8,11.6-14.8l4,16.4s2.8-9.2,2.4-14.4l8,8s15.2-22.8,12-9.6c0,0-7.6,16-6,20.8,0,0,16.8-34.8,18-36.4,0,0-2,42.4,8.8,6.4,0,0,5.6,12,2.8,16.4,0,0,8-8,7.2-11.2,0,0,4.6-8.2,7.4,5.4,0,0,1.8,9.4,3.4,6.2,0,0,4,24,5.2,1.2,0,0,1.6-13.6-5.6-25.2,0,0,0.8-3.2-2-7.2,0,0,13.6,21.6,6.4-7.2,0,0,11.201,8,12.401,8,0,0-13.601-23.2-4.801-18.4,0,0-5.2-10.4,12.801,1.6,0,0-16.001-16,1.6-6.4,0,0,7.999,6.4,0.4-3.6,0,0-14.401-16,7.599,2,0,0,11.6,16.4,12.4,19.2,0,0-10-29.2-14.4-32,0,0,8.4-36.4,49.6-20.8,0,0,6.8,17.2,11.2-1.2,0,0,12.8-6.4,24,21.2,0,0,4-13.6,3.2-16.4,0,0,6.8,1.2,6,0,0,0,13.2,4.4,14.4,3.6,0,0,6.8,6.8,7.2,3.2,0,0,9.2,2.8,7.2-0.8,0,0,8.8,15.6,9.2,19.2l2.4-14,2,2.8s1.6-7.6,0.8-8.8,20,6.8,24.8,27.6l2,8.4s6-14.8,4.4-18.8c0,0,5.2,0.8,5.6,5.2,0,0,4-23.2-0.8-29.2,0,0,4.4-0.8,5.6,2.8v-7.2s7.2,0.8,7.2-1.6c0,0,4.4-4,6.4,0.8,0,0-12.4-35.2,6-16,0,0,7.2,10.8,3.6-8s-7.6-20.4-2.8-20.8c0,0,0.8-3.6-1.2-5.2s1.2,0,1.2,0,4.8,4-0.4-18c0,0,6.4,1.6-5.6-27.6,0,0,2.8-2.4-1.2-10.8,0,0,8,4.4,10.8,2.8,0,0-0.4-1.6-3.6-5.6,0,0-21.6-54.8-1.2-32.8,0,0,11.85,13.55,5.45-9.25,0,0-9.11-24.009-8.33-28.305l-429.55,23.015z\"/>\n   </g>\n   <g id=\"g58\" stroke=\"#000\" fill=\"#cc7226\">\n    <path id=\"path60\" d=\"m299.72,80.245c0.62,0.181,2.83,1.305,4.08,2.955,0,0,6.8,10.8,1.6-7.6,0,0-9.2-28.8-0.4-17.6,0,0,6,7.2,2.8-6.4-3.86-16.427-6.4-22.8-6.4-22.8s11.6,4.8-15.2-34.8l8.8,3.6s-19.6-39.6-41.2-44.8l-8-6s38.4-38,25.6-74.8c0,0-6.8-5.2-16.4,4,0,0-6.4,4.8-12.4,3.2,0,0-30.8,1.2-32.8,1.2s-36.8-37.2-102.4-19.6c0,0-5.2,2-9.599,0.8,0,0-18.401-16-67.201,6.8,0,0-10,2-11.6,2s-4.4,0-12.4,6.4-8.4,7.2-10.4,8.8c0,0-16.4,11.2-21.2,12,0,0-11.6,6.4-16,16.4l-3.6,1.2s-1.6,7.2-2,8.4c0,0-4.8,3.6-5.6,9.2,0,0-8.8,6-8.4,10.4,0,0-1.6,5.2-2.4,10,0,0-7.2,4.8-6.4,7.6,0,0-7.6,14-6.4,20.8,0,0-6.4-0.4-9.2,2,0,0-0.8,4.8-2.4,5.2,0,0-2.8,1.2-0.4,5.2,0,0-1.6,2.8-2,4.4,0,0,0.8,2.8-3.6,8.4,0,0-6.4,18.8-4.4,24,0,0,0.4,4.8-2.4,6.4,0,0-3.6-0.4,4.8,11.6,0,0,0.8,1.2-2.4,3.6,0,0-17.2,3.6-19.6,20,0,0-13.6,14.8-13.6,20,0,2.305,0.27,5.452,0.97,10.06,0,0-0.57,8.34,27.03,9.14s402.72-31.355,402.72-31.355z\"/>\n   </g>\n   <g id=\"g62\" fill=\"#cc7226\">\n    <path id=\"path64\" d=\"m-115.6,102.6c-25-39.4-10.6,17-10.6,17,8.8,34.4,138.4-3.2,138.4-3.2s168.8-30.4,180-34.4,106.4,2.4,106.4,2.4l-5.6-16.8c-64.8-46.4-84-23.2-97.6-27.2s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2-31.74-22.951-16.8,8.8c16,34-58.4,39.2-75.2,28s7.2,18.4,7.2,18.4c18.4,20-16,3.2-16,3.2-34.4-12.8-58.4,12.8-61.6,13.6s-8,4-8.8-2.4-8.31-23.101-40,3.2c-20,16.6-33.8-5.4-33.8-5.4l-2.8,11.6z\"/>\n   </g>\n   <g id=\"g66\" fill=\"#e87f3a\">\n    <path id=\"path68\" d=\"m133.51,25.346c-6.4,0.8-31.77-22.939-16.8,8.8,16.6,35.2-58.4,39.2-75.2,28-16.801-11.2,7.2,18.4,7.2,18.4,18.4,20.004-16.001,3.2-16.001,3.2-34.4-12.8-58.4,12.8-61.6,13.6s-8,4.004-8.8-2.4c-0.8-6.4-8.179-22.934-40,3.2-21.236,17.344-34.729-4.109-34.729-4.109l-3.2,10.113c-25-39.804-9.93,18.51-9.93,18.51,8.81,34.4,139.06-4.51,139.06-4.51s168.8-30.404,180-34.404,105.53,2.327,105.53,2.327l-5.53-17.309c-64.8-46.4-83.2-22.618-96.8-26.618s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g70\" fill=\"#ea8c4d\">\n    <path id=\"path72\" d=\"m134.82,27.091c-6.4,0.8-31.14-23.229-16.8,8.8,16.2,36.201-58.401,39.201-75.201,28.001s7.2,18.4,7.2,18.4c18.4,19.998-16,3.2-16,3.2-34.4-12.8-58.401,12.8-61.601,13.6s-8,3.998-8.8-2.4c-0.8-6.4-8.048-22.767-40,3.2-22.473,18.088-35.658-2.818-35.658-2.818l-3.6,8.616c-23.8-38.998-9.25,20.02-9.25,20.02,8.8,34.4,139.71-5.82,139.71-5.82s168.8-30.398,180-34.398,104.65,2.254,104.65,2.254l-5.45-17.818c-64.8-46.4-82.4-22.037-96-26.037s-11.2,5.6-14.4,6.401c-3.2,0.8-42.4-24.001-48.8-23.201z\"/>\n   </g>\n   <g id=\"g74\" fill=\"#ec9961\">\n    <path id=\"path76\" d=\"m136.13,28.837c-6.4,0.8-31.13-23.232-16.8,8.8,16.8,37.556-58.936,38.845-75.202,28-16.8-11.2,7.2,18.4,7.2,18.4,18.4,20.003-16,3.2-16,3.2-34.4-12.8-58.4,12.803-61.6,13.603s-8,4-8.8-2.403c-0.8-6.4-7.917-22.598-40.001,3.203-23.709,18.83-36.587-1.53-36.587-1.53l-4,7.13c-21.8-36.803-8.58,21.52-8.58,21.52,8.8,34.4,140.37-7.12,140.37-7.12s168.8-30.403,180-34.403,103.78,2.182,103.78,2.182l-5.38-18.327c-64.8-46.401-81.6-21.455-95.2-25.455s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g78\" fill=\"#eea575\">\n    <path id=\"path80\" d=\"m137.44,30.583c-6.4,0.8-30.63-23.454-16.8,8.8,16.8,39.2-58.403,39.2-75.203,28s7.2,18.4,7.2,18.4c18.4,19.997-16,3.2-16,3.2-34.4-12.8-58.4,12.797-61.6,13.597s-8,4-8.8-2.4c-0.8-6.397-7.785-22.428-40,3.2-24.946,19.58-37.507-0.23-37.507-0.23l-4.4,5.63c-19.8-34.798-7.91,23.04-7.91,23.04,8.8,34.4,141.02-8.44,141.02-8.44s168.8-30.397,180-34.397,102.91,2.109,102.91,2.109l-5.31-18.837c-64.8-46.4-80.8-20.872-94.4-24.872s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g82\" fill=\"#f1b288\">\n    <path id=\"path84\" d=\"m138.75,32.328c-6.4,0.8-32.37-22.651-16.8,8.8,19.2,38.8-58.404,39.2-75.204,28s7.2,18.4,7.2,18.4c18.4,20.002-16,3.2-16,3.2-34.4-12.8-58.4,12.802-61.6,13.602s-8,4-8.8-2.4c-0.8-6.402-7.654-22.265-40,3.2-26.182,20.33-38.436,1.05-38.436,1.05l-4.8,4.15c-18-33.202-7.24,24.54-7.24,24.54,8.8,34.4,141.68-9.74,141.68-9.74s168.8-30.402,180-34.402,102.03,2.036,102.03,2.036l-5.23-19.345c-64.8-46.4-80-20.291-93.6-24.291s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g86\" fill=\"#f3bf9c\">\n    <path id=\"path88\" d=\"m140.06,34.073c-6.4,0.8-32.75-22.46-16.8,8.8,20.4,40.001-58.405,39.201-75.205,28.001s7.2,18.4,7.2,18.4c18.4,19.996-16,3.2-16,3.2-34.4-12.8-58.4,12.796-61.6,13.596s-8,4-8.8-2.4c-0.8-6.396-7.523-22.092-40,3.2-27.419,21.08-39.365,2.35-39.365,2.35l-5.2,2.65c-16-30.196-6.56,26.06-6.56,26.06,8.8,34.4,142.32-11.06,142.32-11.06s168.8-30.396,180-34.396,101.16,1.963,101.16,1.963l-5.16-19.854c-64.8-46.4-79.2-19.709-92.8-23.709-13.6-4.001-11.2,5.6-14.4,6.4s-42.4-24.001-48.8-23.201z\"/>\n   </g>\n   <g id=\"g90\" fill=\"#f5ccb0\">\n    <path id=\"path92\" d=\"m141.36,35.819c-6.4,0.8-33.84-21.875-16.8,8.8,22,39.6-58.396,39.2-75.196,28s7.2,18.4,7.2,18.4c18.4,20.001-16,3.2-16,3.2-34.4-12.8-58.4,12.801-61.6,13.601s-8,4-8.8-2.4c-0.8-6.401-7.391-21.928-40,3.2-28.655,21.82-40.294,3.64-40.294,3.64l-5.6,1.16c-14.4-28.401-5.89,27.56-5.89,27.56,8.8,34.4,142.98-12.36,142.98-12.36s168.8-30.401,180-34.401,100.3,1.891,100.3,1.891l-5.1-20.364c-64.8-46.4-78.4-19.127-92-23.127s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g94\" fill=\"#f8d8c4\">\n    <path id=\"path96\" d=\"m142.67,37.565c-6.4,0.8-33.84-21.876-16.8,8.8,22,39.6-58.396,39.2-75.196,28s7.2,18.4,7.2,18.4c18.4,19.995-16,3.2-16,3.2-34.401-12.8-58.401,12.795-61.601,13.595s-8,4-8.8-2.4-7.259-21.755-40,3.2c-29.891,22.57-41.213,4.93-41.213,4.93l-6-0.33c-13.61-26.396-5.22,29.08-5.22,29.08,8.8,34.4,143.63-13.68,143.63-13.68s168.8-30.395,180-34.395,99.42,1.818,99.42,1.818l-5.01-20.873c-64.81-46.4-77.61-18.545-91.21-22.545s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g98\" fill=\"#fae5d7\">\n    <path id=\"path100\" d=\"m143.98,39.31c-6.4,0.8-33.45-22.087-16.8,8.8,22,40.8-58.397,39.2-75.197,28s7.2,18.4,7.2,18.4c18.4,20-16,3.2-16,3.2-34.4-12.8-58.4,12.8-61.6,13.6-3.201,0.8-8.001,4-8.801-2.4s-7.128-21.592-40,3.2c-31.127,23.31-42.142,6.22-42.142,6.22l-6.4-1.82c-13-24-4.55,30.58-4.55,30.58,8.8,34.4,144.29-14.98,144.29-14.98s168.8-30.4,180-34.4,98.55,1.746,98.55,1.746l-4.95-21.382c-64.8-46.401-76.8-17.964-90.4-21.964s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g102\" fill=\"#fcf2eb\">\n    <path id=\"path104\" d=\"m145.29,41.055c-6.4,0.8-32.37-22.644-16.8,8.8,21.2,42.801-58.398,39.201-75.198,28.001s7.2,18.4,7.2,18.4c18.4,20.004-16,3.2-16,3.2-34.4-12.8-58.4,12.804-61.6,13.604s-8,4-8.8-2.4-6.997-21.428-40,3.2c-32.365,24.05-43.072,7.5-43.072,7.5l-6.8-3.3c-12.8-23.204-3.87,32.09-3.87,32.09,8.8,34.4,144.94-16.29,144.94-16.29s168.8-30.4,180-34.404c11.2-4,97.67,1.674,97.67,1.674l-4.87-21.893c-64.8-46.4-76-17.381-89.6-21.381-13.6-4.001-11.2,5.6-14.4,6.4s-42.4-24.001-48.8-23.201z\"/>\n   </g>\n   <g id=\"g106\" fill=\"#FFF\">\n    <path id=\"path108\" d=\"m-115.8,119.6c-12.8-22-3.2,33.6-3.2,33.6,8.8,34.4,145.6-17.6,145.6-17.6s168.8-30.4,180-34.4,96.8,1.6,96.8,1.6l-4.8-22.4c-64.8-46.4-75.2-16.8-88.8-20.8s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2-31.62-23.007-16.8,8.8c22.23,47.707-60.759,37.627-75.2,28-16.8-11.2,7.2,18.4,7.2,18.4,18.4,20-16,3.2-16,3.2-34.4-12.8-58.4,12.8-61.6,13.6s-8,4-8.8-2.4-6.865-21.256-40,3.2c-33.6,24.8-44,8.8-44,8.8l-7.2-4.8z\"/>\n   </g>\n   <g id=\"g110\" fill=\"#000\">\n    <path id=\"path112\" d=\"m-74.2,149.6s-7.2,11.6,13.6,24.8c0,0,1.4,1.4-16.6-2.8,0,0-6.2-2-7.8-12.4,0,0-4.8-4.4-9.6-10s20.4,0.4,20.4,0.4z\"/>\n   </g>\n   <g id=\"g114\" fill=\"#CCC\">\n    <path id=\"path116\" d=\"m65.8,102s17.698,26.82,17.1,31.6c-1.3,10.4-1.5,20,1.7,24,3.201,4,12.001,37.2,12.001,37.2s-0.4,1.2,11.999-36.8c0,0,11.6-16-8.4-34.4,0,0-35.2-28.8-34.4-21.6z\"/>\n   </g>\n   <g id=\"g118\" fill=\"#000\">\n    <path id=\"path120\" d=\"m-54.2,176.4s11.2,7.2-3.2,38.4l6.4-2.4s-0.8,11.2-4,13.6l7.2-3.2s4.8,8,0.8,12.8c0,0,16.8,8,16,14.4,0,0,6.4-8,2.4-14.4s-11.2-2.4-10.4-20.8l-8.8,3.2s5.6-8.8,5.6-15.2l-8,2.4s15.469-26.58,4.8-28c-6-0.8-8.8-0.8-8.8-0.8z\"/>\n   </g>\n   <g id=\"g122\" fill=\"#CCC\">\n    <path id=\"path124\" d=\"m-21.8,193.2s2.8-4.4,0-3.6-34,15.6-40,25.2c0,0,34.4-24.4,40-21.6z\"/>\n   </g>\n   <g id=\"g126\" fill=\"#CCC\">\n    <path id=\"path128\" d=\"m-11.4,201.2s2.8-4.4,0-3.6-34,15.6-40,25.2c0,0,34.4-24.4,40-21.6z\"/>\n   </g>\n   <g id=\"g130\" fill=\"#CCC\">\n    <path id=\"path132\" d=\"m1.8,186s2.8-4.4,0-3.6-34,15.6-40,25.2c0,0,34.4-24.4,40-21.6z\"/>\n   </g>\n   <g id=\"g134\" fill=\"#CCC\">\n    <path id=\"path136\" d=\"m-21.4,229.6s0-6-2.8-5.2-38.8,18.4-44.8,28c0,0,42-25.6,47.6-22.8z\"/>\n   </g>\n   <g id=\"g138\" fill=\"#CCC\">\n    <path id=\"path140\" d=\"m-20.2,218.8s1.2-4.8-1.6-4c-2,0-28.4,11.6-34.4,21.2,0,0,29.6-21.6,36-17.2z\"/>\n   </g>\n   <g id=\"g142\" fill=\"#CCC\">\n    <path id=\"path144\" d=\"m-34.6,266.4-10,7.6s10.4-7.6,14-6.4c0,0-6.8,11.2-7.6,16.4,0,0,10.4-12.8,16-12.4,0,0,7.6,0.4,7.6,11.2,0,0,5.6-10.4,8.8-10,0,0,1.2,6.4,0,13.2,0,0,4-7.6,8-6,0,0,6.4-2,5.6,9.6,0,0,0,10.4-0.8,13.2,0,0,5.6-26.4,8-26.8,0,0,8-1.2,12.8,7.6,0,0-4-7.6,0.8-5.6,0,0,10.8,1.6,14,8.4,0,0-6.8-12-1.2-8.8l8,6.4s8.4,21.2,10.4,22.8c0,0-7.6-21.6-6-21.6,0,0-2-12,3.2,2.8,0,0-3.2-14,2.4-13.2s10,10.8,18.4,8.4c0,0,9.601,5.6,11.601-63.6l-124,46.8z\"/>\n   </g>\n   <g id=\"g146\" fill=\"#000\">\n    <path id=\"path148\" d=\"m-29.8,173.6s14.8-6,54.8,0c0,0,7.2,0.4,14-8.4s33.6-16,40-14l9.601,6.4,0.8,1.2s12.399,10.4,12.799,18-14.399,55.6-24,71.6c-9.6,16-19.2,28.4-38.4,26,0,0-20.8-4-46.4,0,0,0-29.2-1.6-32-9.6s11.2-23.2,11.2-23.2,4.4-8.4,3.2-22.8-0.8-42.4-5.6-45.2z\"/>\n   </g>\n   <g id=\"g150\" fill=\"#e5668c\">\n    <path id=\"path152\" d=\"M-7.8,175.6c8.4,18.4-21.2,83.6-21.2,83.6-2,1.6,12.66,7.65,22.8,5.2,10.946-2.64,51.2,1.6,51.2,1.6,23.6-15.6,36.4-60,36.4-60s10.401-24-7.2-27.2c-17.6-3.2-82-3.2-82-3.2z\"/>\n   </g>\n   <g id=\"g154\" fill=\"#b23259\">\n    <path id=\"path156\" d=\"m-9.831,206.5c3.326-12.79,4.91-24.59,2.031-30.9,0,0,62.4,6.4,73.6-14.4,4.241-7.87,19.001,22.8,18.6,32.4,0,0-63,14.4-77.8,3.2l-16.431,9.7z\"/>\n   </g>\n   <g id=\"g158\" fill=\"#a5264c\">\n    <path id=\"path160\" d=\"m-5.4,222.8s2,7.2-0.4,11.2c0,0-1.6,0.8-2.8,1.2,0,0,1.2,3.6,7.2,5.2,0,0,2,4.4,4.4,4.8s7.2,6,11.2,4.8,15.2-5.2,15.2-5.2,5.6-3.2,14.4,0.4c0,0,2.375-0.8,2.8-4.8,0.5-4.7,3.6-8.4,5.6-10.4s11.6-14.8,10.4-15.2-68,8-68,8z\"/>\n   </g>\n   <g id=\"g162\" stroke=\"#000\" fill=\"#ff727f\">\n    <path id=\"path164\" d=\"m-9.8,174.4s-2.8,22.4,0.4,30.8,2.4,10.4,1.6,14.4,3.6,14,9.2,20l12,1.6s15.2-3.6,24.4-0.8c0,0,8.994,1.34,12.4-13.6,0,0,4.8-6.4,12-9.2s14.4-44.4,10.4-52.4-18.4-12.4-34.4,3.2-18-1.2-48,6z\"/>\n   </g>\n   <g id=\"g166\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path168\" d=\"m-8.2,249.2s-0.8-2-5.2-2.4c0,0-22.4-3.6-30.8-16,0,0-6.8-5.6-2.4,6,0,0,10.4,20.4,17.2,23.2,0,0,16.4,4,21.2-10.8z\"/>\n   </g>\n   <g id=\"g170\" fill=\"#cc3f4c\">\n    <path id=\"path172\" d=\"m71.742,185.23c0.659-7.91,2.612-16.52,0.858-20.03-6.446-12.89-23.419-7.5-34.4,3.2-16,15.6-18-1.2-48,6,0,0-1.745,13.96-0.905,23.98,0,0,37.305-11.58,38.105-5.98,0,0,1.6-3.2,10.8-3.2s31.942-1.17,33.542-3.97z\"/>\n   </g>\n   <g id=\"g174\" stroke-width=\"2\" stroke=\"#a51926\">\n    <path id=\"path176\" d=\"m28.6,175.2s4.8,4.8,1.2,14.4c0,0-14.4,16-12.4,30\"/>\n   </g>\n   <g id=\"g178\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path180\" d=\"m-19.4,260s-4.4-12.8,4.4-6l3.6,3.6c-1.2,1.6-6.8,5.6-8,2.4z\"/>\n   </g>\n   <g id=\"g182\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path184\" d=\"m-14.36,261.2s-3.52-10.24,3.52-4.8l2.88,2.88c-4.56,1.28,0,3.84-6.4,1.92z\"/>\n   </g>\n   <g id=\"g186\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path188\" d=\"m-9.56,261.2s-3.52-10.24,3.52-4.8l2.88,2.88c-3.36,1.28,0,3.84-6.4,1.92z\"/>\n   </g>\n   <g id=\"g190\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path192\" d=\"m-2.96,261.4s-3.52-10.24,3.52-4.8c0,0,4.383,2.33,2.881,2.88-2.961,1.08,0,3.84-6.401,1.92z\"/>\n   </g>\n   <g id=\"g194\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path196\" d=\"m3.52,261.32s-3.52-10.24,3.521-4.8l2.88,2.88c-0.96,1.28,0,3.84-6.401,1.92z\"/>\n   </g>\n   <g id=\"g198\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path200\" d=\"m10.2,262s-4.8-12.4,4.4-6l3.6,3.6c-1.2,1.6,0,4.8-8,2.4z\"/>\n   </g>\n   <g id=\"g202\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path204\" d=\"m-18.2,244.8s13.2-2.8,19.2,0.4c0,0,6,1.2,7.2,0.8s4.4-0.8,4.4-0.8\"/>\n   </g>\n   <g id=\"g206\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path208\" d=\"m15.8,253.6s12-13.6,24-9.2c7.016,2.57,6-0.8,6.8-3.6s1-7,6-10\"/>\n   </g>\n   <g id=\"g210\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path212\" d=\"m33,237.6s-4-10.8-6.8,2-6,16.4-7.6,19.2c0,0,0,5.2,8.4,4.8,0,0,10.8-0.4,11.2-3.2s-1.2-14.4-5.2-22.8z\"/>\n   </g>\n   <g id=\"g214\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path216\" d=\"m47,244.8s3.6-2.4,6-1.2\"/>\n   </g>\n   <g id=\"g218\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path220\" d=\"m53.5,228.4s2.9-4.9,7.7-5.7\"/>\n   </g>\n   <g id=\"g222\" fill=\"#b2b2b2\">\n    <path id=\"path224\" d=\"m-25.8,265.2s18,3.2,22.4,1.6l0.4,2-20.8-1.2s-11.6-5.6-2-2.4z\"/>\n   </g>\n   <g id=\"g226\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path228\" d=\"m-11.8,172,19.6,0.8s7.2,30.8,3.6,38.4c0,0-1.2,2.8-4-2.8,0,0-18.4-32.8-21.6-34.8s1.2-1.6,2.4-1.6z\"/>\n   </g>\n   <g id=\"g230\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path232\" d=\"m-88.9,169.3s8.9,1.7,21.5,4.3c0,0,4.8,22.4,8,27.2s-0.4,4.8-4,2-18.4-16.8-20.4-21.2-5.1-12.3-5.1-12.3z\"/>\n   </g>\n   <g id=\"g234\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path236\" d=\"m-67.039,173.82s5.8,1.55,6.809,3.76c1.008,2.22-1.202,5.51-1.202,5.51s-1,3.31-2.202,1.15c-1.202-2.17-4.074-9.83-3.405-10.42z\"/>\n   </g>\n   <g id=\"g238\" fill=\"#000\">\n    <path id=\"path240\" d=\"m-67,173.6s3.6,5.2,7.2,5.2,3.982-0.41,6.8,0.2c4.6,1,4.2-1,10.8,0.2,2.64,0.48,5.2-0.4,8,0.8s6,0.4,7.2-1.6,6-6.2,6-6.2-12.8,1.8-15.6,2.6c0,0-22.4,1.2-30.4-1.2z\"/>\n   </g>\n   <g id=\"g242\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path244\" d=\"m-22.4,173.8s-6.45,3.5-6.85,5.9,5.25,6.1,5.25,6.1,2.75,4.6,3.35,2.2-0.95-13.8-1.75-14.2z\"/>\n   </g>\n   <g id=\"g246\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path248\" d=\"m-59.885,179.26s7.007,11.19,7.224-0.02c0,0,0.557-1.26-1.203-1.28-6.075-0.07-4.554-4.18-6.021,1.3z\"/>\n   </g>\n   <g id=\"g250\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path252\" d=\"m-52.707,179.51s7.921,11.19,7.285-0.09c0,0,0.007-0.33-1.746-0.48-4.747-0.42-4.402-4.94-5.539,0.57z\"/>\n   </g>\n   <g id=\"g254\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path256\" d=\"m-45.494,179.52s7.96,10.63,7.291,0.96c0,0,0.119-1.23-1.535-1.53-3.892-0.71-4.103-3.95-5.756,0.57z\"/>\n   </g>\n   <g id=\"g258\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path260\" d=\"m-38.618,179.6s7.9,11.56,8.248,1.78c0,0,1.644-1.38-0.102-1.6-5.818-0.74-5.02-5.19-8.146-0.18z\"/>\n   </g>\n   <g id=\"g262\" fill=\"#e5e5b2\">\n    <path id=\"path264\" d=\"m-74.792,183.13-7.658-1.53c-2.6-5-4.7-11.15-4.7-11.15s6.35,1,18.85,3.8c0,0,0.876,3.32,2.348,9.11l-8.84-0.23z\"/>\n   </g>\n   <g id=\"g266\" fill=\"#e5e5b2\">\n    <path id=\"path268\" d=\"m-9.724,178.47c-1.666-2.51-2.983-4.26-3.633-4.67-3.013-1.88,1.13-1.51,2.259-1.51l18.454,0.76s0.524,2.24,1.208,5.63c0,0-10.088-2.01-18.288-0.21z\"/>\n   </g>\n   <g id=\"g270\" fill=\"#cc7226\">\n    <path id=\"path272\" d=\"m43.88,40.321c27.721,3.96,53.241-31.68,55.001-41.361,1.759-9.68-8.36-21.56-8.36-21.56,1.32-3.08-3.52-17.16-8.8-26.4s-21.181-8.266-38.721-9.24c-15.84-0.88-34.32,22.44-35.64,24.2s4.84,40.041,6.16,45.761-1.32,32.12-1.32,32.12c34.24-9.1,3.96-7.48,31.68-3.52z\"/>\n   </g>\n   <g id=\"g274\" fill=\"#ea8e51\">\n    <path id=\"path276\" d=\"m8.088-33.392c-1.296,1.728,4.752,39.313,6.048,44.929s-1.296,31.536-1.296,31.536c32.672-8.88,3.888-7.344,31.104-3.456,27.217,3.888,52.273-31.104,54.001-40.609,1.728-9.504-8.208-21.168-8.208-21.168,1.296-3.024-3.456-16.848-8.64-25.92s-20.795-8.115-38.017-9.072c-15.552-0.864-33.696,22.032-34.992,23.76z\"/>\n   </g>\n   <g id=\"g278\" fill=\"#efaa7c\">\n    <path id=\"path280\" d=\"m8.816-32.744c-1.272,1.696,4.664,38.585,5.936,44.097s-1.272,30.952-1.272,30.952c31.404-9.16,3.816-7.208,30.528-3.392,26.713,3.816,51.305-30.528,53.001-39.857,1.696-9.328-8.056-20.776-8.056-20.776,1.272-2.968-3.392-16.536-8.48-25.44s-20.41-7.965-37.313-8.904c-15.264-0.848-33.072,21.624-34.344,23.32z\"/>\n   </g>\n   <g id=\"g282\" fill=\"#f4c6a8\">\n    <path id=\"path284\" d=\"m9.544-32.096c-1.248,1.664,4.576,37.857,5.824,43.265s-1.248,30.368-1.248,30.368c29.436-9.04,3.744-7.072,29.952-3.328,26.209,3.744,50.337-29.952,52.001-39.104,1.664-9.153-7.904-20.385-7.904-20.385,1.248-2.912-3.328-16.224-8.32-24.96s-20.025-7.815-36.609-8.736c-14.976-0.832-32.448,21.216-33.696,22.88z\"/>\n   </g>\n   <g id=\"g286\" fill=\"#f9e2d3\">\n    <path id=\"path288\" d=\"m10.272-31.448c-1.224,1.632,4.488,37.129,5.712,42.433s-1.224,29.784-1.224,29.784c27.868-8.92,3.672-6.936,29.376-3.264,25.705,3.672,49.369-29.376,51.001-38.353,1.632-8.976-7.752-19.992-7.752-19.992,1.224-2.856-3.264-15.912-8.16-24.48s-19.64-7.665-35.905-8.568c-14.688-0.816-31.824,20.808-33.048,22.44z\"/>\n   </g>\n   <g id=\"g290\" fill=\"#FFF\">\n    <path id=\"path292\" d=\"M44.2,36.8c25.2,3.6,48.401-28.8,50.001-37.6s-7.6-19.6-7.6-19.6c1.2-2.8-3.201-15.6-8.001-24s-19.254-7.514-35.2-8.4c-14.4-0.8-31.2,20.4-32.4,22s4.4,36.4,5.6,41.6-1.2,29.2-1.2,29.2c25.5-8.6,3.6-6.8,28.8-3.2z\"/>\n   </g>\n   <g id=\"g294\" fill=\"#CCC\">\n    <path id=\"path296\" d=\"m90.601,2.8s-27.801,7.6-39.401,6c0,0-15.8-6.6-24.6,15.2,0,0-3.6,7.2-5.6,9.2s69.601-30.4,69.601-30.4z\"/>\n   </g>\n   <g id=\"g298\" fill=\"#000\">\n    <path id=\"path300\" d=\"m94.401,0.6s-29.001,12.2-39.001,11.8c0,0-16.4-4.6-24.8,10,0,0-8.4,9.2-11.6,10.8,0,0-0.4,1.6,6-2.4l10.4,5.2s14.8,9.6,24.4-6.4c0,0,4-11.2,4-13.2s21.2-7.6,22.801-8c1.6-0.4,8.2-4.6,7.8-7.8z\"/>\n   </g>\n   <g id=\"g302\" fill=\"#99cc32\">\n    <path id=\"path304\" d=\"m47,36.514c-6.872,0-15.245-3.865-15.245-10.114,0-6.248,8.373-12.513,15.245-12.513,6.874,0,12.446,5.065,12.446,11.313,0,6.249-5.572,11.314-12.446,11.314z\"/>\n   </g>\n   <g id=\"g306\" fill=\"#659900\">\n    <path id=\"path308\" d=\"m43.377,19.83c-4.846,0.722-9.935,2.225-9.863,2.009,1.54-4.619,7.901-7.952,13.486-7.952,4.296,0,8.084,1.978,10.32,4.988,0,0-5.316-0.33-13.943,0.955z\"/>\n   </g>\n   <g id=\"g310\" fill=\"#FFF\">\n    <path id=\"path312\" d=\"m55.4,19.6s-4.4-3.2-4.4-1c0,0,3.6,4.4,4.4,1z\"/>\n   </g>\n   <g id=\"g314\" fill=\"#000\">\n    <path id=\"path316\" d=\"m45.4,27.726c-2.499,0-4.525-2.026-4.525-4.526,0-2.499,2.026-4.525,4.525-4.525,2.5,0,4.526,2.026,4.526,4.525,0,2.5-2.026,4.526-4.526,4.526z\"/>\n   </g>\n   <g id=\"g318\" fill=\"#cc7226\">\n    <path id=\"path320\" d=\"m-58.6,14.4s-3.2-21.2-0.8-25.6c0,0,10.8-10,10.4-13.6,0,0-0.4-18-1.6-18.8s-8.8-6.8-14.8-0.4c0,0-10.4,18-9.6,24.4v2s-7.6-0.4-9.2,1.6c0,0-1.2,5.2-2.4,5.6,0,0-2.8,2.4-0.8,5.2,0,0-2,2.4-1.6,6.4l7.6,4s2,14.4,12.8,19.6c4.836,2.329,8-4.4,10-10.4z\"/>\n   </g>\n   <g id=\"g322\" fill=\"#FFF\">\n    <path id=\"path324\" d=\"m-59.6,12.56s-2.88-19.08-0.72-23.04c0,0,9.72-9,9.36-12.24,0,0-0.36-16.2-1.44-16.92s-7.92-6.12-13.32-0.36c0,0-9.36,16.2-8.64,21.96v1.8s-6.84-0.36-8.28,1.44c0,0-1.08,4.68-2.16,5.04,0,0-2.52,2.16-0.72,4.68,0,0-1.8,2.16-1.44,5.76l6.84,3.6s1.8,12.96,11.52,17.64c4.352,2.095,7.2-3.96,9-9.36z\"/>\n   </g>\n   <g id=\"g326\" fill=\"#eb955c\">\n    <path id=\"path328\" d=\"m-51.05-42.61c-1.09-0.86-8.58-6.63-14.43-0.39,0,0-10.14,17.55-9.36,23.79v1.95s-7.41-0.39-8.97,1.56c0,0-1.17,5.07-2.34,5.46,0,0-2.73,2.34-0.78,5.07,0,0-1.95,2.34-1.56,6.24l7.41,3.9s1.95,14.04,12.48,19.11c4.714,2.27,7.8-4.29,9.75-10.14,0,0-3.12-20.67-0.78-24.96,0,0,10.53-9.75,10.14-13.26,0,0-0.39-17.55-1.56-18.33z\"/>\n   </g>\n   <g id=\"g330\" fill=\"#f2b892\">\n    <path id=\"path332\" d=\"m-51.5-41.62c-0.98-0.92-8.36-6.46-14.06-0.38,0,0-9.88,17.1-9.12,23.18v1.9s-7.22-0.38-8.74,1.52c0,0-1.14,4.94-2.28,5.32,0,0-2.66,2.28-0.76,4.94,0,0-1.9,2.28-1.52,6.08l7.22,3.8s1.9,13.68,12.16,18.62c4.594,2.212,7.6-4.18,9.5-9.88,0,0-3.04-20.14-0.76-24.32,0,0,10.26-9.5,9.88-12.92,0,0-0.38-17.1-1.52-17.86z\"/>\n   </g>\n   <g id=\"g334\" fill=\"#f8dcc8\">\n    <path id=\"path336\" d=\"m-51.95-40.63c-0.87-0.98-8.14-6.29-13.69-0.37,0,0-9.62,16.65-8.88,22.57v1.85s-7.03-0.37-8.51,1.48c0,0-1.11,4.81-2.22,5.18,0,0-2.59,2.22-0.74,4.81,0,0-1.85,2.22-1.48,5.92l7.03,3.7s1.85,13.32,11.84,18.13c4.473,2.154,7.4-4.07,9.25-9.62,0,0-2.96-19.61-0.74-23.68,0,0,9.99-9.25,9.62-12.58,0,0-0.37-16.65-1.48-17.39z\"/>\n   </g>\n   <g id=\"g338\" fill=\"#FFF\">\n    <path id=\"path340\" d=\"m-59.6,12.46s-2.88-18.98-0.72-22.94c0,0,9.72-9,9.36-12.24,0,0-0.36-16.2-1.44-16.92-0.76-1.04-7.92-6.12-13.32-0.36,0,0-9.36,16.2-8.64,21.96v1.8s-6.84-0.36-8.28,1.44c0,0-1.08,4.68-2.16,5.04,0,0-2.52,2.16-0.72,4.68,0,0-1.8,2.16-1.44,5.76l6.84,3.6s1.8,12.96,11.52,17.64c4.352,2.095,7.2-4.06,9-9.46z\"/>\n   </g>\n   <g id=\"g342\" fill=\"#CCC\">\n    <path id=\"path344\" d=\"m-62.7,6.2s-21.6-10.2-22.5-11c0,0,9.1,8.2,9.9,8.2s12.6,2.8,12.6,2.8z\"/>\n   </g>\n   <g id=\"g346\" fill=\"#000\">\n    <path id=\"path348\" d=\"m-79.8,0s18.4,3.6,18.4,8c0,2.912-0.243,16.331-5.6,14.8-8.4-2.4-4.8-16.8-12.8-22.8z\"/>\n   </g>\n   <g id=\"g350\" fill=\"#99cc32\">\n    <path id=\"path352\" d=\"m-71.4,3.8s8.978,1.474,10,4.2c0.6,1.6,1.263,9.908-4.2,11-4.552,0.911-6.782-9.31-5.8-15.2z\"/>\n   </g>\n   <g id=\"g354\" fill=\"#000\">\n    <path id=\"path356\" d=\"m14.595,46.349c-0.497-1.742,0.814-1.611,2.605-2.149,2-0.6,14.2-4.4,15-7s14,1.8,14,1.8c1.8,0.8,6.2,3.4,6.2,3.4,4.8,1.2,11.4,1.6,11.4,1.6,2.4,1,5.8,3.8,5.8,3.8,14.6,10.2,27.001,3,27.001,3,19.999-6.6,13.999-23.8,13.999-23.8-3-9,0.2-12.4,0.2-12.4,0.2-3.8,7.4,2.6,7.4,2.6,2.6,4.2,3.4,9.2,3.4,9.2,8,11.2,4.6-6.6,4.6-6.6,0.2-1-2.6-4.6-2.6-5.8s-1.8-4.6-1.8-4.6c-3-3.4-0.6-10.4-0.6-10.4,1.8-13.8-0.4-12-0.4-12-1.2-1.8-10.4,8.2-10.4,8.2-2.2,3.4-8.2,5-8.2,5-2.799,1.8-6.199,0.4-6.199,0.4-2.6-0.4-8.2,6.6-8.2,6.6,2.8-0.2,5.2,4.2,7.6,4.4s4.2-2.4,5.799-3c1.6-0.6,4.4,5.2,4.4,5.2,0.4,2.6-5.2,7.4-5.2,7.4-0.4,4.6-1.999,3-1.999,3-3-0.6-4.2,3.2-5.2,7.8s-5.2,5-5.2,5c-1.6,7.4-2.801,4.4-2.801,4.4-0.2-5.6-6.2,0.2-6.2,0.2-1.2,2-5.8-0.2-5.8-0.2-6.8-2-4.4-4-4.4-4,1.8-2.2,13,0,13,0,2.2-1.6-5.8-5.6-5.8-5.6-0.6-1.8,0.4-6.2,0.4-6.2,1.2-3.2,8-8.8,8-8.8,9.401-1.2,6.601-2.8,6.601-2.8-6.2-5.2-12.001,2.4-12.001,2.4-2.2,6.2-19.6,21.2-19.6,21.2-4.8,3.4-2.2-3.4-6.2,0s-24.6-5.6-24.6-5.6c-11.562-1.193-14.294,14.549-17.823,11.429,0,0,5.418,8.52,3.818,2.92z\"/>\n   </g>\n   <g id=\"g358\" fill=\"#000\">\n    <path id=\"path360\" d=\"m209.4-120s-25.6,8-28.4,26.8c0,0-2.4,22.8,18,40.4,0,0,0.4,6.4,2.4,9.6,0,0-1.6,4.8,17.2-2.8l27.2-8.4s6.4-2.4,11.6-11.2,20.4-27.6,16.8-52.8c0,0,1.2-11.2-4.8-11.6,0,0-8.4-1.6-15.6,6,0,0-6.8,3.2-9.2,2.8l-35.2,1.2z\"/>\n   </g>\n   <g id=\"g362\" fill=\"#000\">\n    <path id=\"path364\" d=\"m264.02-120.99s2.1-8.93-2.74-4.09c0,0-7.04,5.72-14.52,5.72,0,0-14.52,2.2-18.92,15.4,0,0-3.96,26.84,3.96,32.56,0,0,4.84,7.48,11.88,0.88s22.54-36.83,20.34-50.47z\"/>\n   </g>\n   <g id=\"g366\" fill=\"#323232\">\n    <path id=\"path368\" d=\"m263.65-120.63s2.09-8.75-2.66-3.99c0,0-6.92,5.61-14.26,5.61,0,0-14.26,2.16-18.58,15.12,0,0-3.89,26.354,3.89,31.97,0,0,4.75,7.344,11.66,0.864,6.92-6.48,22.11-36.184,19.95-49.574z\"/>\n   </g>\n   <g id=\"g370\" fill=\"#666\">\n    <path id=\"path372\" d=\"m263.27-120.27s2.08-8.56-2.58-3.9c0,0-6.78,5.51-13.99,5.51,0,0-14,2.12-18.24,14.84,0,0-3.81,25.868,3.82,31.38,0,0,4.66,7.208,11.45,0.848,6.78-6.36,21.66-35.538,19.54-48.678z\"/>\n   </g>\n   <g id=\"g374\" fill=\"#999\">\n    <path id=\"path376\" d=\"m262.9-119.92s2.07-8.37-2.51-3.79c0,0-6.65,5.41-13.73,5.41,0,0-13.72,2.08-17.88,14.56,0,0-3.75,25.372,3.74,30.78,0,0,4.58,7.072,11.23,0.832,6.66-6.24,21.23-34.892,19.15-47.792z\"/>\n   </g>\n   <g id=\"g378\" fill=\"#CCC\">\n    <path id=\"path380\" d=\"m262.53-119.56s2.06-8.18-2.43-3.7c0,0-6.53,5.31-13.47,5.31,0,0-13.46,2.04-17.54,14.28,0,0-3.67,24.886,3.67,30.19,0,0,4.49,6.936,11.02,0.816,6.52-6.12,20.79-34.246,18.75-46.896z\"/>\n   </g>\n   <g id=\"g382\" fill=\"#FFF\">\n    <path id=\"path384\" d=\"m262.15-119.2s2.05-8-2.35-3.6c0,0-6.4,5.2-13.2,5.2,0,0-13.2,2-17.2,14,0,0-3.6,24.4,3.6,29.6,0,0,4.4,6.8,10.8,0.8s20.35-33.6,18.35-46z\"/>\n   </g>\n   <g id=\"g386\" fill=\"#992600\">\n    <path id=\"path388\" d=\"m50.6,84s-20.4-19.2-28.4-20c0,0-34.4-4-49.2,14,0,0,17.6-20.4,45.2-14.8,0,0-21.6-4.4-34-1.2l-26.4,14-2.8,4.8s4-14.8,22.4-20.8c0,0,22.8-4.8,33.6,0,0,0-21.6-6.8-31.6-4.8,0,0-30.4-2.4-43.2,24,0,0,4-14.4,18.8-21.6,0,0,13.6-8.8,34-6,0,0,14.4,3.2,19.6,5.6s4-0.4-4.4-5.2c0,0-5.6-10-19.6-9.6,0,0-42.8,3.6-53.2,15.6,0,0,13.6-11.2,24-14,0,0,22.4-8,30.8-7.2,0,0,24.8,1,32.4-3,0,0-11.2,5-8,8.2s10,10.8,10,12,24.2,23.3,27.8,27.7l2.2,2.3z\"/>\n   </g>\n   <g id=\"g390\" fill=\"#CCC\">\n    <path id=\"path392\" d=\"m189,278s-15.5-36.5-28-46c0,0,26,16,29.5,34,0,0,0,10-1.5,12z\"/>\n   </g>\n   <g id=\"g394\" fill=\"#CCC\">\n    <path id=\"path396\" d=\"m236,285.5s-26.5-55-45-79c0,0,43.5,37.5,48.5,64l0.5,5.5-3-2.5s-0.5,9-1,12z\"/>\n   </g>\n   <g id=\"g398\" fill=\"#CCC\">\n    <path id=\"path400\" d=\"m292.5,237s-62.5-59.5-64-62c0,0,60.5,66,63.5,73.5,0,0-2-9,0.5-11.5z\"/>\n   </g>\n   <g id=\"g402\" fill=\"#CCC\">\n    <path id=\"path404\" d=\"m104,280.5s19.5-52,38.5-29.5c0,0,15,10,14.5,13,0,0-4-6.5-22-6,0,0-19-3-31,22.5z\"/>\n   </g>\n   <g id=\"g406\" fill=\"#CCC\">\n    <path id=\"path408\" d=\"m294.5,153s-45-28.5-52.5-30c-11.81-2.36,49.5,29,54.5,39.5,0,0,2-2.5-2-9.5z\"/>\n   </g>\n   <g id=\"g410\" fill=\"#000\">\n    <path id=\"path412\" d=\"m143.8,259.6s20.4-2,27.2-8.8l4.4,3.6,17.6-38.4,3.6,5.2s14.4-14.8,13.6-22.8,12.8,6,12.8,6-0.8-11.6,6.4-4.8c0,0-2.4-15.6,6-7.6,0,0-10.54-30.16,12-4.4,5.6,6.4,1.2-0.4,1.2-0.4s-26-48-4.4-33.6c0,0,2-22.8,0.8-27.2s-3.2-26.8-8-32,0.4-6.8,6-1.6c0,0-11.2-24,2-12,0,0-3.6-15.2-8-18,0,0-5.6-17.2,9.6-6.4,0,0-4.4-12.4-7.6-15.6,0,0-11.6-27.6-4.4-22.8l4.4,3.6s-6.8-14-0.4-9.6,6.4,4,6.4,4-21.2-33.2-0.8-15.6c0,0-8.16-13.918-11.6-20.8,0,0-18.8-20.4-4.4-14l4.8,1.6s-8.8-10-16.8-11.6,2.4-8,8.8-6,22,9.6,22,9.6,12.8,18.8,16.8,19.2c0,0-20-7.6-14,0.4,0,0,14.4,14,7.2,13.6,0,0-6,7.2-1.2,16,0,0-18.46-18.391-3.6,7.2l6.8,16.4s-24.4-24.8-13.2-2.8c0,0,17.2,23.6,19.2,24s6.4,9.2,6.4,9.2l-4.4-2,5.2,8.8s-11.2-12-5.2,1.2l5.6,14.4s-20.4-22-6.8,7.6c0,0-16.4-5.2-7.6,12,0,0-1.6,16-1.2,21.2s1.6,33.6-2.8,41.6,6,27.2,8,31.2,5.6,14.8-3.2,5.6-4.4-3.6-2.4,5.2,8,24.4,7.2,30c0,0-1.2,1.2-4.4-2.4,0,0-14.8-22.8-13.2-8.4,0,0-1.2,8-4.4,16.8,0,0-3.2,10.8-3.2,2,0,0-3.2-16.8-6-9.2s-6.4,13.6-9.2,16-8-20.4-9.2-10c0,0-12-12.4-16.8,4l-11.6,16.4s-0.4-12.4-1.6-6.4c0,0-30,6-40.4,1.6z\"/>\n   </g>\n   <g id=\"g414\" fill=\"#000\">\n    <path id=\"path416\" d=\"m109.4-97.2s-11.599-8-15.599-7.6,27.599-8.8,68.799,18.8c0,0,4.8,2.8,8.4,2.4,0,0,3.2,2.4,0.4,6,0,0-8.8,9.6,2.4,20.8,0,0,18.4,6.8,12.8-2,0,0,10.8,4,13.2,8s1.2,0,1.2,0l-12.4-12.4s-5.2-2-8-10.4-5.2-18.4-0.8-21.6c0,0-4,4.4-3.2,0.4s4.4-7.6,6-8,18-16.2,24.8-16.6c0,0-9.2,1.4-12.2,0.4s-29.6-12.4-35.6-13.6c0,0-16.8-6.6-4.8-4.6,0,0,35.8,3.8,54,17,0,0-7.2-8.4-25.6-15.4,0,0-22.2-12.6-57.4-7.6,0,0-17.8,3.2-25.6,5,0,0-2.599-0.6-3.199-1s-12.401-9.4-40.001-2.4c0,0-17,4.6-25.6,9.4,0,0-15.2,1.2-18.8,4.4,0,0-18.6,14.6-20.6,15.4s-13.4,8.4-14.2,8.8c0,0,24.6-6.6,27-9s19.8-5,22.2-3.6,10.8,0.8,1.2,1.4c0,0,75.6,14.8,76.4,16.8s4.8,0.8,4.8,0.8z\"/>\n   </g>\n   <g id=\"g418\" fill=\"#cc7226\">\n    <path id=\"path420\" d=\"m180.8-106.4s-10.2-7.4-12.2-7.4-14.4-10.2-18.6-9.8-16.4-9.6-43.8-1.4c0,0-0.6-2,3-2.8,0,0,6.4-2.2,6.8-2.8,0,0,20.2-4.2,27.4-0.6,0,0,9.2,2.6,15.4,8.8,0,0,11.2,3.2,14.4,2.2,0,0,8.8,2.2,9.2,4,0,0,5.8,3,4,5.6,0,0,0.4,1.6-5.6,4.2z\"/>\n   </g>\n   <g id=\"g422\" fill=\"#cc7226\">\n    <path id=\"path424\" d=\"m168.33-108.51c0.81,0.63,1.83,0.73,2.43,1.54,0.24,0.31-0.05,0.64-0.37,0.74-1.04,0.31-2.1-0.26-3.24,0.33-0.4,0.21-1.04,0.03-1.6-0.12-1.63-0.44-3.46-0.47-5.15,0.22-1.98-1.13-4.34-0.54-6.42-1.55-0.06-0.02-0.28,0.32-0.36,0.3-3.04-1.15-6.79-0.87-9.22-3.15-2.43-0.41-4.78-0.87-7.21-1.55-1.82-0.51-3.23-1.5-4.85-2.33-1.38-0.71-2.83-1.23-4.37-1.61-1.86-0.45-3.69-0.34-5.58-0.86-0.1-0.02-0.29,0.32-0.37,0.3-0.32-0.11-0.62-0.69-0.79-0.64-1.68,0.52-3.17-0.45-4.83-0.11-1.18-1.22-2.9-0.98-4.45-1.42-2.97-0.85-6.12,0.42-9.15-0.58,4.11-1.84,8.8-0.61,12.86-2.68,2.33-1.18,4.99-0.08,7.56-0.84,0.49-0.15,1.18-0.35,1.58,0.32,0.14-0.14,0.32-0.37,0.38-0.35,2.44,1.16,4.76,2.43,7.24,3.5,0.34,0.15,0.88-0.09,1.13,0.12,1.52,1.21,3.46,1.11,4.85,2.33,1.7-0.5,3.49-0.12,5.22-0.75,0.08-0.02,0.31,0.32,0.34,0.3,1.14-0.75,2.29-0.48,3.18-0.18,0.34,0.12,1,0.37,1.31,0.44,1.12,0.27,1.98,0.75,3.16,0.94,0.11,0.02,0.3-0.32,0.37-0.3,1.12,0.44,2.16,0.39,2.82,1.55,0.14-0.14,0.3-0.37,0.38-0.35,1.03,0.34,1.68,1.1,2.78,1.34,0.48,0.1,1.1,0.73,1.67,0.91,2.39,0.73,4.24,2.26,6.43,3.15,0.76,0.31,1.64,0.55,2.27,1.04z\"/>\n   </g>\n   <g id=\"g426\" fill=\"#cc7226\">\n    <path id=\"path428\" d=\"m91.696-122.74c-2.518-1.72-4.886-2.83-7.328-4.62-0.181-0.13-0.541,0.04-0.743-0.08-1.007-0.61-1.895-1.19-2.877-1.89-0.539-0.38-1.36-0.37-1.868-0.63-2.544-1.29-5.173-1.85-7.68-3.04,0.682-0.64,1.804-0.39,2.4-1.2,0.195,0.28,0.433,0.56,0.786,0.37,1.678-0.9,3.528-1.05,5.204-0.96,1.704,0.09,3.424,0.39,5.199,0.67,0.307,0.04,0.506,0.56,0.829,0.66,2.228,0.66,4.617,0.14,6.736,0.98,1.591,0.63,3.161,1.45,4.4,2.72,0.252,0.26-0.073,0.57-0.353,0.76,0.388-0.11,0.661,0.1,0.772,0.41,0.084,0.24,0.084,0.54,0,0.78-0.112,0.31-0.391,0.41-0.765,0.46-1.407,0.19,0.365-1.19-0.335-0.74-1.273,0.82-0.527,2.22-1.272,3.49-0.28-0.19-0.51-0.41-0.4-0.8,0.234,0.52-0.368,0.81-0.536,1.13-0.385,0.72-1.284,2.14-2.169,1.53z\"/>\n   </g>\n   <g id=\"g430\" fill=\"#cc7226\">\n    <path id=\"path432\" d=\"m59.198-115.39c-3.154-0.79-6.204-0.68-9.22-1.96-0.067-0.02-0.29,0.32-0.354,0.3-1.366-0.6-2.284-1.56-3.36-2.61-0.913-0.89-2.571-0.5-3.845-0.99-0.324-0.12-0.527-0.63-0.828-0.67-1.219-0.16-2.146-1.11-3.191-1.68,2.336-0.8,4.747-0.76,7.209-1.15,0.113-0.02,0.258,0.31,0.391,0.31,0.136,0,0.266-0.23,0.4-0.36,0.195,0.28,0.497,0.61,0.754,0.35,0.548-0.54,1.104-0.35,1.644-0.31,0.144,0.01,0.269,0.32,0.402,0.32,0.136,0,0.267-0.32,0.4-0.32,0.136,0,0.267,0.32,0.4,0.32,0.136,0,0.266-0.23,0.4-0.36,0.692,0.78,1.577,0.23,2.399,0.41,1.038,0.22,1.305,1.37,2.379,1.67,4.715,1.3,8.852,3.45,13.215,5.54,0.307,0.14,0.517,0.39,0.407,0.78,0.267,0,0.58-0.09,0.77,0.04,1.058,0.74,2.099,1.28,2.796,2.38,0.216,0.34-0.113,0.75-0.346,0.7-4.429-1-8.435-1.61-12.822-2.71z\"/>\n   </g>\n   <g id=\"g434\" fill=\"#cc7226\">\n    <path id=\"path436\" d=\"m45.338-71.179c-1.592-1.219-2.176-3.25-3.304-5.042-0.214-0.34,0.06-0.654,0.377-0.743,0.56-0.159,1.103,0.319,1.512,0.521,1.745,0.862,3.28,2.104,5.277,2.243,1.99,2.234,6.25,2.619,6.257,6,0.001,0.859-1.427-0.059-1.857,0.8-2.451-1.003-4.84-0.9-7.22-2.367-0.617-0.381-0.287-0.834-1.042-1.412z\"/>\n   </g>\n   <g id=\"g438\" fill=\"#cc7226\">\n    <path id=\"path440\" d=\"m17.8-123.76c0.135,0,7.166,0.24,7.149,0.35-0.045,0.31-7.775,1.36-8.139,1.19-0.164-0.08-7.676,2.35-7.81,2.22,0.268-0.14,8.534-3.76,8.8-3.76z\"/>\n   </g>\n   <g id=\"g442\" fill=\"#000\">\n    <path id=\"path444\" d=\"m33.2-114s-14.8,1.8-19.2,3-23,8.8-26,10.8c0,0-13.4,5.4-30.4,25.4,0,0,7.6-3.4,9.8-6.2,0,0,13.6-12.6,13.4-10,0,0,12.2-8.6,11.6-6.4,0,0,24.4-11.2,22.4-8,0,0,21.6-4.6,20.6-2.6,0,0,18.8,4.4,16,4.6,0,0-5.8,1.2,0.6,4.8,0,0-3.4,4.4-8.8,0.4s-2.4-1.8-7.4-0.8c0,0-2.6,0.8-7.2-3.2,0,0-5.6-4.6-14.4-1,0,0-30.6,12.6-32.6,13.2,0,0-3.6,2.8-6,6.4,0,0-5.8,4.4-8.8,5.8,0,0-12.8,11.6-14,13,0,0-3.4,5.2-4.2,5.6,0,0,6.4-3.8,8.4-5.8,0,0,14-10,19.4-10.8,0,0,4.4-3,5.2-4.4,0,0,14.4-9.2,18.6-9.2,0,0,9.2,5.2,11.6-1.8,0,0,5.8-1.8,11.4-0.6,0,0,3.2-2.6,2.4-4.8,0,0,1.6-1.8,2.6,2,0,0,3.4,3.6,8.2,1.6,0,0,4-0.2,2,2.2,0,0-4.4,3.8-16.2,4,0,0-12.4,0.6-28.8,8.2,0,0-29.8,10.4-39,20.8,0,0-6.4,8.8-11.8,10,0,0-5.8,0.8-11.8,8.2,0,0,9.8-5.8,18.8-5.8,0,0,4-2.4,0.2,1.2,0,0-3.6,7.6-2,13,0,0-0.6,5.2-1.4,6.8,0,0-7.8,12.8-7.8,15.2s1.2,12.2,1.6,12.8-1-1.6,2.8,0.8,6.6,4,7.4,6.8-2-5.4-2.2-7.2-4.4-9-3.6-11.4c0,0,1,1,1.8,2.4,0,0-0.6-0.6,0-4.2,0,0,0.8-5.2,2.2-8.4s3.4-7,3.8-7.8,0.4-6.6,1.8-4l3.4,2.6s-2.8-2.6-0.6-4.8c0,0-1-5.6,0.8-8.2,0,0,7-8.4,8.6-9.4s0.2-0.6,0.2-0.6,6-4.2,0.2-2.6c0,0-4,1.6-7,1.6,0,0-7.6,2-3.6-2.2s14-9.6,17.8-9.4l0.8,1.6,11.2-2.4-1.2,0.8s-0.2-0.2,4-0.6,10,1,11.4-0.8,4.8-2.8,4.4-1.4-0.6,3.4-0.6,3.4,5-5.8,4.4-3.6-8.8,7.4-10.2,13.6l10.4-8.2,3.6-3s3.6,2.2,3.8,0.6,4.8-7.4,6-7.2,3.2-2.6,3,0,7.4,8,7.4,8,3.2-1.8,4.6-0.4,5.6-19.8,5.6-19.8l25-10.6,43.6-3.4-16.999-6.8-61.001-11.4z\"/>\n   </g>\n   <g id=\"g446\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path448\" d=\"m51.4,85s-15-16.8-23.4-19.4c0,0-13.4-6.8-38,1\"/>\n   </g>\n   <g id=\"g450\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path452\" d=\"m24.8,64.2s-25.2-8-40.6-3.8c0,0-18.4,2-26.8,15.8\"/>\n   </g>\n   <g id=\"g454\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path456\" d=\"m21.2,63s-17-7.2-31.8-9.4c0,0-16.6-2.6-33.2,4.6,0,0-12.2,6-17.6,16.2\"/>\n   </g>\n   <g id=\"g458\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path460\" d=\"m22.2,63.4s-15.4-11-16.4-12.4c0,0-7-11-20-11.4,0,0-21.4,0.8-38.6,8.8\"/>\n   </g>\n   <g id=\"g462\" fill=\"#000\">\n    <path id=\"path464\" d=\"M20.895,54.407c1.542,1.463,28.505,30.393,28.505,30.393,35.2,36.6,7.2,2.4,7.2,2.4-7.6-4.8-16.8-23.6-16.8-23.6-1.2-2.8,14,7.2,14,7.2,4,0.8,17.6,20,17.6,20-6.8-2.4-2,4.8-2,4.8,2.8,2,23.201,17.6,23.201,17.6,3.6,4,7.599,5.6,7.599,5.6,14-5.2,7.6,8,7.6,8,2.4,6.8,8-4.8,8-4.8,11.2-16.8-5.2-14.4-5.2-14.4-30,2.8-36.8-13.2-36.8-13.2-2.4-2.4,6.4,0,6.4,0,8.401,2-7.2-12.4-7.2-12.4,2.4,0,11.6,6.8,11.6,6.8,10.401,9.2,12.401,7.2,12.401,7.2,17.999-8.8,28.399-1.2,28.399-1.2,2,1.6-3.6,8.4-2,13.6s6.4,17.6,6.4,17.6c-2.4,1.6-2,12.4-2,12.4,16.8,23.2,7.2,21.2,7.2,21.2-15.6-0.4-0.8,7.2-0.8,7.2,3.2,2,12,9.2,12,9.2-2.8-1.2-4.4,4-4.4,4,4.8,4,2,8.8,2,8.8-6,1.2-7.2,5.2-7.2,5.2,6.8,8-3.2,8.4-3.2,8.4,3.6,4.4-1.2,16.4-1.2,16.4-4.8,0-11.2,5.6-11.2,5.6,2.4,4.8-8,10.4-8,10.4-8.4,1.6-5.6,8.4-5.6,8.4-7.999,6-10.399,22-10.399,22-0.8,10.4-3.2,13.6,2,11.6,5.199-2,4.399-14.4,4.399-14.4-4.799-15.6,38-31.6,38-31.6,4-1.6,4.8-6.8,4.8-6.8,2,0.4,10.8,8,10.8,8,7.6,11.2,8,2,8,2,1.2-3.6-0.4-9.6-0.4-9.6,6-21.6-8-28-8-28-10-33.6,4-25.2,4-25.2,2.8,5.6,13.6,10.8,13.6,10.8l3.6-2.4c-1.6-4.8,6.8-10.8,6.8-10.8,2.8,6.4,8.8-1.6,8.8-1.6,3.6-24.4,16-10,16-10,4,1.2,5.2-5.6,5.2-5.6,3.6-10.4,0-24,0-24,3.6-0.4,13.2,5.6,13.2,5.6,2.8-3.6-6.4-20.4-2.4-18s8.4,4,8.4,4c0.8-2-9.2-14.4-9.2-14.4-4.4-2.8-9.6-23.2-9.6-23.2,7.2,3.6-2.8-11.6-2.8-11.6,0-3.2,6-14.4,6-14.4-0.8-6.8,0-6.4,0-6.4,2.8,1.2,10.8,2.8,4-3.6s0.8-11.2,0.8-11.2c4.4-2.8-9.2-2.4-9.2-2.4-5.2-4.4-4.8-8.4-4.8-8.4,8,2-6.4-12.4-8.8-16s7.2-8.8,7.2-8.8c13.2-3.6,1.6-6.8,1.6-6.8-19.6,0.4-8.8-10.4-8.8-10.4,6,0.4,4.4-2,4.4-2-5.2-1.2-14.8-7.6-14.8-7.6-4-3.6-0.4-2.8-0.4-2.8,16.8,1.2-12-10-12-10,8,0-10-10.4-10-10.4-2-1.6-5.2-9.2-5.2-9.2-6-5.2-10.8-12-10.8-12-0.4-4.4-5.2-9.2-5.2-9.2-11.6-13.6-17.2-13.2-17.2-13.2-14.8-3.6-20-2.8-20-2.8l-52.8,4.4c-26.4,12.8-18.6,33.8-18.6,33.8,6.4,8.4,15.6,4.6,15.6,4.6,4.6-6.2,16.2-4,16.2-4,20.401,3.2,17.801-0.4,17.801-0.4-2.4-4.6-18.601-10.8-18.801-11.4s-9-4-9-4c-3-1.2-7.4-10.4-7.4-10.4-3.2-3.4,12.6,2.4,12.6,2.4-1.2,1,6.2,5,6.2,5,17.401-1,28.001,9.8,28.001,9.8,10.799,16.6,10.999,8.4,10.999,8.4,2.8-9.4-9-30.6-9-30.6,0.4-2,8.6,4.6,8.6,4.6,1.4-2,2.2,3.8,2.2,3.8,0.2,2.4,4,10.4,4,10.4,2.8,13,6.4,5.6,6.4,5.6l4.6,9.4c1.4,2.6-4.6,10.2-4.6,10.2-0.2,2.8,0.6,2.6-5,10.2s-2.2,12-2.2,12c-1.4,6.6,7.4,6.2,7.4,6.2,2.6,2.2,6,2.2,6,2.2,1.8,2,4.2,1.4,4.2,1.4,1.6-3.8,7.8-1.8,7.8-1.8,1.4-2.4,9.6-2.8,9.6-2.8,1-2.6,1.4-4.2,4.8-4.8s-21.2-43.6-21.2-43.6c6.4-0.8-1.8-13.2-1.8-13.2-2.2-6.6,9.2,8,11.4,9.4s3.2,3.6,1.6,3.4-3.4,2-2,2.2,14.4,15.2,17.8,25.4,9.4,14.2,15.6,20.2,5.4,30.2,5.4,30.2c-0.4,8.8,5.6,19.4,5.6,19.4,2,3.8-2.2,22-2.2,22-2,2.2-0.6,3-0.6,3,1,1.2,7.8,14.4,7.8,14.4-1.8-0.2,1.8,3.4,1.8,3.4,5.2,6-1.2,3-1.2,3-6-1.6,1,8.2,1,8.2,1.2,1.8-7.8-2.8-7.8-2.8-9.2-0.6,2.4,6.6,2.4,6.6,8.6,7.2-2.8,2.8-2.8,2.8-4.6-1.8-1.4,5-1.4,5,3.2,1.6,20.4,8.6,20.4,8.6,0.4,3.8-2.6,8.8-2.6,8.8,0.4,4-1.8,7.4-1.8,7.4-1.2,8.2-1.8,9-1.8,9-4.2,0.2-11.6,14-11.6,14-1.8,2.6-12,14.6-12,14.6-2,7-20-0.2-20-0.2-6.6,3.4-4.6,0-4.6,0-0.4-2.2,4.4-8.2,4.4-8.2,7-2.6,4.4-13.4,4.4-13.4,4-1.4-7.2-4.2-7-5.4s6-2.6,6-2.6c8-2,3.6-4.4,3.6-4.4-0.6-4,2.4-9.6,2.4-9.6,11.6-0.8,0-17,0-17-10.8-7.6-11.8-13.4-11.8-13.4,12.6-8.2,4.4-20.6,4.6-24.2s1.4-25.2,1.4-25.2c-2-6.2-5-19.8-5-19.8,2.2-5.2,9.6-17.8,9.6-17.8,2.8-4.2,11.6-9,9.4-12s-10-1.2-10-1.2c-7.8-1.4-7.2,3.8-7.2,3.8-1.6,1-2.4,6-2.4,6-0.72,7.933-9.6,14.2-9.6,14.2-11.2,6.2-2,10.2-2,10.2,6,6.6-3.8,6.8-3.8,6.8-11-1.8-2.8,8.4-2.8,8.4,10.8,12.8,7.8,15.6,7.8,15.6-10.2,1,2.4,10.2,2.4,10.2s-0.8-2-0.6-0.2,3.2,6,4,8-3.2,2.2-3.2,2.2c0.6,9.6-14.8,5.4-14.8,5.4l-1.6,0.2c-1.6,0.2-12.8-0.6-18.6-2.8s-12.599-2.2-12.599-2.2-4,1.8-11.601,1.6c-7.6-0.2-15.6,2.6-15.6,2.6-4.4-0.4,4.2-4.8,4.4-4.6s5.8-5.4-2.2-4.8c-21.797,1.635-32.6-8.6-32.6-8.6-2-1.4-4.6-4.2-4.6-4.2-10-2,1.4,12.4,1.4,12.4,1.2,1.4-0.2,2.4-0.2,2.4-0.8-1.6-8.6-7-8.6-7-2.811-0.973-4.174-2.307-6.505-4.793z\"/>\n   </g>\n   <g id=\"g466\" fill=\"#4c0000\">\n    <path id=\"path468\" d=\"m-3,42.8s11.6,5.6,14.2,8.4,16.6,14.2,16.6,14.2-5.4-2-8-3.8-13.4-10-13.4-10-3.8-6-9.4-8.8z\"/>\n   </g>\n   <g id=\"g470\" fill=\"#99cc32\">\n    <path id=\"path472\" d=\"M-61.009,11.603c0.337-0.148-0.187-2.86-0.391-3.403-1.022-2.726-10-4.2-10-4.2-0.227,1.365-0.282,2.961-0.176,4.599,0,0,4.868,5.519,10.567,3.004z\"/>\n   </g>\n   <g id=\"g474\" fill=\"#659900\">\n    <path id=\"path476\" d=\"M-61.009,11.403c-0.449,0.158-0.015-2.734-0.191-3.203-1.022-2.726-10.2-4.3-10.2-4.3-0.227,1.365-0.282,2.961-0.176,4.599,0,0,4.268,5.119,10.567,2.904z\"/>\n   </g>\n   <g id=\"g478\" fill=\"#000\">\n    <path id=\"path480\" d=\"m-65.4,11.546c-0.625,0-1.131-1.14-1.131-2.546,0-1.405,0.506-2.545,1.131-2.545s1.132,1.14,1.132,2.545c0,1.406-0.507,2.546-1.132,2.546z\"/>\n   </g>\n   <g id=\"g482\" fill=\"#000\">\n    <path id=\"path484\" d=\"M-65.4,9z\"/>\n   </g>\n   <g id=\"g486\" fill=\"#000\">\n    <path id=\"path488\" d=\"m-111,109.6s-5.6,10,19.2,4c0,0,14-1.2,16.4-3.6,1.2,0.8,9.566,3.73,12.4,4.4,6.8,1.6,15.2-8.4,15.2-8.4s4.6-10.5,7.4-10.5-0.4,1.6-0.4,1.6-6.6,10.1-6.2,11.7c0,0-5.2,20-21.2,20.8,0,0-16.15,0.95-14.8,6.8,0,0,8.8-2.4,11.2,0,0,0,10.8-0.4,2.8,6l-6.8,11.6s0.14,3.92-10,0.4c-9.8-3.4-20.1-16.3-20.1-16.3s-15.95-14.55-5.1-28.5z\"/>\n   </g>\n   <g id=\"g490\" fill=\"#e59999\">\n    <path id=\"path492\" d=\"m-112.2,113.6s-2,9.6,34.8-0.8l6.8,0.8c2.4,0.8,14.4,3.6,16.4,2.4,0,0-7.2,13.6-18.8,12,0,0-13.2,1.6-12.8,6.4,0,0,4,7.2,8.8,9.6,0,0,2.8,2.4,2.4,5.6s-3.2,4.8-5.2,5.6-5.2-2.4-6.8-2.4-10-6.4-14.4-11.2-12.8-16.8-12.4-19.6,1.2-8.4,1.2-8.4z\"/>\n   </g>\n   <g id=\"g494\" fill=\"#b26565\">\n    <path id=\"path496\" d=\"m-109,131.05c2.6,3.95,5.8,8.15,8,10.55,4.4,4.8,12.8,11.2,14.4,11.2s4.8,3.2,6.8,2.4,4.8-2.4,5.2-5.6-2.4-5.6-2.4-5.6c-3.066-1.53-5.806-5.02-7.385-7.35,0,0,0.185,2.55-5.015,1.75s-10.4-3.6-12-6.8-4-5.6-2.4-2,4,7.2,5.6,7.6,1.2,1.6-1.2,1.2-5.2-0.8-9.6-6z\"/>\n   </g>\n   <g id=\"g498\" fill=\"#992600\">\n    <path id=\"path500\" d=\"m-111.6,110s1.8-13.6,3-17.6c0,0-0.8-6.8,1.6-11s4.4-10.4,7.4-15.8,3.2-9.4,7.2-11,10-10.2,12.8-11.2,2.6-0.2,2.6-0.2,6.8-14.8,20.4-10.8c0,0-16.2-2.8-0.4-12.2,0,0-4.8,1.1-1.5-5.9,2.201-4.668,1.7,2.1-9.3,13.9,0,0-5,8.6-10.2,11.6s-17.2,10-18.4,13.8-4.4,9.6-6.4,11.2-4.8,5.8-5.2,9.2c0,0-1.2,4-2.6,5.2s-1.6,4.4-1.6,6.4-2,4.8-1.8,7.2c0,0,0.8,19,0.4,21l2-3.8z\"/>\n   </g>\n   <g id=\"g502\" fill=\"#FFF\">\n    <path id=\"path504\" d=\"m-120.2,114.6s-2-1.4-6.4,4.6c0,0,7.3,33,7.3,34.4,0,0,1.1-2.1-0.2-9.3s-2.2-19.9-2.2-19.9l1.5-9.8z\"/>\n   </g>\n   <g id=\"g506\" fill=\"#992600\">\n    <path id=\"path508\" d=\"m-98.6,54s-17.6,3.2-17.2,32.4l-0.8,24.8s-1.2-25.6-2.4-27.2,2.8-12.8-0.4-6.8c0,0-14,14-6,35.2,0,0,1.5,3.3-1.5-1.3,0,0-4.6-12.6-3.5-19,0,0,0.2-2.2,2.1-5,0,0,8.6-11.7,11.3-14,0,0,1.8-14.4,17.2-19.6,0,0,5.7-2.3,1.2,0.5z\"/>\n   </g>\n   <g id=\"g510\" fill=\"#000\">\n    <path id=\"path512\" d=\"m40.8-12.2c0.66-0.354,0.651-1.324,1.231-1.497,1.149-0.344,1.313-1.411,1.831-2.195,0.873-1.319,1.066-2.852,1.648-4.343,0.272-0.7,0.299-1.655-0.014-2.315-1.174-2.481-1.876-4.93-3.318-7.356-0.268-0.45-0.53-1.244-0.731-1.842-0.463-1.384-1.72-2.375-2.58-3.695-0.288-0.441,0.237-1.366-0.479-1.45-0.897-0.105-2.346-0.685-2.579,0.341-0.588,2.587,0.423,5.11,1.391,7.552-0.782,0.692-0.448,1.613-0.296,2.38,0.71,3.606-0.488,6.958-1.249,10.432-0.023,0.104,0.319,0.302,0.291,0.364-1.222,2.686-2.674,5.131-4.493,7.512-0.758,0.992-1.63,1.908-2.127,2.971-0.368,0.787-0.776,1.753-0.526,2.741-3.435,2.78-5.685,6.625-8.296,10.471-0.462,0.68-0.171,1.889,0.38,2.158,0.813,0.398,1.769-0.626,2.239-1.472,0.389-0.698,0.742-1.348,1.233-1.991,0.133-0.175-0.046-0.594,0.089-0.715,2.633-2.347,4.302-5.283,6.755-7.651,1.95-0.329,3.487-1.327,5.235-2.34,0.308-0.179,0.832,0.07,1.122-0.125,1.753-1.177,1.751-3.213,1.857-5.123,0.05-0.884,0.246-2.201,1.386-2.812z\"/>\n   </g>\n   <g id=\"g514\" fill=\"#000\">\n    <path id=\"path516\" d=\"m31.959-16.666c0.124-0.077-0.031-0.5,0.078-0.716,0.162-0.324,0.565-0.512,0.727-0.836,0.109-0.216-0.054-0.596,0.082-0.738,2.333-2.447,2.59-5.471,1.554-8.444,1.024-0.62,1.085-1.882,0.66-2.729-0.853-1.7-1.046-3.626-2.021-5.169-0.802-1.269-2.38-2.513-3.751-1.21-0.421,0.4-0.742,1.187-0.464,1.899,0.064,0.163,0.349,0.309,0.322,0.391-0.107,0.324-0.653,0.548-0.659,0.82-0.03,1.496-0.984,3.007-0.354,4.336,0.772,1.629,1.591,3.486,2.267,5.262-1.234,2.116-0.201,4.565-1.954,6.442-0.136,0.146-0.127,0.532-0.005,0.734,0.292,0.486,0.698,0.892,1.184,1.184,0.202,0.121,0.55,0.123,0.75-0.001,0.578-0.362,0.976-0.849,1.584-1.225z\"/>\n   </g>\n   <g id=\"g518\" fill=\"#000\">\n    <path id=\"path520\" d=\"m94.771-26.977c1.389,1.792,1.679,4.587-0.37,5.977,0.55,3.309,3.901,1.33,5.999,0.8-0.11-0.388,0.12-0.732,0.4-0.737,1.06-0.015,1.74-1.047,2.8-0.863,0.44-1.557,2.07-2.259,2.72-3.639,1.72-3.695,1.13-7.968-1.45-11.214-0.2-0.254,0.01-0.771-0.11-1.133-0.76-2.211-2.82-2.526-4.76-3.214-1.176-3.875-1.837-7.906-3.599-11.6-1.614-0.25-2.312-1.989-3.649-2.709-1.333-0.719-1.901,0.86-1.86,1.906,0.007,0.205,0.459,0.429,0.289,0.794-0.076,0.164-0.336,0.275-0.336,0.409,0.001,0.135,0.222,0.266,0.356,0.4-0.918,0.82-2.341,1.297-2.636,2.442-0.954,3.71,1.619,6.835,3.287,10.036,0.591,1.135-0.145,2.406-0.905,3.614-0.438,0.695-0.33,1.822-0.054,2.678,0.752,2.331,2.343,4.07,3.878,6.053z\"/>\n   </g>\n   <g id=\"g522\" fill=\"#000\">\n    <path id=\"path524\" d=\"m57.611-8.591c-1.487,1.851-4.899,4.42-1.982,6.348,0.194,0.129,0.564,0.133,0.737-0.001,2.021-1.565,4.024-2.468,6.46-3.05,0.124-0.029,0.398,0.438,0.767,0.277,1.613-0.703,3.623-0.645,4.807-1.983,3.767,0.224,7.332-0.892,10.723-2.2,1.161-0.448,2.431-1.007,3.632-1.509,1.376-0.576,2.58-1.504,3.692-2.645,0.133-0.136,0.487-0.046,0.754-0.046-0.04-0.863,0.922-0.99,1.169-1.612,0.092-0.232-0.058-0.628,0.075-0.73,2.138-1.63,3.058-3.648,1.889-6.025-0.285-0.578-0.534-1.196-1.1-1.672-1.085-0.911-2.187-0.057-3.234-0.361-0.159,0.628-0.888,0.456-1.274,0.654-0.859,0.439-2.192-0.146-3.051,0.292-1.362,0.695-2.603,0.864-4.025,1.241-0.312,0.082-1.09-0.014-1.25,0.613-0.134-0.134-0.282-0.368-0.388-0.346-1.908,0.396-3.168,0.61-4.469,2.302-0.103,0.133-0.545-0.046-0.704,0.089-0.957,0.808-1.362,2.042-2.463,2.714-0.201,0.123-0.553-0.045-0.747,0.084-0.646,0.431-1.013,1.072-1.655,1.519-0.329,0.229-0.729-0.096-0.697-0.352,0.245-1.947,0.898-3.734,0.323-5.61,2.077-2.52,4.594-4.469,6.4-7.2,0.015-2.166,0.707-4.312,0.594-6.389-0.01-0.193-0.298-0.926-0.424-1.273-0.312-0.854,0.594-1.92-0.25-2.644-1.404-1.203-2.696-0.327-3.52,1.106-1.838,0.39-3.904,1.083-5.482-0.151-1.007-0.787-1.585-1.693-2.384-2.749-0.985-1.302-0.65-2.738-0.58-4.302,0.006-0.128-0.309-0.264-0.309-0.398,0.001-0.135,0.221-0.266,0.355-0.4-0.706-0.626-0.981-1.684-2-2,0.305-1.092-0.371-1.976-1.242-2.278-1.995-0.691-3.672,1.221-5.564,1.294-0.514,0.019-0.981-1.019-1.63-1.344-0.432-0.216-1.136-0.249-1.498,0.017-0.688,0.504-1.277,0.618-2.035,0.823-1.617,0.436-2.895,1.53-4.375,2.385-1.485,0.857-2.44,2.294-3.52,3.614-0.941,1.152-1.077,3.566,0.343,4.066,1.843,0.65,3.147-2.053,5.113-1.727,0.312,0.051,0.518,0.362,0.408,0.75,0.389,0.109,0.607-0.12,0.8-0.4,0.858,1.019,2.022,1.356,2.96,2.229,0.97,0.904,2.716,0.486,3.731,1.483,1.529,1.502,0.97,4.183,2.909,5.488-0.586,1.313-1.193,2.59-1.528,4.017-0.282,1.206,0.712,2.403,1.923,2.312,1.258-0.094,1.52-0.853,2.005-1.929,0.267,0.267,0.736,0.564,0.695,0.78-0.457,2.387-1.484,4.38-1.942,6.811-0.059,0.317-0.364,0.519-0.753,0.409-0.468,4.149-4.52,6.543-7.065,9.708-0.403,0.502-0.407,1.751,0.002,2.154,1.403,1.387,3.363-0.159,5.063-0.662,0.213-1.206,1.072-2.148,2.404-2.092,0.256,0.01,0.491-0.532,0.815-0.662,0.348-0.138,0.85,0.086,1.136-0.112,1.729-1.195,3.137-2.301,4.875-3.49,0.192-0.131,0.536,0.028,0.752-0.08,0.325-0.162,0.512-0.549,0.835-0.734,0.348-0.2,0.59,0.09,0.783,0.37-0.646,0.349-0.65,1.306-1.232,1.508-0.775,0.268-1.336,0.781-2.01,1.228-0.292,0.193-0.951-0.055-1.055,0.124-0.598,1.028-1.782,1.466-2.492,2.349z\"/>\n   </g>\n   <g id=\"g526\" fill=\"#000\">\n    <path id=\"path528\" d=\"m2.2-58s-9.238-2.872-20.4,22.8c0,0-2.4,5.2-4.8,7.2s-13.6,5.6-15.6,9.6l-10.4,16s14.8-16,18-18.4c0,0,8-8.4,4.8-1.6,0,0-14,10.8-12.8,20,0,0-5.6,14.4-6.4,16.4,0,0,16-32,18.4-33.2s3.6-1.2,2.4,2.4-1.6,20-4.4,22c0,0,8-20.4,7.2-23.6,0,0,3.2-3.6,5.6,1.6l-1.2,16,4.4,12s-2.4-11.2-0.8-26.8c0,0-2-10.4,2-4.8s13.6,11.6,13.6,16.4c0,0-5.2-17.6-14.4-22.4l-4,6-1.2-2s-3.6-0.8,0.8-7.6,4-7.6,4-7.6,6.4,7.2,8,7.2c0,0,13.2-7.6,14.4,16.8,0,0,6.8-14.4-2.4-21.2,0,0-14.8-2-13.6-7.2l7.2-12.4c3.6-5.2,2-2.4,2-2.4z\"/>\n   </g>\n   <g id=\"g530\" fill=\"#000\">\n    <path id=\"path532\" d=\"m-17.8-41.6-16,5.2-7.2,9.6s17.2-10,21.2-11.2,2-3.6,2-3.6z\"/>\n   </g>\n   <g id=\"g534\" fill=\"#000\">\n    <path id=\"path536\" d=\"m-57.8-35.2s-2,1.2-2.4,4-2.8,3.2-2,6,2.8,5.2,2.8,1.2,1.6-6,2.4-7.2,2.4-5.6-0.8-4z\"/>\n   </g>\n   <g id=\"g538\" fill=\"#000\">\n    <path id=\"path540\" d=\"m-66.6,26s-8.4-4-11.6-7.6-2.748,1.566-7.6,1.2c-5.847-0.441-4.8-16.4-4.8-16.4l-4,7.6s-1.2,14.4,6.8,12c3.907-1.172,5.2,0.4,3.6,1.2s5.6,1.2,2.8,2.8,11.6-3.6,9.2,6.8l5.6-7.6z\"/>\n   </g>\n   <g id=\"g542\" fill=\"#000\">\n    <path id=\"path544\" d=\"m-79.2,40.4s-15.4,4.4-19-5.2c0,0-4.8,2.4-2.6,5.4s3.4,3.4,3.4,3.4,5.4,1.2,4.8,2-3,4.2-3,4.2,10.2-6,16.4-9.8z\"/>\n   </g>\n   <g id=\"g546\" fill=\"#FFF\">\n    <path id=\"path548\" d=\"m149.2,118.6c-0.43,2.14-2.1,2.94-4,3.6-1.92-0.96-4.51-4.06-6.4-2-0.47-0.48-1.25-0.54-1.6-1.2-0.46-0.9-0.19-1.94-0.53-2.74-0.55-1.28-1.25-2.64-1.07-4.06,1.81-0.71,2.4-2.62,1.93-4.38-0.07-0.26-0.5-0.45-0.3-0.8,0.19-0.33,0.5-0.55,0.77-0.82-0.13,0.14-0.28,0.37-0.39,0.35-0.61-0.11-0.49-0.75-0.36-1.13,0.59-1.75,2.6-2.01,3.95-0.82,0.26-0.56,0.77-0.37,1.2-0.4-0.05-0.58,0.36-1.11,0.56-1.53,0.52-1.09,2.14,0.01,2.94-0.6,1.08-0.83,2.14-1.52,3.22-0.92,1.81,1.01,3.52,2.22,4.72,3.97,0.57,0.83,0.81,2.11,0.75,3.07-0.04,0.65-1.42,0.29-1.76,1.22-0.65,1.75,1.19,2.27,1.94,3.61,0.2,0.35-0.06,0.65-0.38,0.75-0.41,0.13-1.19-0.06-1.06,0.39,0.98,3.19-1.78,3.87-4.13,4.44z\"/>\n   </g>\n   <g id=\"g550\" fill=\"#FFF\">\n    <path id=\"path552\" d=\"m139.6,138.2c-0.01-1.74-1.61-3.49-0.4-5.2,0.14,0.14,0.27,0.36,0.4,0.36,0.14,0,0.27-0.22,0.4-0.36,1.5,2.22,5.15,3.14,5.01,5.99-0.03,0.45-1.11,1.37-0.21,2.01-1.81,1.35-1.87,3.72-2.8,5.6-1.24-0.28-2.45-0.65-3.6-1.2,0.35-1.48,0.24-3.17,1.06-4.49,0.43-0.7,0.14-1.78,0.14-2.71z\"/>\n   </g>\n   <g id=\"g554\" fill=\"#CCC\">\n    <path id=\"path556\" d=\"m-26.6,129.2s-16.858,10.14-2.8-5.2c8.8-9.6,18.8-15.2,18.8-15.2s10.4-4.4,14-5.6,18.8-6.4,22-6.8,12.8-4.4,19.6-0.4,14.8,8.4,14.8,8.4-16.4-8.4-20-6-10.8,2-16.8,5.2c0,0-14.8,4.4-18,6.4s-13.6,13.6-15.2,12.8,0.4-1.2,1.6-4-0.8-4.4-8.8,2-9.2,8.4-9.2,8.4z\"/>\n   </g>\n   <g id=\"g558\" fill=\"#000\">\n    <path id=\"path560\" d=\"m-19.195,123.23s1.41-13.04,9.888-11.37c0,0,8.226-4.17,10.948-6.14,0,0,8.139-1.7,9.449-2.32,18.479-8.698,33.198-4.179,33.745-5.299,0.546-1.119,20.171,5.999,23.78,10.079,0.391,0.45-10.231-5.59-19.929-7.48-8.273-1.617-29.875,0.24-40.781,5.78-2.973,1.51-11.918,7.29-14.449,7.18s-12.651,9.57-12.651,9.57z\"/>\n   </g>\n   <g id=\"g562\" fill=\"#CCC\">\n    <path id=\"path564\" d=\"m-23,148.8s-15.2-2.4,1.6-4c0,0,18-2,22-7.2,0,0,13.6-9.2,16.4-9.6s32.8-7.6,33.2-10,6-2.4,7.6-1.6,0.8,2-2,2.8-34,17.2-40.4,18.4-18,8.8-22.8,10-15.6,1.2-15.6,1.2z\"/>\n   </g>\n   <g id=\"g566\" fill=\"#000\">\n    <path id=\"path568\" d=\"m-3.48,141.4s-8.582-0.83,0.019-1.64c0,0,8.816-3.43,10.864-6.09,0,0,6.964-4.71,8.397-4.92,1.434-0.2,15.394-3.89,15.599-5.12s34.271-13.81,38.691-10.62c2.911,2.1-6.99,0.43-16.624,4.84-1.355,0.62-35.208,15.2-38.485,15.82-3.277,0.61-9.216,4.5-11.674,5.12-2.457,0.61-6.787,2.61-6.787,2.61z\"/>\n   </g>\n   <g id=\"g570\" fill=\"#000\">\n    <path id=\"path572\" d=\"m-11.4,143.6s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g574\" fill=\"#000\">\n    <path id=\"path576\" d=\"m-18.6,145.2s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g578\" fill=\"#000\">\n    <path id=\"path580\" d=\"m-29,146.8s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g582\" fill=\"#000\">\n    <path id=\"path584\" d=\"m-36.6,147.6s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g586\" fill=\"#000\">\n    <path id=\"path588\" d=\"m1.8,108,3.2,1.6c-1.2,1.6-4.4,1.2-4.4,1.2l1.2-2.8z\"/>\n   </g>\n   <g id=\"g590\" fill=\"#000\">\n    <path id=\"path592\" d=\"m-8.2,113.6s6.506-2.14,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g594\" fill=\"#000\">\n    <path id=\"path596\" d=\"m-19.4,118.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g598\" fill=\"#000\">\n    <path id=\"path600\" d=\"m-27,124.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g602\" fill=\"#000\">\n    <path id=\"path604\" d=\"m-33.8,129.2s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g606\" fill=\"#000\">\n    <path id=\"path608\" d=\"m5.282,135.6s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g610\" fill=\"#000\">\n    <path id=\"path612\" d=\"m15.682,130.8s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g614\" fill=\"#000\">\n    <path id=\"path616\" d=\"m26.482,126.4s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g618\" fill=\"#000\">\n    <path id=\"path620\" d=\"m36.882,121.6s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g622\" fill=\"#000\">\n    <path id=\"path624\" d=\"m9.282,103.6s6.921-0.53,5.324,1.6c-1.597,2.12-5.592,1.86-5.592,1.86l0.268-3.46z\"/>\n   </g>\n   <g id=\"g626\" fill=\"#000\">\n    <path id=\"path628\" d=\"m19.282,100.4s6.921-0.534,5.324,1.6c-1.597,2.12-5.992,1.86-5.992,1.86l0.668-3.46z\"/>\n   </g>\n   <g id=\"g630\" fill=\"#000\">\n    <path id=\"path632\" d=\"m-3.4,140.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g634\" fill=\"#992600\">\n    <path id=\"path636\" d=\"m-76.6,41.2s-4.4,8.8-4.8,12c0,0,0.8-8.8,2-10.8s2.8-1.2,2.8-1.2z\"/>\n   </g>\n   <g id=\"g638\" fill=\"#992600\">\n    <path id=\"path640\" d=\"m-95,55.2s-3.2,14.4-2.8,17.2c0,0-1.2-11.6-0.8-12.8s3.6-4.4,3.6-4.4z\"/>\n   </g>\n   <g id=\"g642\" fill=\"#CCC\">\n    <path id=\"path644\" d=\"m-74.2-19.4-0.2,3.2-2.2,0.2s14.2,12.6,14.8,20.2c0,0,0.8-8.2-12.4-23.6z\"/>\n   </g>\n   <g id=\"g646\" fill=\"#000\">\n    <path id=\"path648\" d=\"m-70.216-18.135c-0.431-0.416-0.212-1.161-0.62-1.421-0.809-0.516,1.298-0.573,1.07-1.289-0.383-1.206-0.196-1.227-0.318-2.503-0.057-0.598,0.531-2.138,0.916-2.578,1.446-1.652,0.122-4.584,1.762-6.135,0.304-0.289,0.68-0.841,0.965-1.259,0.659-0.963,1.843-1.451,2.793-2.279,0.318-0.276,0.117-1.103,0.686-1.011,0.714,0.115,1.955-0.015,1.91,0.826-0.113,2.12-1.442,3.84-2.722,5.508,0.451,0.704-0.007,1.339-0.291,1.896-1.335,2.62-1.146,5.461-1.32,8.301-0.005,0.085-0.312,0.163-0.304,0.216,0.353,2.335,0.937,4.534,1.816,6.763,0.366,0.93,0.837,1.825,0.987,2.752,0.111,0.686,0.214,1.519-0.194,2.224,2.035,2.89,0.726,5.541,1.895,9.072,0.207,0.625,1.899,2.539,1.436,2.378-2.513-0.871-2.625-1.269-2.802-2.022-0.146-0.623-0.476-2-0.713-2.602-0.064-0.164-0.235-2.048-0.313-2.17-1.513-2.382-0.155-2.206-1.525-4.564-1.428-0.68-2.394-1.784-3.517-2.946-0.198-0.204,0.945-0.928,0.764-1.141-1.092-1.289-2.245-2.056-1.909-3.549,0.155-0.69,0.292-1.747-0.452-2.467z\"/>\n   </g>\n   <g id=\"g650\" fill=\"#000\">\n    <path id=\"path652\" d=\"m-73.8-16.4s0.4,6.8,2.8,8.4,1.2,0.8-2-0.4-2-2-2-2-2.8,0.4-0.4,2.4,6,4.4,4.4,4.4-9.2-4-9.2-6.8-1-6.9-1-6.9,1.1-0.8,5.9-0.7c0,0,1.4,0.7,1.5,1.6z\"/>\n   </g>\n   <g id=\"g654\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path656\" d=\"m-74.6,2.2s-8.52-2.791-27,0.6c0,0,9.031-2.078,27.8,0.2,10.3,1.25-0.8-0.8-0.8-0.8z\"/>\n   </g>\n   <g id=\"g658\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path660\" d=\"m-72.502,2.129s-8.246-3.518-26.951-1.737c0,0,9.178-1.289,27.679,2.603,10.154,2.136-0.728-0.866-0.728-0.866z\"/>\n   </g>\n   <g id=\"g662\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path664\" d=\"m-70.714,2.222s-7.962-4.121-26.747-3.736c0,0,9.248-0.604,27.409,4.654,9.966,2.885-0.662-0.918-0.662-0.918z\"/>\n   </g>\n   <g id=\"g666\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path668\" d=\"m-69.444,2.445s-6.824-4.307-23.698-5.405c0,0,8.339,0.17,24.22,6.279,8.716,3.353-0.522-0.874-0.522-0.874z\"/>\n   </g>\n   <g id=\"g670\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path672\" d=\"m45.84,12.961s-0.93,0.644-0.716-0.537c0.215-1.181,28.423-14.351,32.037-14.101,0,0-30.248,13.206-31.321,14.638z\"/>\n   </g>\n   <g id=\"g674\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path676\" d=\"m42.446,13.6s-0.876,0.715-0.755-0.479,27.208-16.539,30.83-16.573c0,0-29.117,15.541-30.075,17.052z\"/>\n   </g>\n   <g id=\"g678\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path680\" d=\"m39.16,14.975s-0.828,0.772-0.786-0.428c0.042-1.199,19.859-16.696,29.671-18.57,0,0-18.03,8.127-28.885,18.998z\"/>\n   </g>\n   <g id=\"g682\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path684\" d=\"m36.284,16.838s-0.745,0.694-0.707-0.385c0.038-1.08,17.872-15.027,26.703-16.713,0,0-16.226,7.314-25.996,17.098z\"/>\n   </g>\n   <g id=\"g686\" fill=\"#CCC\">\n    <path id=\"path688\" d=\"m4.6,164.8s-15.2-2.4,1.6-4c0,0,18-2,22-7.2,0,0,13.6-9.2,16.4-9.6s19.2-4,19.6-6.4,6.4-4.8,8-4,1.6,10-1.2,10.8-21.6,8-28,9.2-18,8.8-22.8,10-15.6,1.2-15.6,1.2z\"/>\n   </g>\n   <g id=\"g690\" fill=\"#000\">\n    <path id=\"path692\" d=\"m77.6,127.4s-3,1.6-4.2,4.2c0,0-6.4,10.6-20.6,13.8,0,0-23,9-30.8,11,0,0-13.4,5-20.8,4.2,0,0-7,0.2-0.8,1.8,0,0,20.2-2,23.6-3.8,0,0,15.6-5.2,18.6-7.8s21.2-7.6,23.4-9.6,12-10.4,11.6-13.8z\"/>\n   </g>\n   <g id=\"g694\" fill=\"#000\">\n    <path id=\"path696\" d=\"m18.882,158.91s5.229-0.23,4.076,1.32-3.601,0.68-3.601,0.68l-0.475-2z\"/>\n   </g>\n   <g id=\"g698\" fill=\"#000\">\n    <path id=\"path700\" d=\"m11.68,160.26s5.228-0.22,4.076,1.33c-1.153,1.55-3.601,0.67-3.601,0.67l-0.475-2z\"/>\n   </g>\n   <g id=\"g702\" fill=\"#000\">\n    <path id=\"path704\" d=\"m1.251,161.51s5.229-0.23,4.076,1.32-3.601,0.68-3.601,0.68l-0.475-2z\"/>\n   </g>\n   <g id=\"g706\" fill=\"#000\">\n    <path id=\"path708\" d=\"m-6.383,162.06s5.229-0.23,4.076,1.32-3.601,0.67-3.601,0.67l-0.475-1.99z\"/>\n   </g>\n   <g id=\"g710\" fill=\"#000\">\n    <path id=\"path712\" d=\"m35.415,151.51s6.96-0.3,5.425,1.76c-1.534,2.07-4.793,0.9-4.793,0.9l-0.632-2.66z\"/>\n   </g>\n   <g id=\"g714\" fill=\"#000\">\n    <path id=\"path716\" d=\"m45.73,147.09s5.959-3.3,5.425,1.76c-0.27,2.55-4.793,0.9-4.793,0.9l-0.632-2.66z\"/>\n   </g>\n   <g id=\"g718\" fill=\"#000\">\n    <path id=\"path720\" d=\"m54.862,144.27s7.159-3.7,5.425,1.77c-0.778,2.44-4.794,0.9-4.794,0.9l-0.631-2.67z\"/>\n   </g>\n   <g id=\"g722\" fill=\"#000\">\n    <path id=\"path724\" d=\"m64.376,139.45s4.359-4.9,5.425,1.76c0.406,2.54-4.793,0.9-4.793,0.9l-0.632-2.66z\"/>\n   </g>\n   <g id=\"g726\" fill=\"#000\">\n    <path id=\"path728\" d=\"m26.834,156s5.228-0.23,4.076,1.32c-1.153,1.55-3.602,0.68-3.602,0.68l-0.474-2z\"/>\n   </g>\n   <g id=\"g730\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path732\" d=\"m62.434,34.603s-0.726,0.665-0.727-0.406c0-1.07,17.484-14.334,26.327-15.718,0,0-16.099,6.729-25.6,16.124z\"/>\n   </g>\n   <g id=\"g734\" fill=\"#000\">\n    <path id=\"path736\" d=\"m65.4,98.4s22.001,22.4,31.201,26c0,0,9.199,11.2,5.199,37.2,0,0-3.199,7.6-6.399-13.2,0,0,3.2-25.2-8-9.2,0,0-8.401-9.9-2.001-9.6,0,0,3.201,2,3.601,0.4s-7.601-15.2-24.801-29.6,1.2-2,1.2-2z\"/>\n   </g>\n   <g id=\"g738\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path740\" d=\"m7,137.2s-0.2-1.8,1.6-1,96,7,127.6,31c0,0-45.199-23.2-129.2-30z\"/>\n   </g>\n   <g id=\"g742\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path744\" d=\"m17.4,132.8s-0.2-1.8,1.6-1,138.4-0.2,162,32.2c0,0-22-25.2-163.6-31.2z\"/>\n   </g>\n   <g id=\"g746\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path748\" d=\"m29,128.8s-0.2-1.8,1.6-1,175.2-12.2,198.8,20.2c0,0-9.6-25.6-200.4-19.2z\"/>\n   </g>\n   <g id=\"g750\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path752\" d=\"m39,124s-0.2-1.8,1.6-1,124-37.8,147.6-5.4c0,0-13.4-24.6-149.2,6.4z\"/>\n   </g>\n   <g id=\"g754\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path756\" d=\"m-19,146.8s-0.2-1.8,1.6-1,19.6,3,21.6,41.8c0,0-7.2-42-23.2-40.8z\"/>\n   </g>\n   <g id=\"g758\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path760\" d=\"m-27.8,148.4s-0.2-1.8,1.6-1,16-3.8,13.2,35c0,0,1.2-35.2-14.8-34z\"/>\n   </g>\n   <g id=\"g762\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path764\" d=\"m-35.8,148.8s-0.2-1.8,1.6-1,17.2,1.4,4.8,23.8c0,0,9.6-24-6.4-22.8z\"/>\n   </g>\n   <g id=\"g766\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path768\" d=\"m11.526,104.46s-0.444,2,1.105,0.79c16.068-12.628,48.51-71.53,104.2-77.164,0,0-38.312-12.11-105.3,76.374z\"/>\n   </g>\n   <g id=\"g770\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path772\" d=\"m22.726,102.66s-1.363-1.19,0.505-1.81c1.868-0.63,114.31-73.13,153.6-65.164,0,0-27.11-7.51-154.1,66.974z\"/>\n   </g>\n   <g id=\"g774\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path776\" d=\"m1.885,108.77s-0.509,1.6,1.202,0.62c8.975-5.12,12.59-62.331,56.167-63.586,0,0-32.411-14.714-57.369,62.966z\"/>\n   </g>\n   <g id=\"g778\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path780\" d=\"m-18.038,119.79s-1.077,1.29,0.876,1.03c10.246-1.33,31.651-42.598,76.09-37.519,0,0-31.966-14.346-76.966,36.489z\"/>\n   </g>\n   <g id=\"g782\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path784\" d=\"m-6.8,113.67s-0.811,1.47,1.058,0.84c9.799-3.27,22.883-47.885,67.471-51.432,0,0-34.126-7.943-68.529,50.592z\"/>\n   </g>\n   <g id=\"g786\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path788\" d=\"m-25.078,124.91s-0.873,1.04,0.709,0.84c8.299-1.08,25.637-34.51,61.633-30.396,0,0-25.893-11.62-62.342,29.556z\"/>\n   </g>\n   <g id=\"g790\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path792\" d=\"m-32.677,130.82s-1.005,1.05,0.586,0.93c4.168-0.31,34.806-33.39,53.274-17.89,0,0-12.015-18.721-53.86,16.96z\"/>\n   </g>\n   <g id=\"g794\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path796\" d=\"m36.855,98.898s-1.201-1.355,0.731-1.74c1.932-0.384,122.63-58.097,160.59-45.231,0,0-25.94-10.874-161.32,46.971z\"/>\n   </g>\n   <g id=\"g798\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path800\" d=\"m3.4,163.2s-0.2-1.8,1.6-1,17.2,1.4,4.8,23.8c0,0,9.6-24-6.4-22.8z\"/>\n   </g>\n   <g id=\"g802\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path804\" d=\"m13.8,161.6s-0.2-1.8,1.6-1,19.6,3,21.6,41.8c0,0-7.2-42-23.2-40.8z\"/>\n   </g>\n   <g id=\"g806\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path808\" d=\"m20.6,160s-0.2-1.8,1.6-1,26.4,4.2,50,36.6c0,0-35.6-36.8-51.6-35.6z\"/>\n   </g>\n   <g id=\"g810\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path812\" d=\"m28.225,157.97s-0.437-1.76,1.453-1.2c1.89,0.55,22.324-1.35,60.421,32.83,0,0-46.175-34.94-61.874-31.63z\"/>\n   </g>\n   <g id=\"g814\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path816\" d=\"m38.625,153.57s-0.437-1.76,1.453-1.2c1.89,0.55,36.724,5.05,88.422,40.03,0,0-74.176-42.14-89.875-38.83z\"/>\n   </g>\n   <g id=\"g818\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path820\" d=\"m-1.8,142s-0.2-1.8,1.6-1,55.2,3.4,85.6,30.2c0,0-34.901-24.77-87.2-29.2z\"/>\n   </g>\n   <g id=\"g822\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path824\" d=\"m-11.8,146s-0.2-1.8,1.6-1,26.4,4.2,50,36.6c0,0-35.6-36.8-51.6-35.6z\"/>\n   </g>\n   <g id=\"g826\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path828\" d=\"m49.503,148.96s-0.565-1.72,1.361-1.3c1.926,0.41,36.996,2.34,91.116,33.44,0,0-77.663-34.4-92.477-32.14z\"/>\n   </g>\n   <g id=\"g830\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path832\" d=\"m57.903,146.56s-0.565-1.72,1.361-1.3c1.926,0.41,36.996,2.34,91.116,33.44,0,0-77.063-34.8-92.477-32.14z\"/>\n   </g>\n   <g id=\"g834\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path836\" d=\"m67.503,141.56s-0.565-1.72,1.361-1.3c1.926,0.41,44.996,4.74,134.72,39.04,0,0-120.66-40.4-136.08-37.74z\"/>\n   </g>\n   <g id=\"g838\" fill=\"#000\">\n    <path id=\"path840\" d=\"m-43.8,148.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g842\" fill=\"#000\">\n    <path id=\"path844\" d=\"m-13,162.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g846\" fill=\"#000\">\n    <path id=\"path848\" d=\"m-21.8,162s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g850\" fill=\"#000\">\n    <path id=\"path852\" d=\"m-117.17,150.18s5.05,1.32,3.39,2.44-3.67-0.42-3.67-0.42l0.28-2.02z\"/>\n   </g>\n   <g id=\"g854\" fill=\"#000\">\n    <path id=\"path856\" d=\"m-115.17,140.58s5.05,1.32,3.39,2.44-3.67-0.42-3.67-0.42l0.28-2.02z\"/>\n   </g>\n   <g id=\"g858\" fill=\"#000\">\n    <path id=\"path860\" d=\"m-122.37,136.18s5.05,1.32,3.39,2.44-3.67-0.42-3.67-0.42l0.28-2.02z\"/>\n   </g>\n   <g id=\"g862\" fill=\"#CCC\">\n    <path id=\"path864\" d=\"m-42.6,211.2-5.6,2c-2,0-13.2,3.6-18.8,13.6,0,0,12.4-9.6,24.4-15.6z\"/>\n   </g>\n   <g id=\"g866\" fill=\"#CCC\">\n    <path id=\"path868\" d=\"m45.116,303.85c0.141,0.25,0.196,0.67,0.488,0.69,0.658,0.04,1.891,0.34,1.766-0.29-0.848-4.31-1.722-9.25-5.855-11.05-0.639-0.28-2.081,0.13-2.155,1.02-0.127,1.52-0.244,2.87,0.065,4.33,0.3,1.43,2.458,1.43,3.375,0.05,0.936,1.67,1.368,3.52,2.316,5.25z\"/>\n   </g>\n   <g id=\"g870\" fill=\"#CCC\">\n    <path id=\"path872\" d=\"m34.038,308.58c0.748,1.41,0.621,3.27,2.036,3.84,0.74,0.29,2.59-0.68,2.172-1.76-0.802-2.06-1.19-4.3-2.579-6.11-0.2-0.26,0.04-0.79-0.12-1.12-0.594-1.22-1.739-1.96-3.147-1.63-1.115,2.2,0.033,4.33,1.555,6.04,0.136,0.15-0.03,0.53,0.083,0.74z\"/>\n   </g>\n   <g id=\"g874\" fill=\"#CCC\">\n    <path id=\"path876\" d=\"m-5.564,303.39c-0.108-0.38-0.146-0.84,0.019-1.16,0.531-1.03,1.324-2.15,0.987-3.18-0.348-1.05-1.464-0.87-2.114-0.3-1.135,0.99-1.184,2.82-1.875,4.18-0.196,0.38-0.145,0.96-0.586,1.35-0.474,0.42-0.914,1.94-0.818,2.51,0.053,0.32-0.13,10.22,0.092,9.96,0.619-0.73,3.669-10.47,3.738-11.36,0.057-0.73,0.789-1.19,0.557-2z\"/>\n   </g>\n   <g id=\"g878\" fill=\"#CCC\">\n    <path id=\"path880\" d=\"m-31.202,296.6c2.634-2.5,5.424-5.46,4.982-9.17-0.116-0.98-1.891-0.45-2.078,0.39-0.802,3.63-2.841,6.29-5.409,8.68-2.196,2.05-4.058,8.39-4.293,8.9,3.697-5.26,5.954-8,6.798-8.8z\"/>\n   </g>\n   <g id=\"g882\" fill=\"#CCC\">\n    <path id=\"path884\" d=\"m-44.776,290.64c0.523-0.38,0.221-0.87,0.438-1.2,0.953-1.46,2.254-2.7,2.272-4.44,0.003-0.28-0.375-0.59-0.71-0.36-0.277,0.18-0.619,0.31-0.727,0.44-2.03,2.45-3.43,5.12-4.873,7.93-0.183,0.36-1.327,4.85-1.014,4.96,0.239,0.09,1.959-4.09,2.169-4.21,1.263-0.68,1.275-2.3,2.445-3.12z\"/>\n   </g>\n   <g id=\"g886\" fill=\"#CCC\">\n    <path id=\"path888\" d=\"m-28.043,310.18c0.444-0.87,2.02-2.07,1.907-2.96-0.118-0.93,0.35-2.37-0.562-1.68-1.257,0.94-4.706,2.29-4.976,8.1-0.026,0.57,2.948-2.12,3.631-3.46z\"/>\n   </g>\n   <g id=\"g890\" fill=\"#CCC\">\n    <path id=\"path892\" d=\"m-13.6,293c0.4-0.67,1.108-0.19,1.567-0.46,0.648-0.37,1.259-0.93,1.551-1.58,0.97-2.14,2.739-3.96,2.882-6.36-1.491-1.4-2.17,0.64-2.8,1.6-1.323-1.65-2.322,0.23-3.622,0.75-0.07,0.03-0.283-0.32-0.358-0.29-1.177,0.44-1.857,1.52-2.855,2.3-0.171,0.13-0.576-0.05-0.723,0.09-0.652,0.6-1.625,0.93-1.905,1.61-1.11,2.7-4.25,4.8-6.137,12.34,0.381,0.91,4.512-6.64,4.999-7.34,0.836-1.2,0.954,1.66,2.23,1,0.051-0.03,0.237,0.21,0.371,0.34,0.194-0.28,0.412-0.51,0.8-0.4,0-0.4-0.134-0.96,0.067-1.11,1.237-0.98,1.153-2.05,1.933-3.29,0.458,0.79,1.519,0.07,2,0.8z\"/>\n   </g>\n   <g id=\"g894\" fill=\"#CCC\">\n    <path id=\"path896\" d=\"m46.2,347.4s7.4-20.4,3-31.6c0,0,11.4,21.6,6.8,32.8,0,0-0.4-10.4-4.4-15.4,0,0-4,12.8-5.4,14.2z\"/>\n   </g>\n   <g id=\"g898\" fill=\"#CCC\">\n    <path id=\"path900\" d=\"m31.4,344.8s5.4-8.8-2.6-27.2c0,0-0.8,20.4-7.6,31.4,0,0,14.2-20.2,10.2-4.2z\"/>\n   </g>\n   <g id=\"g902\" fill=\"#CCC\">\n    <path id=\"path904\" d=\"m21.4,342.8s-0.2-20,0.2-23c0,0-3.8,16.6-14,26.2,0,0,14.4-12,13.8-3.2z\"/>\n   </g>\n   <g id=\"g906\" fill=\"#CCC\">\n    <path id=\"path908\" d=\"m11.8,310.8s6,13.6-4,32c0,0,6.4-12.2,1.6-19.2,0,0,2.6-3.4,2.4-12.8z\"/>\n   </g>\n   <g id=\"g910\" fill=\"#CCC\">\n    <path id=\"path912\" d=\"m-7.4,342.4s-1-15.6,0.8-17.8c0,0,0.2-6.4-0.2-7.4,0,0,4-6.2,4.2,1.2,0,0,1.4,7.8,4.2,12.4,0,0,3.6,5.4,3.4,11.8,0,0-10-30.2-12.4-0.2z\"/>\n   </g>\n   <g id=\"g914\" fill=\"#CCC\">\n    <path id=\"path916\" d=\"m-11,314.8s-6.6,10.8-8.4,29.8c0,0-1.4-6.2,2.4-20.6,0,0,4.2-15.4,6-9.2z\"/>\n   </g>\n   <g id=\"g918\" fill=\"#CCC\">\n    <path id=\"path920\" d=\"m-32.8,334.6s5-5.4,6.4-10.4c0,0,3.6-15.8-2.8-7.2,0,0,0.2,8-8,15.4,0,0,4.8-2.4,4.4,2.2z\"/>\n   </g>\n   <g id=\"g922\" fill=\"#CCC\">\n    <path id=\"path924\" d=\"m-38.6,329.6s3.4-17.4,4.2-18.2c0,0,1.8-3.4-1-0.2,0,0-8.8,19.2-12.8,25.8,0,0,8-9.2,9.6-7.4z\"/>\n   </g>\n   <g id=\"g926\" fill=\"#CCC\">\n    <path id=\"path928\" d=\"m-44.4,313s11.6-22.4-10.2,3.4c0,0,11-9.8,10.2-3.4z\"/>\n   </g>\n   <g id=\"g930\" fill=\"#CCC\">\n    <path id=\"path932\" d=\"m-59.8,298.4s4.8-18.8,7.4-18.6l1.6,1.6s-6,9.6-5.4,19.4c0,0-0.6-9.6-3.6-2.4z\"/>\n   </g>\n   <g id=\"g934\" fill=\"#CCC\">\n    <path id=\"path936\" d=\"m270.5,287s-12-10-14.5-13.5c0,0,13.5,18.5,13.5,25.5,0,0,2.5-7.5,1-12z\"/>\n   </g>\n   <g id=\"g938\" fill=\"#CCC\">\n    <path id=\"path940\" d=\"m276,265s-21-15-24.5-22.5c0,0,26.5,29.5,26.5,34,0,0,0.5-9-2-11.5z\"/>\n   </g>\n   <g id=\"g942\" fill=\"#CCC\">\n    <path id=\"path944\" d=\"m293,111s-12-8-13.5-6c0,0,10.5,6.5,13,15,0,0-1.5-9,0.5-9z\"/>\n   </g>\n   <g id=\"g946\" fill=\"#CCC\">\n    <path id=\"path948\" d=\"m301.5,191.5-17.5-12s19,17,19.5,21l-2-9z\"/>\n   </g>\n   <g id=\"g950\" stroke=\"#000\">\n    <path id=\"path952\" d=\"m-89.25,169,22,4.75\"/>\n   </g>\n   <g id=\"g954\" stroke=\"#000\">\n    <path id=\"path956\" d=\"m-39,331s-0.5-3.5-9.5,7\"/>\n   </g>\n   <g id=\"g958\" stroke=\"#000\">\n    <path id=\"path960\" d=\"m-33.5,336s2-6.5-4.5-2\"/>\n   </g>\n   <g id=\"g962\" stroke=\"#000\">\n    <path id=\"path964\" d=\"m20.5,344.5s1.5-11-10,2\"/>\n   </g>\n  </g>\n </svg></div>"], ["<div style=", "><svg width=", " height=", " \n\n    xmlns=\"http://www.w3.org/2000/svg\" id=\"svg2\" viewBox=\"0 0 900 900\" version=\"1.1\"\n    onclick=",
        "    \n    >\n  <g id=\"g4\" fill=\"none\" transform=\"matrix(1.7656463,0,0,1.7656463,324.90716,255.00942)\">\n   <g id=\"g6\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path8\" d=\"m-122.3,84.285s0.1,1.894-0.73,1.875c-0.82-0.019-17.27-48.094-37.8-45.851,0,0,17.78-7.353,38.53,43.976z\"/>\n   </g>\n   <g id=\"g10\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path12\" d=\"m-118.77,81.262s-0.55,1.816-1.32,1.517c-0.77-0.298,0.11-51.104-19.95-55.978,0,0,19.22-0.864,21.27,54.461z\"/>\n   </g>\n   <g id=\"g14\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path16\" d=\"m-91.284,123.59s1.636,0.96,1.166,1.64c-0.471,0.67-49.642-12.13-59.102,6.23,0,0,3.68-18.89,57.936-7.87z\"/>\n   </g>\n   <g id=\"g18\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path20\" d=\"m-94.093,133.8s1.856,0.4,1.622,1.19c-0.233,0.79-50.939,4.13-54.129,24.53,0,0-2.46-19.08,52.507-25.72z\"/>\n   </g>\n   <g id=\"g22\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path24\" d=\"m-98.304,128.28s1.778,0.66,1.432,1.41-50.998-3.34-57.128,16.37c0,0,0.35-19.24,55.696-17.78z\"/>\n   </g>\n   <g id=\"g26\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path28\" d=\"m-109.01,110.07s1.31,1.38,0.67,1.9-44.38-25.336-58.53-10.29c0,0,8.74-17.147,57.86,8.39z\"/>\n   </g>\n   <g id=\"g30\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path32\" d=\"m-116.55,114.26s1.45,1.22,0.88,1.81c-0.58,0.59-46.97-20.148-59.32-3.6,0,0,6.74-18.023,58.44,1.79z\"/>\n   </g>\n   <g id=\"g34\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path36\" d=\"m-119.15,118.34s1.6,1,1.11,1.67c-0.49,0.66-49.27-13.56-59.25,4.51,0,0,4.22-18.77,58.14-6.18z\"/>\n   </g>\n   <g id=\"g38\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path40\" d=\"m-108.42,118.95s1.12,1.53,0.42,1.97c-0.7,0.43-40.77-30.818-56.73-17.71,0,0,10.87-15.884,56.31,15.74z\"/>\n   </g>\n   <g id=\"g42\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path44\" d=\"m-128.2,90s0.6,1.8-0.2,2-29.4-41.8-48.6-34.2c0,0,15.2-11.8,48.8,32.2z\"/>\n   </g>\n   <g id=\"g46\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path48\" d=\"m-127.5,96.979s0.97,1.629,0.23,1.996c-0.74,0.368-37.72-34.476-54.83-22.914,0,0,12.3-14.8,54.6,20.918z\"/>\n   </g>\n   <g id=\"g50\" stroke-width=\"0.17200001\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path52\" d=\"m-127.62,101.35s1.12,1.53,0.42,1.97c-0.7,0.43-40.77-30.818-56.73-17.713,0,0,10.87-15.881,56.31,15.743z\"/>\n   </g>\n   <g id=\"g54\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path56\" d=\"m-129.83,103.06c0.5,6.05,1.49,12.62,3.23,15.74,0,0-3.6,12.4,5.2,25.6,0,0-0.4,7.2,1.2,10.4,0,0,4,8.4,8.8,9.2,3.88,0.65,12.607,3.72,22.468,5.12,0,0,17.132,14.08,13.932,26.88,0,0-0.4,16.4-4,18,0,0,11.6-11.2,2,5.6l-4.4,18.8s25.6-21.6,10-3.2l-10,26s19.6-18.4,12.4-10l-3.2,8.8s43.2-27.2,12.4,2.4c0,0,8-3.6,12.4-0.8,0,0,6.8-1.2,6,0.4,0,0-20.8,10.4-24.4,28.8,0,0,8.4-10,5.2,0.8l0.4,11.6s4-21.6,3.6,16c0,0,19.2-18,7.6,2.8v16.8s15.2-16.4,8.8-3.6c0,0,10-8.8,6,6.4,0,0-0.8,10.4,3.6-0.8,0,0,16-30.6,10-4.4,0,0-0.8,19.2,4,4.4,0,0,0.4,10.4,9.6,17.6,0,0-1.2-50.8,11.6-14.8l4,16.4s2.8-9.2,2.4-14.4l8,8s15.2-22.8,12-9.6c0,0-7.6,16-6,20.8,0,0,16.8-34.8,18-36.4,0,0-2,42.4,8.8,6.4,0,0,5.6,12,2.8,16.4,0,0,8-8,7.2-11.2,0,0,4.6-8.2,7.4,5.4,0,0,1.8,9.4,3.4,6.2,0,0,4,24,5.2,1.2,0,0,1.6-13.6-5.6-25.2,0,0,0.8-3.2-2-7.2,0,0,13.6,21.6,6.4-7.2,0,0,11.201,8,12.401,8,0,0-13.601-23.2-4.801-18.4,0,0-5.2-10.4,12.801,1.6,0,0-16.001-16,1.6-6.4,0,0,7.999,6.4,0.4-3.6,0,0-14.401-16,7.599,2,0,0,11.6,16.4,12.4,19.2,0,0-10-29.2-14.4-32,0,0,8.4-36.4,49.6-20.8,0,0,6.8,17.2,11.2-1.2,0,0,12.8-6.4,24,21.2,0,0,4-13.6,3.2-16.4,0,0,6.8,1.2,6,0,0,0,13.2,4.4,14.4,3.6,0,0,6.8,6.8,7.2,3.2,0,0,9.2,2.8,7.2-0.8,0,0,8.8,15.6,9.2,19.2l2.4-14,2,2.8s1.6-7.6,0.8-8.8,20,6.8,24.8,27.6l2,8.4s6-14.8,4.4-18.8c0,0,5.2,0.8,5.6,5.2,0,0,4-23.2-0.8-29.2,0,0,4.4-0.8,5.6,2.8v-7.2s7.2,0.8,7.2-1.6c0,0,4.4-4,6.4,0.8,0,0-12.4-35.2,6-16,0,0,7.2,10.8,3.6-8s-7.6-20.4-2.8-20.8c0,0,0.8-3.6-1.2-5.2s1.2,0,1.2,0,4.8,4-0.4-18c0,0,6.4,1.6-5.6-27.6,0,0,2.8-2.4-1.2-10.8,0,0,8,4.4,10.8,2.8,0,0-0.4-1.6-3.6-5.6,0,0-21.6-54.8-1.2-32.8,0,0,11.85,13.55,5.45-9.25,0,0-9.11-24.009-8.33-28.305l-429.55,23.015z\"/>\n   </g>\n   <g id=\"g58\" stroke=\"#000\" fill=\"#cc7226\">\n    <path id=\"path60\" d=\"m299.72,80.245c0.62,0.181,2.83,1.305,4.08,2.955,0,0,6.8,10.8,1.6-7.6,0,0-9.2-28.8-0.4-17.6,0,0,6,7.2,2.8-6.4-3.86-16.427-6.4-22.8-6.4-22.8s11.6,4.8-15.2-34.8l8.8,3.6s-19.6-39.6-41.2-44.8l-8-6s38.4-38,25.6-74.8c0,0-6.8-5.2-16.4,4,0,0-6.4,4.8-12.4,3.2,0,0-30.8,1.2-32.8,1.2s-36.8-37.2-102.4-19.6c0,0-5.2,2-9.599,0.8,0,0-18.401-16-67.201,6.8,0,0-10,2-11.6,2s-4.4,0-12.4,6.4-8.4,7.2-10.4,8.8c0,0-16.4,11.2-21.2,12,0,0-11.6,6.4-16,16.4l-3.6,1.2s-1.6,7.2-2,8.4c0,0-4.8,3.6-5.6,9.2,0,0-8.8,6-8.4,10.4,0,0-1.6,5.2-2.4,10,0,0-7.2,4.8-6.4,7.6,0,0-7.6,14-6.4,20.8,0,0-6.4-0.4-9.2,2,0,0-0.8,4.8-2.4,5.2,0,0-2.8,1.2-0.4,5.2,0,0-1.6,2.8-2,4.4,0,0,0.8,2.8-3.6,8.4,0,0-6.4,18.8-4.4,24,0,0,0.4,4.8-2.4,6.4,0,0-3.6-0.4,4.8,11.6,0,0,0.8,1.2-2.4,3.6,0,0-17.2,3.6-19.6,20,0,0-13.6,14.8-13.6,20,0,2.305,0.27,5.452,0.97,10.06,0,0-0.57,8.34,27.03,9.14s402.72-31.355,402.72-31.355z\"/>\n   </g>\n   <g id=\"g62\" fill=\"#cc7226\">\n    <path id=\"path64\" d=\"m-115.6,102.6c-25-39.4-10.6,17-10.6,17,8.8,34.4,138.4-3.2,138.4-3.2s168.8-30.4,180-34.4,106.4,2.4,106.4,2.4l-5.6-16.8c-64.8-46.4-84-23.2-97.6-27.2s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2-31.74-22.951-16.8,8.8c16,34-58.4,39.2-75.2,28s7.2,18.4,7.2,18.4c18.4,20-16,3.2-16,3.2-34.4-12.8-58.4,12.8-61.6,13.6s-8,4-8.8-2.4-8.31-23.101-40,3.2c-20,16.6-33.8-5.4-33.8-5.4l-2.8,11.6z\"/>\n   </g>\n   <g id=\"g66\" fill=\"#e87f3a\">\n    <path id=\"path68\" d=\"m133.51,25.346c-6.4,0.8-31.77-22.939-16.8,8.8,16.6,35.2-58.4,39.2-75.2,28-16.801-11.2,7.2,18.4,7.2,18.4,18.4,20.004-16.001,3.2-16.001,3.2-34.4-12.8-58.4,12.8-61.6,13.6s-8,4.004-8.8-2.4c-0.8-6.4-8.179-22.934-40,3.2-21.236,17.344-34.729-4.109-34.729-4.109l-3.2,10.113c-25-39.804-9.93,18.51-9.93,18.51,8.81,34.4,139.06-4.51,139.06-4.51s168.8-30.404,180-34.404,105.53,2.327,105.53,2.327l-5.53-17.309c-64.8-46.4-83.2-22.618-96.8-26.618s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g70\" fill=\"#ea8c4d\">\n    <path id=\"path72\" d=\"m134.82,27.091c-6.4,0.8-31.14-23.229-16.8,8.8,16.2,36.201-58.401,39.201-75.201,28.001s7.2,18.4,7.2,18.4c18.4,19.998-16,3.2-16,3.2-34.4-12.8-58.401,12.8-61.601,13.6s-8,3.998-8.8-2.4c-0.8-6.4-8.048-22.767-40,3.2-22.473,18.088-35.658-2.818-35.658-2.818l-3.6,8.616c-23.8-38.998-9.25,20.02-9.25,20.02,8.8,34.4,139.71-5.82,139.71-5.82s168.8-30.398,180-34.398,104.65,2.254,104.65,2.254l-5.45-17.818c-64.8-46.4-82.4-22.037-96-26.037s-11.2,5.6-14.4,6.401c-3.2,0.8-42.4-24.001-48.8-23.201z\"/>\n   </g>\n   <g id=\"g74\" fill=\"#ec9961\">\n    <path id=\"path76\" d=\"m136.13,28.837c-6.4,0.8-31.13-23.232-16.8,8.8,16.8,37.556-58.936,38.845-75.202,28-16.8-11.2,7.2,18.4,7.2,18.4,18.4,20.003-16,3.2-16,3.2-34.4-12.8-58.4,12.803-61.6,13.603s-8,4-8.8-2.403c-0.8-6.4-7.917-22.598-40.001,3.203-23.709,18.83-36.587-1.53-36.587-1.53l-4,7.13c-21.8-36.803-8.58,21.52-8.58,21.52,8.8,34.4,140.37-7.12,140.37-7.12s168.8-30.403,180-34.403,103.78,2.182,103.78,2.182l-5.38-18.327c-64.8-46.401-81.6-21.455-95.2-25.455s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g78\" fill=\"#eea575\">\n    <path id=\"path80\" d=\"m137.44,30.583c-6.4,0.8-30.63-23.454-16.8,8.8,16.8,39.2-58.403,39.2-75.203,28s7.2,18.4,7.2,18.4c18.4,19.997-16,3.2-16,3.2-34.4-12.8-58.4,12.797-61.6,13.597s-8,4-8.8-2.4c-0.8-6.397-7.785-22.428-40,3.2-24.946,19.58-37.507-0.23-37.507-0.23l-4.4,5.63c-19.8-34.798-7.91,23.04-7.91,23.04,8.8,34.4,141.02-8.44,141.02-8.44s168.8-30.397,180-34.397,102.91,2.109,102.91,2.109l-5.31-18.837c-64.8-46.4-80.8-20.872-94.4-24.872s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g82\" fill=\"#f1b288\">\n    <path id=\"path84\" d=\"m138.75,32.328c-6.4,0.8-32.37-22.651-16.8,8.8,19.2,38.8-58.404,39.2-75.204,28s7.2,18.4,7.2,18.4c18.4,20.002-16,3.2-16,3.2-34.4-12.8-58.4,12.802-61.6,13.602s-8,4-8.8-2.4c-0.8-6.402-7.654-22.265-40,3.2-26.182,20.33-38.436,1.05-38.436,1.05l-4.8,4.15c-18-33.202-7.24,24.54-7.24,24.54,8.8,34.4,141.68-9.74,141.68-9.74s168.8-30.402,180-34.402,102.03,2.036,102.03,2.036l-5.23-19.345c-64.8-46.4-80-20.291-93.6-24.291s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g86\" fill=\"#f3bf9c\">\n    <path id=\"path88\" d=\"m140.06,34.073c-6.4,0.8-32.75-22.46-16.8,8.8,20.4,40.001-58.405,39.201-75.205,28.001s7.2,18.4,7.2,18.4c18.4,19.996-16,3.2-16,3.2-34.4-12.8-58.4,12.796-61.6,13.596s-8,4-8.8-2.4c-0.8-6.396-7.523-22.092-40,3.2-27.419,21.08-39.365,2.35-39.365,2.35l-5.2,2.65c-16-30.196-6.56,26.06-6.56,26.06,8.8,34.4,142.32-11.06,142.32-11.06s168.8-30.396,180-34.396,101.16,1.963,101.16,1.963l-5.16-19.854c-64.8-46.4-79.2-19.709-92.8-23.709-13.6-4.001-11.2,5.6-14.4,6.4s-42.4-24.001-48.8-23.201z\"/>\n   </g>\n   <g id=\"g90\" fill=\"#f5ccb0\">\n    <path id=\"path92\" d=\"m141.36,35.819c-6.4,0.8-33.84-21.875-16.8,8.8,22,39.6-58.396,39.2-75.196,28s7.2,18.4,7.2,18.4c18.4,20.001-16,3.2-16,3.2-34.4-12.8-58.4,12.801-61.6,13.601s-8,4-8.8-2.4c-0.8-6.401-7.391-21.928-40,3.2-28.655,21.82-40.294,3.64-40.294,3.64l-5.6,1.16c-14.4-28.401-5.89,27.56-5.89,27.56,8.8,34.4,142.98-12.36,142.98-12.36s168.8-30.401,180-34.401,100.3,1.891,100.3,1.891l-5.1-20.364c-64.8-46.4-78.4-19.127-92-23.127s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g94\" fill=\"#f8d8c4\">\n    <path id=\"path96\" d=\"m142.67,37.565c-6.4,0.8-33.84-21.876-16.8,8.8,22,39.6-58.396,39.2-75.196,28s7.2,18.4,7.2,18.4c18.4,19.995-16,3.2-16,3.2-34.401-12.8-58.401,12.795-61.601,13.595s-8,4-8.8-2.4-7.259-21.755-40,3.2c-29.891,22.57-41.213,4.93-41.213,4.93l-6-0.33c-13.61-26.396-5.22,29.08-5.22,29.08,8.8,34.4,143.63-13.68,143.63-13.68s168.8-30.395,180-34.395,99.42,1.818,99.42,1.818l-5.01-20.873c-64.81-46.4-77.61-18.545-91.21-22.545s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g98\" fill=\"#fae5d7\">\n    <path id=\"path100\" d=\"m143.98,39.31c-6.4,0.8-33.45-22.087-16.8,8.8,22,40.8-58.397,39.2-75.197,28s7.2,18.4,7.2,18.4c18.4,20-16,3.2-16,3.2-34.4-12.8-58.4,12.8-61.6,13.6-3.201,0.8-8.001,4-8.801-2.4s-7.128-21.592-40,3.2c-31.127,23.31-42.142,6.22-42.142,6.22l-6.4-1.82c-13-24-4.55,30.58-4.55,30.58,8.8,34.4,144.29-14.98,144.29-14.98s168.8-30.4,180-34.4,98.55,1.746,98.55,1.746l-4.95-21.382c-64.8-46.401-76.8-17.964-90.4-21.964s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2z\"/>\n   </g>\n   <g id=\"g102\" fill=\"#fcf2eb\">\n    <path id=\"path104\" d=\"m145.29,41.055c-6.4,0.8-32.37-22.644-16.8,8.8,21.2,42.801-58.398,39.201-75.198,28.001s7.2,18.4,7.2,18.4c18.4,20.004-16,3.2-16,3.2-34.4-12.8-58.4,12.804-61.6,13.604s-8,4-8.8-2.4-6.997-21.428-40,3.2c-32.365,24.05-43.072,7.5-43.072,7.5l-6.8-3.3c-12.8-23.204-3.87,32.09-3.87,32.09,8.8,34.4,144.94-16.29,144.94-16.29s168.8-30.4,180-34.404c11.2-4,97.67,1.674,97.67,1.674l-4.87-21.893c-64.8-46.4-76-17.381-89.6-21.381-13.6-4.001-11.2,5.6-14.4,6.4s-42.4-24.001-48.8-23.201z\"/>\n   </g>\n   <g id=\"g106\" fill=\"#FFF\">\n    <path id=\"path108\" d=\"m-115.8,119.6c-12.8-22-3.2,33.6-3.2,33.6,8.8,34.4,145.6-17.6,145.6-17.6s168.8-30.4,180-34.4,96.8,1.6,96.8,1.6l-4.8-22.4c-64.8-46.4-75.2-16.8-88.8-20.8s-11.2,5.6-14.4,6.4-42.4-24-48.8-23.2-31.62-23.007-16.8,8.8c22.23,47.707-60.759,37.627-75.2,28-16.8-11.2,7.2,18.4,7.2,18.4,18.4,20-16,3.2-16,3.2-34.4-12.8-58.4,12.8-61.6,13.6s-8,4-8.8-2.4-6.865-21.256-40,3.2c-33.6,24.8-44,8.8-44,8.8l-7.2-4.8z\"/>\n   </g>\n   <g id=\"g110\" fill=\"#000\">\n    <path id=\"path112\" d=\"m-74.2,149.6s-7.2,11.6,13.6,24.8c0,0,1.4,1.4-16.6-2.8,0,0-6.2-2-7.8-12.4,0,0-4.8-4.4-9.6-10s20.4,0.4,20.4,0.4z\"/>\n   </g>\n   <g id=\"g114\" fill=\"#CCC\">\n    <path id=\"path116\" d=\"m65.8,102s17.698,26.82,17.1,31.6c-1.3,10.4-1.5,20,1.7,24,3.201,4,12.001,37.2,12.001,37.2s-0.4,1.2,11.999-36.8c0,0,11.6-16-8.4-34.4,0,0-35.2-28.8-34.4-21.6z\"/>\n   </g>\n   <g id=\"g118\" fill=\"#000\">\n    <path id=\"path120\" d=\"m-54.2,176.4s11.2,7.2-3.2,38.4l6.4-2.4s-0.8,11.2-4,13.6l7.2-3.2s4.8,8,0.8,12.8c0,0,16.8,8,16,14.4,0,0,6.4-8,2.4-14.4s-11.2-2.4-10.4-20.8l-8.8,3.2s5.6-8.8,5.6-15.2l-8,2.4s15.469-26.58,4.8-28c-6-0.8-8.8-0.8-8.8-0.8z\"/>\n   </g>\n   <g id=\"g122\" fill=\"#CCC\">\n    <path id=\"path124\" d=\"m-21.8,193.2s2.8-4.4,0-3.6-34,15.6-40,25.2c0,0,34.4-24.4,40-21.6z\"/>\n   </g>\n   <g id=\"g126\" fill=\"#CCC\">\n    <path id=\"path128\" d=\"m-11.4,201.2s2.8-4.4,0-3.6-34,15.6-40,25.2c0,0,34.4-24.4,40-21.6z\"/>\n   </g>\n   <g id=\"g130\" fill=\"#CCC\">\n    <path id=\"path132\" d=\"m1.8,186s2.8-4.4,0-3.6-34,15.6-40,25.2c0,0,34.4-24.4,40-21.6z\"/>\n   </g>\n   <g id=\"g134\" fill=\"#CCC\">\n    <path id=\"path136\" d=\"m-21.4,229.6s0-6-2.8-5.2-38.8,18.4-44.8,28c0,0,42-25.6,47.6-22.8z\"/>\n   </g>\n   <g id=\"g138\" fill=\"#CCC\">\n    <path id=\"path140\" d=\"m-20.2,218.8s1.2-4.8-1.6-4c-2,0-28.4,11.6-34.4,21.2,0,0,29.6-21.6,36-17.2z\"/>\n   </g>\n   <g id=\"g142\" fill=\"#CCC\">\n    <path id=\"path144\" d=\"m-34.6,266.4-10,7.6s10.4-7.6,14-6.4c0,0-6.8,11.2-7.6,16.4,0,0,10.4-12.8,16-12.4,0,0,7.6,0.4,7.6,11.2,0,0,5.6-10.4,8.8-10,0,0,1.2,6.4,0,13.2,0,0,4-7.6,8-6,0,0,6.4-2,5.6,9.6,0,0,0,10.4-0.8,13.2,0,0,5.6-26.4,8-26.8,0,0,8-1.2,12.8,7.6,0,0-4-7.6,0.8-5.6,0,0,10.8,1.6,14,8.4,0,0-6.8-12-1.2-8.8l8,6.4s8.4,21.2,10.4,22.8c0,0-7.6-21.6-6-21.6,0,0-2-12,3.2,2.8,0,0-3.2-14,2.4-13.2s10,10.8,18.4,8.4c0,0,9.601,5.6,11.601-63.6l-124,46.8z\"/>\n   </g>\n   <g id=\"g146\" fill=\"#000\">\n    <path id=\"path148\" d=\"m-29.8,173.6s14.8-6,54.8,0c0,0,7.2,0.4,14-8.4s33.6-16,40-14l9.601,6.4,0.8,1.2s12.399,10.4,12.799,18-14.399,55.6-24,71.6c-9.6,16-19.2,28.4-38.4,26,0,0-20.8-4-46.4,0,0,0-29.2-1.6-32-9.6s11.2-23.2,11.2-23.2,4.4-8.4,3.2-22.8-0.8-42.4-5.6-45.2z\"/>\n   </g>\n   <g id=\"g150\" fill=\"#e5668c\">\n    <path id=\"path152\" d=\"M-7.8,175.6c8.4,18.4-21.2,83.6-21.2,83.6-2,1.6,12.66,7.65,22.8,5.2,10.946-2.64,51.2,1.6,51.2,1.6,23.6-15.6,36.4-60,36.4-60s10.401-24-7.2-27.2c-17.6-3.2-82-3.2-82-3.2z\"/>\n   </g>\n   <g id=\"g154\" fill=\"#b23259\">\n    <path id=\"path156\" d=\"m-9.831,206.5c3.326-12.79,4.91-24.59,2.031-30.9,0,0,62.4,6.4,73.6-14.4,4.241-7.87,19.001,22.8,18.6,32.4,0,0-63,14.4-77.8,3.2l-16.431,9.7z\"/>\n   </g>\n   <g id=\"g158\" fill=\"#a5264c\">\n    <path id=\"path160\" d=\"m-5.4,222.8s2,7.2-0.4,11.2c0,0-1.6,0.8-2.8,1.2,0,0,1.2,3.6,7.2,5.2,0,0,2,4.4,4.4,4.8s7.2,6,11.2,4.8,15.2-5.2,15.2-5.2,5.6-3.2,14.4,0.4c0,0,2.375-0.8,2.8-4.8,0.5-4.7,3.6-8.4,5.6-10.4s11.6-14.8,10.4-15.2-68,8-68,8z\"/>\n   </g>\n   <g id=\"g162\" stroke=\"#000\" fill=\"#ff727f\">\n    <path id=\"path164\" d=\"m-9.8,174.4s-2.8,22.4,0.4,30.8,2.4,10.4,1.6,14.4,3.6,14,9.2,20l12,1.6s15.2-3.6,24.4-0.8c0,0,8.994,1.34,12.4-13.6,0,0,4.8-6.4,12-9.2s14.4-44.4,10.4-52.4-18.4-12.4-34.4,3.2-18-1.2-48,6z\"/>\n   </g>\n   <g id=\"g166\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path168\" d=\"m-8.2,249.2s-0.8-2-5.2-2.4c0,0-22.4-3.6-30.8-16,0,0-6.8-5.6-2.4,6,0,0,10.4,20.4,17.2,23.2,0,0,16.4,4,21.2-10.8z\"/>\n   </g>\n   <g id=\"g170\" fill=\"#cc3f4c\">\n    <path id=\"path172\" d=\"m71.742,185.23c0.659-7.91,2.612-16.52,0.858-20.03-6.446-12.89-23.419-7.5-34.4,3.2-16,15.6-18-1.2-48,6,0,0-1.745,13.96-0.905,23.98,0,0,37.305-11.58,38.105-5.98,0,0,1.6-3.2,10.8-3.2s31.942-1.17,33.542-3.97z\"/>\n   </g>\n   <g id=\"g174\" stroke-width=\"2\" stroke=\"#a51926\">\n    <path id=\"path176\" d=\"m28.6,175.2s4.8,4.8,1.2,14.4c0,0-14.4,16-12.4,30\"/>\n   </g>\n   <g id=\"g178\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path180\" d=\"m-19.4,260s-4.4-12.8,4.4-6l3.6,3.6c-1.2,1.6-6.8,5.6-8,2.4z\"/>\n   </g>\n   <g id=\"g182\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path184\" d=\"m-14.36,261.2s-3.52-10.24,3.52-4.8l2.88,2.88c-4.56,1.28,0,3.84-6.4,1.92z\"/>\n   </g>\n   <g id=\"g186\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path188\" d=\"m-9.56,261.2s-3.52-10.24,3.52-4.8l2.88,2.88c-3.36,1.28,0,3.84-6.4,1.92z\"/>\n   </g>\n   <g id=\"g190\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path192\" d=\"m-2.96,261.4s-3.52-10.24,3.52-4.8c0,0,4.383,2.33,2.881,2.88-2.961,1.08,0,3.84-6.401,1.92z\"/>\n   </g>\n   <g id=\"g194\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path196\" d=\"m3.52,261.32s-3.52-10.24,3.521-4.8l2.88,2.88c-0.96,1.28,0,3.84-6.401,1.92z\"/>\n   </g>\n   <g id=\"g198\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path200\" d=\"m10.2,262s-4.8-12.4,4.4-6l3.6,3.6c-1.2,1.6,0,4.8-8,2.4z\"/>\n   </g>\n   <g id=\"g202\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path204\" d=\"m-18.2,244.8s13.2-2.8,19.2,0.4c0,0,6,1.2,7.2,0.8s4.4-0.8,4.4-0.8\"/>\n   </g>\n   <g id=\"g206\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path208\" d=\"m15.8,253.6s12-13.6,24-9.2c7.016,2.57,6-0.8,6.8-3.6s1-7,6-10\"/>\n   </g>\n   <g id=\"g210\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path212\" d=\"m33,237.6s-4-10.8-6.8,2-6,16.4-7.6,19.2c0,0,0,5.2,8.4,4.8,0,0,10.8-0.4,11.2-3.2s-1.2-14.4-5.2-22.8z\"/>\n   </g>\n   <g id=\"g214\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path216\" d=\"m47,244.8s3.6-2.4,6-1.2\"/>\n   </g>\n   <g id=\"g218\" stroke-width=\"2\" stroke=\"#a5264c\">\n    <path id=\"path220\" d=\"m53.5,228.4s2.9-4.9,7.7-5.7\"/>\n   </g>\n   <g id=\"g222\" fill=\"#b2b2b2\">\n    <path id=\"path224\" d=\"m-25.8,265.2s18,3.2,22.4,1.6l0.4,2-20.8-1.2s-11.6-5.6-2-2.4z\"/>\n   </g>\n   <g id=\"g226\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path228\" d=\"m-11.8,172,19.6,0.8s7.2,30.8,3.6,38.4c0,0-1.2,2.8-4-2.8,0,0-18.4-32.8-21.6-34.8s1.2-1.6,2.4-1.6z\"/>\n   </g>\n   <g id=\"g230\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path232\" d=\"m-88.9,169.3s8.9,1.7,21.5,4.3c0,0,4.8,22.4,8,27.2s-0.4,4.8-4,2-18.4-16.8-20.4-21.2-5.1-12.3-5.1-12.3z\"/>\n   </g>\n   <g id=\"g234\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path236\" d=\"m-67.039,173.82s5.8,1.55,6.809,3.76c1.008,2.22-1.202,5.51-1.202,5.51s-1,3.31-2.202,1.15c-1.202-2.17-4.074-9.83-3.405-10.42z\"/>\n   </g>\n   <g id=\"g238\" fill=\"#000\">\n    <path id=\"path240\" d=\"m-67,173.6s3.6,5.2,7.2,5.2,3.982-0.41,6.8,0.2c4.6,1,4.2-1,10.8,0.2,2.64,0.48,5.2-0.4,8,0.8s6,0.4,7.2-1.6,6-6.2,6-6.2-12.8,1.8-15.6,2.6c0,0-22.4,1.2-30.4-1.2z\"/>\n   </g>\n   <g id=\"g242\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path244\" d=\"m-22.4,173.8s-6.45,3.5-6.85,5.9,5.25,6.1,5.25,6.1,2.75,4.6,3.35,2.2-0.95-13.8-1.75-14.2z\"/>\n   </g>\n   <g id=\"g246\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path248\" d=\"m-59.885,179.26s7.007,11.19,7.224-0.02c0,0,0.557-1.26-1.203-1.28-6.075-0.07-4.554-4.18-6.021,1.3z\"/>\n   </g>\n   <g id=\"g250\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path252\" d=\"m-52.707,179.51s7.921,11.19,7.285-0.09c0,0,0.007-0.33-1.746-0.48-4.747-0.42-4.402-4.94-5.539,0.57z\"/>\n   </g>\n   <g id=\"g254\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path256\" d=\"m-45.494,179.52s7.96,10.63,7.291,0.96c0,0,0.119-1.23-1.535-1.53-3.892-0.71-4.103-3.95-5.756,0.57z\"/>\n   </g>\n   <g id=\"g258\" stroke-width=\"0.5\" stroke=\"#000\" fill=\"#FFC\">\n    <path id=\"path260\" d=\"m-38.618,179.6s7.9,11.56,8.248,1.78c0,0,1.644-1.38-0.102-1.6-5.818-0.74-5.02-5.19-8.146-0.18z\"/>\n   </g>\n   <g id=\"g262\" fill=\"#e5e5b2\">\n    <path id=\"path264\" d=\"m-74.792,183.13-7.658-1.53c-2.6-5-4.7-11.15-4.7-11.15s6.35,1,18.85,3.8c0,0,0.876,3.32,2.348,9.11l-8.84-0.23z\"/>\n   </g>\n   <g id=\"g266\" fill=\"#e5e5b2\">\n    <path id=\"path268\" d=\"m-9.724,178.47c-1.666-2.51-2.983-4.26-3.633-4.67-3.013-1.88,1.13-1.51,2.259-1.51l18.454,0.76s0.524,2.24,1.208,5.63c0,0-10.088-2.01-18.288-0.21z\"/>\n   </g>\n   <g id=\"g270\" fill=\"#cc7226\">\n    <path id=\"path272\" d=\"m43.88,40.321c27.721,3.96,53.241-31.68,55.001-41.361,1.759-9.68-8.36-21.56-8.36-21.56,1.32-3.08-3.52-17.16-8.8-26.4s-21.181-8.266-38.721-9.24c-15.84-0.88-34.32,22.44-35.64,24.2s4.84,40.041,6.16,45.761-1.32,32.12-1.32,32.12c34.24-9.1,3.96-7.48,31.68-3.52z\"/>\n   </g>\n   <g id=\"g274\" fill=\"#ea8e51\">\n    <path id=\"path276\" d=\"m8.088-33.392c-1.296,1.728,4.752,39.313,6.048,44.929s-1.296,31.536-1.296,31.536c32.672-8.88,3.888-7.344,31.104-3.456,27.217,3.888,52.273-31.104,54.001-40.609,1.728-9.504-8.208-21.168-8.208-21.168,1.296-3.024-3.456-16.848-8.64-25.92s-20.795-8.115-38.017-9.072c-15.552-0.864-33.696,22.032-34.992,23.76z\"/>\n   </g>\n   <g id=\"g278\" fill=\"#efaa7c\">\n    <path id=\"path280\" d=\"m8.816-32.744c-1.272,1.696,4.664,38.585,5.936,44.097s-1.272,30.952-1.272,30.952c31.404-9.16,3.816-7.208,30.528-3.392,26.713,3.816,51.305-30.528,53.001-39.857,1.696-9.328-8.056-20.776-8.056-20.776,1.272-2.968-3.392-16.536-8.48-25.44s-20.41-7.965-37.313-8.904c-15.264-0.848-33.072,21.624-34.344,23.32z\"/>\n   </g>\n   <g id=\"g282\" fill=\"#f4c6a8\">\n    <path id=\"path284\" d=\"m9.544-32.096c-1.248,1.664,4.576,37.857,5.824,43.265s-1.248,30.368-1.248,30.368c29.436-9.04,3.744-7.072,29.952-3.328,26.209,3.744,50.337-29.952,52.001-39.104,1.664-9.153-7.904-20.385-7.904-20.385,1.248-2.912-3.328-16.224-8.32-24.96s-20.025-7.815-36.609-8.736c-14.976-0.832-32.448,21.216-33.696,22.88z\"/>\n   </g>\n   <g id=\"g286\" fill=\"#f9e2d3\">\n    <path id=\"path288\" d=\"m10.272-31.448c-1.224,1.632,4.488,37.129,5.712,42.433s-1.224,29.784-1.224,29.784c27.868-8.92,3.672-6.936,29.376-3.264,25.705,3.672,49.369-29.376,51.001-38.353,1.632-8.976-7.752-19.992-7.752-19.992,1.224-2.856-3.264-15.912-8.16-24.48s-19.64-7.665-35.905-8.568c-14.688-0.816-31.824,20.808-33.048,22.44z\"/>\n   </g>\n   <g id=\"g290\" fill=\"#FFF\">\n    <path id=\"path292\" d=\"M44.2,36.8c25.2,3.6,48.401-28.8,50.001-37.6s-7.6-19.6-7.6-19.6c1.2-2.8-3.201-15.6-8.001-24s-19.254-7.514-35.2-8.4c-14.4-0.8-31.2,20.4-32.4,22s4.4,36.4,5.6,41.6-1.2,29.2-1.2,29.2c25.5-8.6,3.6-6.8,28.8-3.2z\"/>\n   </g>\n   <g id=\"g294\" fill=\"#CCC\">\n    <path id=\"path296\" d=\"m90.601,2.8s-27.801,7.6-39.401,6c0,0-15.8-6.6-24.6,15.2,0,0-3.6,7.2-5.6,9.2s69.601-30.4,69.601-30.4z\"/>\n   </g>\n   <g id=\"g298\" fill=\"#000\">\n    <path id=\"path300\" d=\"m94.401,0.6s-29.001,12.2-39.001,11.8c0,0-16.4-4.6-24.8,10,0,0-8.4,9.2-11.6,10.8,0,0-0.4,1.6,6-2.4l10.4,5.2s14.8,9.6,24.4-6.4c0,0,4-11.2,4-13.2s21.2-7.6,22.801-8c1.6-0.4,8.2-4.6,7.8-7.8z\"/>\n   </g>\n   <g id=\"g302\" fill=\"#99cc32\">\n    <path id=\"path304\" d=\"m47,36.514c-6.872,0-15.245-3.865-15.245-10.114,0-6.248,8.373-12.513,15.245-12.513,6.874,0,12.446,5.065,12.446,11.313,0,6.249-5.572,11.314-12.446,11.314z\"/>\n   </g>\n   <g id=\"g306\" fill=\"#659900\">\n    <path id=\"path308\" d=\"m43.377,19.83c-4.846,0.722-9.935,2.225-9.863,2.009,1.54-4.619,7.901-7.952,13.486-7.952,4.296,0,8.084,1.978,10.32,4.988,0,0-5.316-0.33-13.943,0.955z\"/>\n   </g>\n   <g id=\"g310\" fill=\"#FFF\">\n    <path id=\"path312\" d=\"m55.4,19.6s-4.4-3.2-4.4-1c0,0,3.6,4.4,4.4,1z\"/>\n   </g>\n   <g id=\"g314\" fill=\"#000\">\n    <path id=\"path316\" d=\"m45.4,27.726c-2.499,0-4.525-2.026-4.525-4.526,0-2.499,2.026-4.525,4.525-4.525,2.5,0,4.526,2.026,4.526,4.525,0,2.5-2.026,4.526-4.526,4.526z\"/>\n   </g>\n   <g id=\"g318\" fill=\"#cc7226\">\n    <path id=\"path320\" d=\"m-58.6,14.4s-3.2-21.2-0.8-25.6c0,0,10.8-10,10.4-13.6,0,0-0.4-18-1.6-18.8s-8.8-6.8-14.8-0.4c0,0-10.4,18-9.6,24.4v2s-7.6-0.4-9.2,1.6c0,0-1.2,5.2-2.4,5.6,0,0-2.8,2.4-0.8,5.2,0,0-2,2.4-1.6,6.4l7.6,4s2,14.4,12.8,19.6c4.836,2.329,8-4.4,10-10.4z\"/>\n   </g>\n   <g id=\"g322\" fill=\"#FFF\">\n    <path id=\"path324\" d=\"m-59.6,12.56s-2.88-19.08-0.72-23.04c0,0,9.72-9,9.36-12.24,0,0-0.36-16.2-1.44-16.92s-7.92-6.12-13.32-0.36c0,0-9.36,16.2-8.64,21.96v1.8s-6.84-0.36-8.28,1.44c0,0-1.08,4.68-2.16,5.04,0,0-2.52,2.16-0.72,4.68,0,0-1.8,2.16-1.44,5.76l6.84,3.6s1.8,12.96,11.52,17.64c4.352,2.095,7.2-3.96,9-9.36z\"/>\n   </g>\n   <g id=\"g326\" fill=\"#eb955c\">\n    <path id=\"path328\" d=\"m-51.05-42.61c-1.09-0.86-8.58-6.63-14.43-0.39,0,0-10.14,17.55-9.36,23.79v1.95s-7.41-0.39-8.97,1.56c0,0-1.17,5.07-2.34,5.46,0,0-2.73,2.34-0.78,5.07,0,0-1.95,2.34-1.56,6.24l7.41,3.9s1.95,14.04,12.48,19.11c4.714,2.27,7.8-4.29,9.75-10.14,0,0-3.12-20.67-0.78-24.96,0,0,10.53-9.75,10.14-13.26,0,0-0.39-17.55-1.56-18.33z\"/>\n   </g>\n   <g id=\"g330\" fill=\"#f2b892\">\n    <path id=\"path332\" d=\"m-51.5-41.62c-0.98-0.92-8.36-6.46-14.06-0.38,0,0-9.88,17.1-9.12,23.18v1.9s-7.22-0.38-8.74,1.52c0,0-1.14,4.94-2.28,5.32,0,0-2.66,2.28-0.76,4.94,0,0-1.9,2.28-1.52,6.08l7.22,3.8s1.9,13.68,12.16,18.62c4.594,2.212,7.6-4.18,9.5-9.88,0,0-3.04-20.14-0.76-24.32,0,0,10.26-9.5,9.88-12.92,0,0-0.38-17.1-1.52-17.86z\"/>\n   </g>\n   <g id=\"g334\" fill=\"#f8dcc8\">\n    <path id=\"path336\" d=\"m-51.95-40.63c-0.87-0.98-8.14-6.29-13.69-0.37,0,0-9.62,16.65-8.88,22.57v1.85s-7.03-0.37-8.51,1.48c0,0-1.11,4.81-2.22,5.18,0,0-2.59,2.22-0.74,4.81,0,0-1.85,2.22-1.48,5.92l7.03,3.7s1.85,13.32,11.84,18.13c4.473,2.154,7.4-4.07,9.25-9.62,0,0-2.96-19.61-0.74-23.68,0,0,9.99-9.25,9.62-12.58,0,0-0.37-16.65-1.48-17.39z\"/>\n   </g>\n   <g id=\"g338\" fill=\"#FFF\">\n    <path id=\"path340\" d=\"m-59.6,12.46s-2.88-18.98-0.72-22.94c0,0,9.72-9,9.36-12.24,0,0-0.36-16.2-1.44-16.92-0.76-1.04-7.92-6.12-13.32-0.36,0,0-9.36,16.2-8.64,21.96v1.8s-6.84-0.36-8.28,1.44c0,0-1.08,4.68-2.16,5.04,0,0-2.52,2.16-0.72,4.68,0,0-1.8,2.16-1.44,5.76l6.84,3.6s1.8,12.96,11.52,17.64c4.352,2.095,7.2-4.06,9-9.46z\"/>\n   </g>\n   <g id=\"g342\" fill=\"#CCC\">\n    <path id=\"path344\" d=\"m-62.7,6.2s-21.6-10.2-22.5-11c0,0,9.1,8.2,9.9,8.2s12.6,2.8,12.6,2.8z\"/>\n   </g>\n   <g id=\"g346\" fill=\"#000\">\n    <path id=\"path348\" d=\"m-79.8,0s18.4,3.6,18.4,8c0,2.912-0.243,16.331-5.6,14.8-8.4-2.4-4.8-16.8-12.8-22.8z\"/>\n   </g>\n   <g id=\"g350\" fill=\"#99cc32\">\n    <path id=\"path352\" d=\"m-71.4,3.8s8.978,1.474,10,4.2c0.6,1.6,1.263,9.908-4.2,11-4.552,0.911-6.782-9.31-5.8-15.2z\"/>\n   </g>\n   <g id=\"g354\" fill=\"#000\">\n    <path id=\"path356\" d=\"m14.595,46.349c-0.497-1.742,0.814-1.611,2.605-2.149,2-0.6,14.2-4.4,15-7s14,1.8,14,1.8c1.8,0.8,6.2,3.4,6.2,3.4,4.8,1.2,11.4,1.6,11.4,1.6,2.4,1,5.8,3.8,5.8,3.8,14.6,10.2,27.001,3,27.001,3,19.999-6.6,13.999-23.8,13.999-23.8-3-9,0.2-12.4,0.2-12.4,0.2-3.8,7.4,2.6,7.4,2.6,2.6,4.2,3.4,9.2,3.4,9.2,8,11.2,4.6-6.6,4.6-6.6,0.2-1-2.6-4.6-2.6-5.8s-1.8-4.6-1.8-4.6c-3-3.4-0.6-10.4-0.6-10.4,1.8-13.8-0.4-12-0.4-12-1.2-1.8-10.4,8.2-10.4,8.2-2.2,3.4-8.2,5-8.2,5-2.799,1.8-6.199,0.4-6.199,0.4-2.6-0.4-8.2,6.6-8.2,6.6,2.8-0.2,5.2,4.2,7.6,4.4s4.2-2.4,5.799-3c1.6-0.6,4.4,5.2,4.4,5.2,0.4,2.6-5.2,7.4-5.2,7.4-0.4,4.6-1.999,3-1.999,3-3-0.6-4.2,3.2-5.2,7.8s-5.2,5-5.2,5c-1.6,7.4-2.801,4.4-2.801,4.4-0.2-5.6-6.2,0.2-6.2,0.2-1.2,2-5.8-0.2-5.8-0.2-6.8-2-4.4-4-4.4-4,1.8-2.2,13,0,13,0,2.2-1.6-5.8-5.6-5.8-5.6-0.6-1.8,0.4-6.2,0.4-6.2,1.2-3.2,8-8.8,8-8.8,9.401-1.2,6.601-2.8,6.601-2.8-6.2-5.2-12.001,2.4-12.001,2.4-2.2,6.2-19.6,21.2-19.6,21.2-4.8,3.4-2.2-3.4-6.2,0s-24.6-5.6-24.6-5.6c-11.562-1.193-14.294,14.549-17.823,11.429,0,0,5.418,8.52,3.818,2.92z\"/>\n   </g>\n   <g id=\"g358\" fill=\"#000\">\n    <path id=\"path360\" d=\"m209.4-120s-25.6,8-28.4,26.8c0,0-2.4,22.8,18,40.4,0,0,0.4,6.4,2.4,9.6,0,0-1.6,4.8,17.2-2.8l27.2-8.4s6.4-2.4,11.6-11.2,20.4-27.6,16.8-52.8c0,0,1.2-11.2-4.8-11.6,0,0-8.4-1.6-15.6,6,0,0-6.8,3.2-9.2,2.8l-35.2,1.2z\"/>\n   </g>\n   <g id=\"g362\" fill=\"#000\">\n    <path id=\"path364\" d=\"m264.02-120.99s2.1-8.93-2.74-4.09c0,0-7.04,5.72-14.52,5.72,0,0-14.52,2.2-18.92,15.4,0,0-3.96,26.84,3.96,32.56,0,0,4.84,7.48,11.88,0.88s22.54-36.83,20.34-50.47z\"/>\n   </g>\n   <g id=\"g366\" fill=\"#323232\">\n    <path id=\"path368\" d=\"m263.65-120.63s2.09-8.75-2.66-3.99c0,0-6.92,5.61-14.26,5.61,0,0-14.26,2.16-18.58,15.12,0,0-3.89,26.354,3.89,31.97,0,0,4.75,7.344,11.66,0.864,6.92-6.48,22.11-36.184,19.95-49.574z\"/>\n   </g>\n   <g id=\"g370\" fill=\"#666\">\n    <path id=\"path372\" d=\"m263.27-120.27s2.08-8.56-2.58-3.9c0,0-6.78,5.51-13.99,5.51,0,0-14,2.12-18.24,14.84,0,0-3.81,25.868,3.82,31.38,0,0,4.66,7.208,11.45,0.848,6.78-6.36,21.66-35.538,19.54-48.678z\"/>\n   </g>\n   <g id=\"g374\" fill=\"#999\">\n    <path id=\"path376\" d=\"m262.9-119.92s2.07-8.37-2.51-3.79c0,0-6.65,5.41-13.73,5.41,0,0-13.72,2.08-17.88,14.56,0,0-3.75,25.372,3.74,30.78,0,0,4.58,7.072,11.23,0.832,6.66-6.24,21.23-34.892,19.15-47.792z\"/>\n   </g>\n   <g id=\"g378\" fill=\"#CCC\">\n    <path id=\"path380\" d=\"m262.53-119.56s2.06-8.18-2.43-3.7c0,0-6.53,5.31-13.47,5.31,0,0-13.46,2.04-17.54,14.28,0,0-3.67,24.886,3.67,30.19,0,0,4.49,6.936,11.02,0.816,6.52-6.12,20.79-34.246,18.75-46.896z\"/>\n   </g>\n   <g id=\"g382\" fill=\"#FFF\">\n    <path id=\"path384\" d=\"m262.15-119.2s2.05-8-2.35-3.6c0,0-6.4,5.2-13.2,5.2,0,0-13.2,2-17.2,14,0,0-3.6,24.4,3.6,29.6,0,0,4.4,6.8,10.8,0.8s20.35-33.6,18.35-46z\"/>\n   </g>\n   <g id=\"g386\" fill=\"#992600\">\n    <path id=\"path388\" d=\"m50.6,84s-20.4-19.2-28.4-20c0,0-34.4-4-49.2,14,0,0,17.6-20.4,45.2-14.8,0,0-21.6-4.4-34-1.2l-26.4,14-2.8,4.8s4-14.8,22.4-20.8c0,0,22.8-4.8,33.6,0,0,0-21.6-6.8-31.6-4.8,0,0-30.4-2.4-43.2,24,0,0,4-14.4,18.8-21.6,0,0,13.6-8.8,34-6,0,0,14.4,3.2,19.6,5.6s4-0.4-4.4-5.2c0,0-5.6-10-19.6-9.6,0,0-42.8,3.6-53.2,15.6,0,0,13.6-11.2,24-14,0,0,22.4-8,30.8-7.2,0,0,24.8,1,32.4-3,0,0-11.2,5-8,8.2s10,10.8,10,12,24.2,23.3,27.8,27.7l2.2,2.3z\"/>\n   </g>\n   <g id=\"g390\" fill=\"#CCC\">\n    <path id=\"path392\" d=\"m189,278s-15.5-36.5-28-46c0,0,26,16,29.5,34,0,0,0,10-1.5,12z\"/>\n   </g>\n   <g id=\"g394\" fill=\"#CCC\">\n    <path id=\"path396\" d=\"m236,285.5s-26.5-55-45-79c0,0,43.5,37.5,48.5,64l0.5,5.5-3-2.5s-0.5,9-1,12z\"/>\n   </g>\n   <g id=\"g398\" fill=\"#CCC\">\n    <path id=\"path400\" d=\"m292.5,237s-62.5-59.5-64-62c0,0,60.5,66,63.5,73.5,0,0-2-9,0.5-11.5z\"/>\n   </g>\n   <g id=\"g402\" fill=\"#CCC\">\n    <path id=\"path404\" d=\"m104,280.5s19.5-52,38.5-29.5c0,0,15,10,14.5,13,0,0-4-6.5-22-6,0,0-19-3-31,22.5z\"/>\n   </g>\n   <g id=\"g406\" fill=\"#CCC\">\n    <path id=\"path408\" d=\"m294.5,153s-45-28.5-52.5-30c-11.81-2.36,49.5,29,54.5,39.5,0,0,2-2.5-2-9.5z\"/>\n   </g>\n   <g id=\"g410\" fill=\"#000\">\n    <path id=\"path412\" d=\"m143.8,259.6s20.4-2,27.2-8.8l4.4,3.6,17.6-38.4,3.6,5.2s14.4-14.8,13.6-22.8,12.8,6,12.8,6-0.8-11.6,6.4-4.8c0,0-2.4-15.6,6-7.6,0,0-10.54-30.16,12-4.4,5.6,6.4,1.2-0.4,1.2-0.4s-26-48-4.4-33.6c0,0,2-22.8,0.8-27.2s-3.2-26.8-8-32,0.4-6.8,6-1.6c0,0-11.2-24,2-12,0,0-3.6-15.2-8-18,0,0-5.6-17.2,9.6-6.4,0,0-4.4-12.4-7.6-15.6,0,0-11.6-27.6-4.4-22.8l4.4,3.6s-6.8-14-0.4-9.6,6.4,4,6.4,4-21.2-33.2-0.8-15.6c0,0-8.16-13.918-11.6-20.8,0,0-18.8-20.4-4.4-14l4.8,1.6s-8.8-10-16.8-11.6,2.4-8,8.8-6,22,9.6,22,9.6,12.8,18.8,16.8,19.2c0,0-20-7.6-14,0.4,0,0,14.4,14,7.2,13.6,0,0-6,7.2-1.2,16,0,0-18.46-18.391-3.6,7.2l6.8,16.4s-24.4-24.8-13.2-2.8c0,0,17.2,23.6,19.2,24s6.4,9.2,6.4,9.2l-4.4-2,5.2,8.8s-11.2-12-5.2,1.2l5.6,14.4s-20.4-22-6.8,7.6c0,0-16.4-5.2-7.6,12,0,0-1.6,16-1.2,21.2s1.6,33.6-2.8,41.6,6,27.2,8,31.2,5.6,14.8-3.2,5.6-4.4-3.6-2.4,5.2,8,24.4,7.2,30c0,0-1.2,1.2-4.4-2.4,0,0-14.8-22.8-13.2-8.4,0,0-1.2,8-4.4,16.8,0,0-3.2,10.8-3.2,2,0,0-3.2-16.8-6-9.2s-6.4,13.6-9.2,16-8-20.4-9.2-10c0,0-12-12.4-16.8,4l-11.6,16.4s-0.4-12.4-1.6-6.4c0,0-30,6-40.4,1.6z\"/>\n   </g>\n   <g id=\"g414\" fill=\"#000\">\n    <path id=\"path416\" d=\"m109.4-97.2s-11.599-8-15.599-7.6,27.599-8.8,68.799,18.8c0,0,4.8,2.8,8.4,2.4,0,0,3.2,2.4,0.4,6,0,0-8.8,9.6,2.4,20.8,0,0,18.4,6.8,12.8-2,0,0,10.8,4,13.2,8s1.2,0,1.2,0l-12.4-12.4s-5.2-2-8-10.4-5.2-18.4-0.8-21.6c0,0-4,4.4-3.2,0.4s4.4-7.6,6-8,18-16.2,24.8-16.6c0,0-9.2,1.4-12.2,0.4s-29.6-12.4-35.6-13.6c0,0-16.8-6.6-4.8-4.6,0,0,35.8,3.8,54,17,0,0-7.2-8.4-25.6-15.4,0,0-22.2-12.6-57.4-7.6,0,0-17.8,3.2-25.6,5,0,0-2.599-0.6-3.199-1s-12.401-9.4-40.001-2.4c0,0-17,4.6-25.6,9.4,0,0-15.2,1.2-18.8,4.4,0,0-18.6,14.6-20.6,15.4s-13.4,8.4-14.2,8.8c0,0,24.6-6.6,27-9s19.8-5,22.2-3.6,10.8,0.8,1.2,1.4c0,0,75.6,14.8,76.4,16.8s4.8,0.8,4.8,0.8z\"/>\n   </g>\n   <g id=\"g418\" fill=\"#cc7226\">\n    <path id=\"path420\" d=\"m180.8-106.4s-10.2-7.4-12.2-7.4-14.4-10.2-18.6-9.8-16.4-9.6-43.8-1.4c0,0-0.6-2,3-2.8,0,0,6.4-2.2,6.8-2.8,0,0,20.2-4.2,27.4-0.6,0,0,9.2,2.6,15.4,8.8,0,0,11.2,3.2,14.4,2.2,0,0,8.8,2.2,9.2,4,0,0,5.8,3,4,5.6,0,0,0.4,1.6-5.6,4.2z\"/>\n   </g>\n   <g id=\"g422\" fill=\"#cc7226\">\n    <path id=\"path424\" d=\"m168.33-108.51c0.81,0.63,1.83,0.73,2.43,1.54,0.24,0.31-0.05,0.64-0.37,0.74-1.04,0.31-2.1-0.26-3.24,0.33-0.4,0.21-1.04,0.03-1.6-0.12-1.63-0.44-3.46-0.47-5.15,0.22-1.98-1.13-4.34-0.54-6.42-1.55-0.06-0.02-0.28,0.32-0.36,0.3-3.04-1.15-6.79-0.87-9.22-3.15-2.43-0.41-4.78-0.87-7.21-1.55-1.82-0.51-3.23-1.5-4.85-2.33-1.38-0.71-2.83-1.23-4.37-1.61-1.86-0.45-3.69-0.34-5.58-0.86-0.1-0.02-0.29,0.32-0.37,0.3-0.32-0.11-0.62-0.69-0.79-0.64-1.68,0.52-3.17-0.45-4.83-0.11-1.18-1.22-2.9-0.98-4.45-1.42-2.97-0.85-6.12,0.42-9.15-0.58,4.11-1.84,8.8-0.61,12.86-2.68,2.33-1.18,4.99-0.08,7.56-0.84,0.49-0.15,1.18-0.35,1.58,0.32,0.14-0.14,0.32-0.37,0.38-0.35,2.44,1.16,4.76,2.43,7.24,3.5,0.34,0.15,0.88-0.09,1.13,0.12,1.52,1.21,3.46,1.11,4.85,2.33,1.7-0.5,3.49-0.12,5.22-0.75,0.08-0.02,0.31,0.32,0.34,0.3,1.14-0.75,2.29-0.48,3.18-0.18,0.34,0.12,1,0.37,1.31,0.44,1.12,0.27,1.98,0.75,3.16,0.94,0.11,0.02,0.3-0.32,0.37-0.3,1.12,0.44,2.16,0.39,2.82,1.55,0.14-0.14,0.3-0.37,0.38-0.35,1.03,0.34,1.68,1.1,2.78,1.34,0.48,0.1,1.1,0.73,1.67,0.91,2.39,0.73,4.24,2.26,6.43,3.15,0.76,0.31,1.64,0.55,2.27,1.04z\"/>\n   </g>\n   <g id=\"g426\" fill=\"#cc7226\">\n    <path id=\"path428\" d=\"m91.696-122.74c-2.518-1.72-4.886-2.83-7.328-4.62-0.181-0.13-0.541,0.04-0.743-0.08-1.007-0.61-1.895-1.19-2.877-1.89-0.539-0.38-1.36-0.37-1.868-0.63-2.544-1.29-5.173-1.85-7.68-3.04,0.682-0.64,1.804-0.39,2.4-1.2,0.195,0.28,0.433,0.56,0.786,0.37,1.678-0.9,3.528-1.05,5.204-0.96,1.704,0.09,3.424,0.39,5.199,0.67,0.307,0.04,0.506,0.56,0.829,0.66,2.228,0.66,4.617,0.14,6.736,0.98,1.591,0.63,3.161,1.45,4.4,2.72,0.252,0.26-0.073,0.57-0.353,0.76,0.388-0.11,0.661,0.1,0.772,0.41,0.084,0.24,0.084,0.54,0,0.78-0.112,0.31-0.391,0.41-0.765,0.46-1.407,0.19,0.365-1.19-0.335-0.74-1.273,0.82-0.527,2.22-1.272,3.49-0.28-0.19-0.51-0.41-0.4-0.8,0.234,0.52-0.368,0.81-0.536,1.13-0.385,0.72-1.284,2.14-2.169,1.53z\"/>\n   </g>\n   <g id=\"g430\" fill=\"#cc7226\">\n    <path id=\"path432\" d=\"m59.198-115.39c-3.154-0.79-6.204-0.68-9.22-1.96-0.067-0.02-0.29,0.32-0.354,0.3-1.366-0.6-2.284-1.56-3.36-2.61-0.913-0.89-2.571-0.5-3.845-0.99-0.324-0.12-0.527-0.63-0.828-0.67-1.219-0.16-2.146-1.11-3.191-1.68,2.336-0.8,4.747-0.76,7.209-1.15,0.113-0.02,0.258,0.31,0.391,0.31,0.136,0,0.266-0.23,0.4-0.36,0.195,0.28,0.497,0.61,0.754,0.35,0.548-0.54,1.104-0.35,1.644-0.31,0.144,0.01,0.269,0.32,0.402,0.32,0.136,0,0.267-0.32,0.4-0.32,0.136,0,0.267,0.32,0.4,0.32,0.136,0,0.266-0.23,0.4-0.36,0.692,0.78,1.577,0.23,2.399,0.41,1.038,0.22,1.305,1.37,2.379,1.67,4.715,1.3,8.852,3.45,13.215,5.54,0.307,0.14,0.517,0.39,0.407,0.78,0.267,0,0.58-0.09,0.77,0.04,1.058,0.74,2.099,1.28,2.796,2.38,0.216,0.34-0.113,0.75-0.346,0.7-4.429-1-8.435-1.61-12.822-2.71z\"/>\n   </g>\n   <g id=\"g434\" fill=\"#cc7226\">\n    <path id=\"path436\" d=\"m45.338-71.179c-1.592-1.219-2.176-3.25-3.304-5.042-0.214-0.34,0.06-0.654,0.377-0.743,0.56-0.159,1.103,0.319,1.512,0.521,1.745,0.862,3.28,2.104,5.277,2.243,1.99,2.234,6.25,2.619,6.257,6,0.001,0.859-1.427-0.059-1.857,0.8-2.451-1.003-4.84-0.9-7.22-2.367-0.617-0.381-0.287-0.834-1.042-1.412z\"/>\n   </g>\n   <g id=\"g438\" fill=\"#cc7226\">\n    <path id=\"path440\" d=\"m17.8-123.76c0.135,0,7.166,0.24,7.149,0.35-0.045,0.31-7.775,1.36-8.139,1.19-0.164-0.08-7.676,2.35-7.81,2.22,0.268-0.14,8.534-3.76,8.8-3.76z\"/>\n   </g>\n   <g id=\"g442\" fill=\"#000\">\n    <path id=\"path444\" d=\"m33.2-114s-14.8,1.8-19.2,3-23,8.8-26,10.8c0,0-13.4,5.4-30.4,25.4,0,0,7.6-3.4,9.8-6.2,0,0,13.6-12.6,13.4-10,0,0,12.2-8.6,11.6-6.4,0,0,24.4-11.2,22.4-8,0,0,21.6-4.6,20.6-2.6,0,0,18.8,4.4,16,4.6,0,0-5.8,1.2,0.6,4.8,0,0-3.4,4.4-8.8,0.4s-2.4-1.8-7.4-0.8c0,0-2.6,0.8-7.2-3.2,0,0-5.6-4.6-14.4-1,0,0-30.6,12.6-32.6,13.2,0,0-3.6,2.8-6,6.4,0,0-5.8,4.4-8.8,5.8,0,0-12.8,11.6-14,13,0,0-3.4,5.2-4.2,5.6,0,0,6.4-3.8,8.4-5.8,0,0,14-10,19.4-10.8,0,0,4.4-3,5.2-4.4,0,0,14.4-9.2,18.6-9.2,0,0,9.2,5.2,11.6-1.8,0,0,5.8-1.8,11.4-0.6,0,0,3.2-2.6,2.4-4.8,0,0,1.6-1.8,2.6,2,0,0,3.4,3.6,8.2,1.6,0,0,4-0.2,2,2.2,0,0-4.4,3.8-16.2,4,0,0-12.4,0.6-28.8,8.2,0,0-29.8,10.4-39,20.8,0,0-6.4,8.8-11.8,10,0,0-5.8,0.8-11.8,8.2,0,0,9.8-5.8,18.8-5.8,0,0,4-2.4,0.2,1.2,0,0-3.6,7.6-2,13,0,0-0.6,5.2-1.4,6.8,0,0-7.8,12.8-7.8,15.2s1.2,12.2,1.6,12.8-1-1.6,2.8,0.8,6.6,4,7.4,6.8-2-5.4-2.2-7.2-4.4-9-3.6-11.4c0,0,1,1,1.8,2.4,0,0-0.6-0.6,0-4.2,0,0,0.8-5.2,2.2-8.4s3.4-7,3.8-7.8,0.4-6.6,1.8-4l3.4,2.6s-2.8-2.6-0.6-4.8c0,0-1-5.6,0.8-8.2,0,0,7-8.4,8.6-9.4s0.2-0.6,0.2-0.6,6-4.2,0.2-2.6c0,0-4,1.6-7,1.6,0,0-7.6,2-3.6-2.2s14-9.6,17.8-9.4l0.8,1.6,11.2-2.4-1.2,0.8s-0.2-0.2,4-0.6,10,1,11.4-0.8,4.8-2.8,4.4-1.4-0.6,3.4-0.6,3.4,5-5.8,4.4-3.6-8.8,7.4-10.2,13.6l10.4-8.2,3.6-3s3.6,2.2,3.8,0.6,4.8-7.4,6-7.2,3.2-2.6,3,0,7.4,8,7.4,8,3.2-1.8,4.6-0.4,5.6-19.8,5.6-19.8l25-10.6,43.6-3.4-16.999-6.8-61.001-11.4z\"/>\n   </g>\n   <g id=\"g446\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path448\" d=\"m51.4,85s-15-16.8-23.4-19.4c0,0-13.4-6.8-38,1\"/>\n   </g>\n   <g id=\"g450\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path452\" d=\"m24.8,64.2s-25.2-8-40.6-3.8c0,0-18.4,2-26.8,15.8\"/>\n   </g>\n   <g id=\"g454\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path456\" d=\"m21.2,63s-17-7.2-31.8-9.4c0,0-16.6-2.6-33.2,4.6,0,0-12.2,6-17.6,16.2\"/>\n   </g>\n   <g id=\"g458\" stroke-width=\"2\" stroke=\"#4c0000\">\n    <path id=\"path460\" d=\"m22.2,63.4s-15.4-11-16.4-12.4c0,0-7-11-20-11.4,0,0-21.4,0.8-38.6,8.8\"/>\n   </g>\n   <g id=\"g462\" fill=\"#000\">\n    <path id=\"path464\" d=\"M20.895,54.407c1.542,1.463,28.505,30.393,28.505,30.393,35.2,36.6,7.2,2.4,7.2,2.4-7.6-4.8-16.8-23.6-16.8-23.6-1.2-2.8,14,7.2,14,7.2,4,0.8,17.6,20,17.6,20-6.8-2.4-2,4.8-2,4.8,2.8,2,23.201,17.6,23.201,17.6,3.6,4,7.599,5.6,7.599,5.6,14-5.2,7.6,8,7.6,8,2.4,6.8,8-4.8,8-4.8,11.2-16.8-5.2-14.4-5.2-14.4-30,2.8-36.8-13.2-36.8-13.2-2.4-2.4,6.4,0,6.4,0,8.401,2-7.2-12.4-7.2-12.4,2.4,0,11.6,6.8,11.6,6.8,10.401,9.2,12.401,7.2,12.401,7.2,17.999-8.8,28.399-1.2,28.399-1.2,2,1.6-3.6,8.4-2,13.6s6.4,17.6,6.4,17.6c-2.4,1.6-2,12.4-2,12.4,16.8,23.2,7.2,21.2,7.2,21.2-15.6-0.4-0.8,7.2-0.8,7.2,3.2,2,12,9.2,12,9.2-2.8-1.2-4.4,4-4.4,4,4.8,4,2,8.8,2,8.8-6,1.2-7.2,5.2-7.2,5.2,6.8,8-3.2,8.4-3.2,8.4,3.6,4.4-1.2,16.4-1.2,16.4-4.8,0-11.2,5.6-11.2,5.6,2.4,4.8-8,10.4-8,10.4-8.4,1.6-5.6,8.4-5.6,8.4-7.999,6-10.399,22-10.399,22-0.8,10.4-3.2,13.6,2,11.6,5.199-2,4.399-14.4,4.399-14.4-4.799-15.6,38-31.6,38-31.6,4-1.6,4.8-6.8,4.8-6.8,2,0.4,10.8,8,10.8,8,7.6,11.2,8,2,8,2,1.2-3.6-0.4-9.6-0.4-9.6,6-21.6-8-28-8-28-10-33.6,4-25.2,4-25.2,2.8,5.6,13.6,10.8,13.6,10.8l3.6-2.4c-1.6-4.8,6.8-10.8,6.8-10.8,2.8,6.4,8.8-1.6,8.8-1.6,3.6-24.4,16-10,16-10,4,1.2,5.2-5.6,5.2-5.6,3.6-10.4,0-24,0-24,3.6-0.4,13.2,5.6,13.2,5.6,2.8-3.6-6.4-20.4-2.4-18s8.4,4,8.4,4c0.8-2-9.2-14.4-9.2-14.4-4.4-2.8-9.6-23.2-9.6-23.2,7.2,3.6-2.8-11.6-2.8-11.6,0-3.2,6-14.4,6-14.4-0.8-6.8,0-6.4,0-6.4,2.8,1.2,10.8,2.8,4-3.6s0.8-11.2,0.8-11.2c4.4-2.8-9.2-2.4-9.2-2.4-5.2-4.4-4.8-8.4-4.8-8.4,8,2-6.4-12.4-8.8-16s7.2-8.8,7.2-8.8c13.2-3.6,1.6-6.8,1.6-6.8-19.6,0.4-8.8-10.4-8.8-10.4,6,0.4,4.4-2,4.4-2-5.2-1.2-14.8-7.6-14.8-7.6-4-3.6-0.4-2.8-0.4-2.8,16.8,1.2-12-10-12-10,8,0-10-10.4-10-10.4-2-1.6-5.2-9.2-5.2-9.2-6-5.2-10.8-12-10.8-12-0.4-4.4-5.2-9.2-5.2-9.2-11.6-13.6-17.2-13.2-17.2-13.2-14.8-3.6-20-2.8-20-2.8l-52.8,4.4c-26.4,12.8-18.6,33.8-18.6,33.8,6.4,8.4,15.6,4.6,15.6,4.6,4.6-6.2,16.2-4,16.2-4,20.401,3.2,17.801-0.4,17.801-0.4-2.4-4.6-18.601-10.8-18.801-11.4s-9-4-9-4c-3-1.2-7.4-10.4-7.4-10.4-3.2-3.4,12.6,2.4,12.6,2.4-1.2,1,6.2,5,6.2,5,17.401-1,28.001,9.8,28.001,9.8,10.799,16.6,10.999,8.4,10.999,8.4,2.8-9.4-9-30.6-9-30.6,0.4-2,8.6,4.6,8.6,4.6,1.4-2,2.2,3.8,2.2,3.8,0.2,2.4,4,10.4,4,10.4,2.8,13,6.4,5.6,6.4,5.6l4.6,9.4c1.4,2.6-4.6,10.2-4.6,10.2-0.2,2.8,0.6,2.6-5,10.2s-2.2,12-2.2,12c-1.4,6.6,7.4,6.2,7.4,6.2,2.6,2.2,6,2.2,6,2.2,1.8,2,4.2,1.4,4.2,1.4,1.6-3.8,7.8-1.8,7.8-1.8,1.4-2.4,9.6-2.8,9.6-2.8,1-2.6,1.4-4.2,4.8-4.8s-21.2-43.6-21.2-43.6c6.4-0.8-1.8-13.2-1.8-13.2-2.2-6.6,9.2,8,11.4,9.4s3.2,3.6,1.6,3.4-3.4,2-2,2.2,14.4,15.2,17.8,25.4,9.4,14.2,15.6,20.2,5.4,30.2,5.4,30.2c-0.4,8.8,5.6,19.4,5.6,19.4,2,3.8-2.2,22-2.2,22-2,2.2-0.6,3-0.6,3,1,1.2,7.8,14.4,7.8,14.4-1.8-0.2,1.8,3.4,1.8,3.4,5.2,6-1.2,3-1.2,3-6-1.6,1,8.2,1,8.2,1.2,1.8-7.8-2.8-7.8-2.8-9.2-0.6,2.4,6.6,2.4,6.6,8.6,7.2-2.8,2.8-2.8,2.8-4.6-1.8-1.4,5-1.4,5,3.2,1.6,20.4,8.6,20.4,8.6,0.4,3.8-2.6,8.8-2.6,8.8,0.4,4-1.8,7.4-1.8,7.4-1.2,8.2-1.8,9-1.8,9-4.2,0.2-11.6,14-11.6,14-1.8,2.6-12,14.6-12,14.6-2,7-20-0.2-20-0.2-6.6,3.4-4.6,0-4.6,0-0.4-2.2,4.4-8.2,4.4-8.2,7-2.6,4.4-13.4,4.4-13.4,4-1.4-7.2-4.2-7-5.4s6-2.6,6-2.6c8-2,3.6-4.4,3.6-4.4-0.6-4,2.4-9.6,2.4-9.6,11.6-0.8,0-17,0-17-10.8-7.6-11.8-13.4-11.8-13.4,12.6-8.2,4.4-20.6,4.6-24.2s1.4-25.2,1.4-25.2c-2-6.2-5-19.8-5-19.8,2.2-5.2,9.6-17.8,9.6-17.8,2.8-4.2,11.6-9,9.4-12s-10-1.2-10-1.2c-7.8-1.4-7.2,3.8-7.2,3.8-1.6,1-2.4,6-2.4,6-0.72,7.933-9.6,14.2-9.6,14.2-11.2,6.2-2,10.2-2,10.2,6,6.6-3.8,6.8-3.8,6.8-11-1.8-2.8,8.4-2.8,8.4,10.8,12.8,7.8,15.6,7.8,15.6-10.2,1,2.4,10.2,2.4,10.2s-0.8-2-0.6-0.2,3.2,6,4,8-3.2,2.2-3.2,2.2c0.6,9.6-14.8,5.4-14.8,5.4l-1.6,0.2c-1.6,0.2-12.8-0.6-18.6-2.8s-12.599-2.2-12.599-2.2-4,1.8-11.601,1.6c-7.6-0.2-15.6,2.6-15.6,2.6-4.4-0.4,4.2-4.8,4.4-4.6s5.8-5.4-2.2-4.8c-21.797,1.635-32.6-8.6-32.6-8.6-2-1.4-4.6-4.2-4.6-4.2-10-2,1.4,12.4,1.4,12.4,1.2,1.4-0.2,2.4-0.2,2.4-0.8-1.6-8.6-7-8.6-7-2.811-0.973-4.174-2.307-6.505-4.793z\"/>\n   </g>\n   <g id=\"g466\" fill=\"#4c0000\">\n    <path id=\"path468\" d=\"m-3,42.8s11.6,5.6,14.2,8.4,16.6,14.2,16.6,14.2-5.4-2-8-3.8-13.4-10-13.4-10-3.8-6-9.4-8.8z\"/>\n   </g>\n   <g id=\"g470\" fill=\"#99cc32\">\n    <path id=\"path472\" d=\"M-61.009,11.603c0.337-0.148-0.187-2.86-0.391-3.403-1.022-2.726-10-4.2-10-4.2-0.227,1.365-0.282,2.961-0.176,4.599,0,0,4.868,5.519,10.567,3.004z\"/>\n   </g>\n   <g id=\"g474\" fill=\"#659900\">\n    <path id=\"path476\" d=\"M-61.009,11.403c-0.449,0.158-0.015-2.734-0.191-3.203-1.022-2.726-10.2-4.3-10.2-4.3-0.227,1.365-0.282,2.961-0.176,4.599,0,0,4.268,5.119,10.567,2.904z\"/>\n   </g>\n   <g id=\"g478\" fill=\"#000\">\n    <path id=\"path480\" d=\"m-65.4,11.546c-0.625,0-1.131-1.14-1.131-2.546,0-1.405,0.506-2.545,1.131-2.545s1.132,1.14,1.132,2.545c0,1.406-0.507,2.546-1.132,2.546z\"/>\n   </g>\n   <g id=\"g482\" fill=\"#000\">\n    <path id=\"path484\" d=\"M-65.4,9z\"/>\n   </g>\n   <g id=\"g486\" fill=\"#000\">\n    <path id=\"path488\" d=\"m-111,109.6s-5.6,10,19.2,4c0,0,14-1.2,16.4-3.6,1.2,0.8,9.566,3.73,12.4,4.4,6.8,1.6,15.2-8.4,15.2-8.4s4.6-10.5,7.4-10.5-0.4,1.6-0.4,1.6-6.6,10.1-6.2,11.7c0,0-5.2,20-21.2,20.8,0,0-16.15,0.95-14.8,6.8,0,0,8.8-2.4,11.2,0,0,0,10.8-0.4,2.8,6l-6.8,11.6s0.14,3.92-10,0.4c-9.8-3.4-20.1-16.3-20.1-16.3s-15.95-14.55-5.1-28.5z\"/>\n   </g>\n   <g id=\"g490\" fill=\"#e59999\">\n    <path id=\"path492\" d=\"m-112.2,113.6s-2,9.6,34.8-0.8l6.8,0.8c2.4,0.8,14.4,3.6,16.4,2.4,0,0-7.2,13.6-18.8,12,0,0-13.2,1.6-12.8,6.4,0,0,4,7.2,8.8,9.6,0,0,2.8,2.4,2.4,5.6s-3.2,4.8-5.2,5.6-5.2-2.4-6.8-2.4-10-6.4-14.4-11.2-12.8-16.8-12.4-19.6,1.2-8.4,1.2-8.4z\"/>\n   </g>\n   <g id=\"g494\" fill=\"#b26565\">\n    <path id=\"path496\" d=\"m-109,131.05c2.6,3.95,5.8,8.15,8,10.55,4.4,4.8,12.8,11.2,14.4,11.2s4.8,3.2,6.8,2.4,4.8-2.4,5.2-5.6-2.4-5.6-2.4-5.6c-3.066-1.53-5.806-5.02-7.385-7.35,0,0,0.185,2.55-5.015,1.75s-10.4-3.6-12-6.8-4-5.6-2.4-2,4,7.2,5.6,7.6,1.2,1.6-1.2,1.2-5.2-0.8-9.6-6z\"/>\n   </g>\n   <g id=\"g498\" fill=\"#992600\">\n    <path id=\"path500\" d=\"m-111.6,110s1.8-13.6,3-17.6c0,0-0.8-6.8,1.6-11s4.4-10.4,7.4-15.8,3.2-9.4,7.2-11,10-10.2,12.8-11.2,2.6-0.2,2.6-0.2,6.8-14.8,20.4-10.8c0,0-16.2-2.8-0.4-12.2,0,0-4.8,1.1-1.5-5.9,2.201-4.668,1.7,2.1-9.3,13.9,0,0-5,8.6-10.2,11.6s-17.2,10-18.4,13.8-4.4,9.6-6.4,11.2-4.8,5.8-5.2,9.2c0,0-1.2,4-2.6,5.2s-1.6,4.4-1.6,6.4-2,4.8-1.8,7.2c0,0,0.8,19,0.4,21l2-3.8z\"/>\n   </g>\n   <g id=\"g502\" fill=\"#FFF\">\n    <path id=\"path504\" d=\"m-120.2,114.6s-2-1.4-6.4,4.6c0,0,7.3,33,7.3,34.4,0,0,1.1-2.1-0.2-9.3s-2.2-19.9-2.2-19.9l1.5-9.8z\"/>\n   </g>\n   <g id=\"g506\" fill=\"#992600\">\n    <path id=\"path508\" d=\"m-98.6,54s-17.6,3.2-17.2,32.4l-0.8,24.8s-1.2-25.6-2.4-27.2,2.8-12.8-0.4-6.8c0,0-14,14-6,35.2,0,0,1.5,3.3-1.5-1.3,0,0-4.6-12.6-3.5-19,0,0,0.2-2.2,2.1-5,0,0,8.6-11.7,11.3-14,0,0,1.8-14.4,17.2-19.6,0,0,5.7-2.3,1.2,0.5z\"/>\n   </g>\n   <g id=\"g510\" fill=\"#000\">\n    <path id=\"path512\" d=\"m40.8-12.2c0.66-0.354,0.651-1.324,1.231-1.497,1.149-0.344,1.313-1.411,1.831-2.195,0.873-1.319,1.066-2.852,1.648-4.343,0.272-0.7,0.299-1.655-0.014-2.315-1.174-2.481-1.876-4.93-3.318-7.356-0.268-0.45-0.53-1.244-0.731-1.842-0.463-1.384-1.72-2.375-2.58-3.695-0.288-0.441,0.237-1.366-0.479-1.45-0.897-0.105-2.346-0.685-2.579,0.341-0.588,2.587,0.423,5.11,1.391,7.552-0.782,0.692-0.448,1.613-0.296,2.38,0.71,3.606-0.488,6.958-1.249,10.432-0.023,0.104,0.319,0.302,0.291,0.364-1.222,2.686-2.674,5.131-4.493,7.512-0.758,0.992-1.63,1.908-2.127,2.971-0.368,0.787-0.776,1.753-0.526,2.741-3.435,2.78-5.685,6.625-8.296,10.471-0.462,0.68-0.171,1.889,0.38,2.158,0.813,0.398,1.769-0.626,2.239-1.472,0.389-0.698,0.742-1.348,1.233-1.991,0.133-0.175-0.046-0.594,0.089-0.715,2.633-2.347,4.302-5.283,6.755-7.651,1.95-0.329,3.487-1.327,5.235-2.34,0.308-0.179,0.832,0.07,1.122-0.125,1.753-1.177,1.751-3.213,1.857-5.123,0.05-0.884,0.246-2.201,1.386-2.812z\"/>\n   </g>\n   <g id=\"g514\" fill=\"#000\">\n    <path id=\"path516\" d=\"m31.959-16.666c0.124-0.077-0.031-0.5,0.078-0.716,0.162-0.324,0.565-0.512,0.727-0.836,0.109-0.216-0.054-0.596,0.082-0.738,2.333-2.447,2.59-5.471,1.554-8.444,1.024-0.62,1.085-1.882,0.66-2.729-0.853-1.7-1.046-3.626-2.021-5.169-0.802-1.269-2.38-2.513-3.751-1.21-0.421,0.4-0.742,1.187-0.464,1.899,0.064,0.163,0.349,0.309,0.322,0.391-0.107,0.324-0.653,0.548-0.659,0.82-0.03,1.496-0.984,3.007-0.354,4.336,0.772,1.629,1.591,3.486,2.267,5.262-1.234,2.116-0.201,4.565-1.954,6.442-0.136,0.146-0.127,0.532-0.005,0.734,0.292,0.486,0.698,0.892,1.184,1.184,0.202,0.121,0.55,0.123,0.75-0.001,0.578-0.362,0.976-0.849,1.584-1.225z\"/>\n   </g>\n   <g id=\"g518\" fill=\"#000\">\n    <path id=\"path520\" d=\"m94.771-26.977c1.389,1.792,1.679,4.587-0.37,5.977,0.55,3.309,3.901,1.33,5.999,0.8-0.11-0.388,0.12-0.732,0.4-0.737,1.06-0.015,1.74-1.047,2.8-0.863,0.44-1.557,2.07-2.259,2.72-3.639,1.72-3.695,1.13-7.968-1.45-11.214-0.2-0.254,0.01-0.771-0.11-1.133-0.76-2.211-2.82-2.526-4.76-3.214-1.176-3.875-1.837-7.906-3.599-11.6-1.614-0.25-2.312-1.989-3.649-2.709-1.333-0.719-1.901,0.86-1.86,1.906,0.007,0.205,0.459,0.429,0.289,0.794-0.076,0.164-0.336,0.275-0.336,0.409,0.001,0.135,0.222,0.266,0.356,0.4-0.918,0.82-2.341,1.297-2.636,2.442-0.954,3.71,1.619,6.835,3.287,10.036,0.591,1.135-0.145,2.406-0.905,3.614-0.438,0.695-0.33,1.822-0.054,2.678,0.752,2.331,2.343,4.07,3.878,6.053z\"/>\n   </g>\n   <g id=\"g522\" fill=\"#000\">\n    <path id=\"path524\" d=\"m57.611-8.591c-1.487,1.851-4.899,4.42-1.982,6.348,0.194,0.129,0.564,0.133,0.737-0.001,2.021-1.565,4.024-2.468,6.46-3.05,0.124-0.029,0.398,0.438,0.767,0.277,1.613-0.703,3.623-0.645,4.807-1.983,3.767,0.224,7.332-0.892,10.723-2.2,1.161-0.448,2.431-1.007,3.632-1.509,1.376-0.576,2.58-1.504,3.692-2.645,0.133-0.136,0.487-0.046,0.754-0.046-0.04-0.863,0.922-0.99,1.169-1.612,0.092-0.232-0.058-0.628,0.075-0.73,2.138-1.63,3.058-3.648,1.889-6.025-0.285-0.578-0.534-1.196-1.1-1.672-1.085-0.911-2.187-0.057-3.234-0.361-0.159,0.628-0.888,0.456-1.274,0.654-0.859,0.439-2.192-0.146-3.051,0.292-1.362,0.695-2.603,0.864-4.025,1.241-0.312,0.082-1.09-0.014-1.25,0.613-0.134-0.134-0.282-0.368-0.388-0.346-1.908,0.396-3.168,0.61-4.469,2.302-0.103,0.133-0.545-0.046-0.704,0.089-0.957,0.808-1.362,2.042-2.463,2.714-0.201,0.123-0.553-0.045-0.747,0.084-0.646,0.431-1.013,1.072-1.655,1.519-0.329,0.229-0.729-0.096-0.697-0.352,0.245-1.947,0.898-3.734,0.323-5.61,2.077-2.52,4.594-4.469,6.4-7.2,0.015-2.166,0.707-4.312,0.594-6.389-0.01-0.193-0.298-0.926-0.424-1.273-0.312-0.854,0.594-1.92-0.25-2.644-1.404-1.203-2.696-0.327-3.52,1.106-1.838,0.39-3.904,1.083-5.482-0.151-1.007-0.787-1.585-1.693-2.384-2.749-0.985-1.302-0.65-2.738-0.58-4.302,0.006-0.128-0.309-0.264-0.309-0.398,0.001-0.135,0.221-0.266,0.355-0.4-0.706-0.626-0.981-1.684-2-2,0.305-1.092-0.371-1.976-1.242-2.278-1.995-0.691-3.672,1.221-5.564,1.294-0.514,0.019-0.981-1.019-1.63-1.344-0.432-0.216-1.136-0.249-1.498,0.017-0.688,0.504-1.277,0.618-2.035,0.823-1.617,0.436-2.895,1.53-4.375,2.385-1.485,0.857-2.44,2.294-3.52,3.614-0.941,1.152-1.077,3.566,0.343,4.066,1.843,0.65,3.147-2.053,5.113-1.727,0.312,0.051,0.518,0.362,0.408,0.75,0.389,0.109,0.607-0.12,0.8-0.4,0.858,1.019,2.022,1.356,2.96,2.229,0.97,0.904,2.716,0.486,3.731,1.483,1.529,1.502,0.97,4.183,2.909,5.488-0.586,1.313-1.193,2.59-1.528,4.017-0.282,1.206,0.712,2.403,1.923,2.312,1.258-0.094,1.52-0.853,2.005-1.929,0.267,0.267,0.736,0.564,0.695,0.78-0.457,2.387-1.484,4.38-1.942,6.811-0.059,0.317-0.364,0.519-0.753,0.409-0.468,4.149-4.52,6.543-7.065,9.708-0.403,0.502-0.407,1.751,0.002,2.154,1.403,1.387,3.363-0.159,5.063-0.662,0.213-1.206,1.072-2.148,2.404-2.092,0.256,0.01,0.491-0.532,0.815-0.662,0.348-0.138,0.85,0.086,1.136-0.112,1.729-1.195,3.137-2.301,4.875-3.49,0.192-0.131,0.536,0.028,0.752-0.08,0.325-0.162,0.512-0.549,0.835-0.734,0.348-0.2,0.59,0.09,0.783,0.37-0.646,0.349-0.65,1.306-1.232,1.508-0.775,0.268-1.336,0.781-2.01,1.228-0.292,0.193-0.951-0.055-1.055,0.124-0.598,1.028-1.782,1.466-2.492,2.349z\"/>\n   </g>\n   <g id=\"g526\" fill=\"#000\">\n    <path id=\"path528\" d=\"m2.2-58s-9.238-2.872-20.4,22.8c0,0-2.4,5.2-4.8,7.2s-13.6,5.6-15.6,9.6l-10.4,16s14.8-16,18-18.4c0,0,8-8.4,4.8-1.6,0,0-14,10.8-12.8,20,0,0-5.6,14.4-6.4,16.4,0,0,16-32,18.4-33.2s3.6-1.2,2.4,2.4-1.6,20-4.4,22c0,0,8-20.4,7.2-23.6,0,0,3.2-3.6,5.6,1.6l-1.2,16,4.4,12s-2.4-11.2-0.8-26.8c0,0-2-10.4,2-4.8s13.6,11.6,13.6,16.4c0,0-5.2-17.6-14.4-22.4l-4,6-1.2-2s-3.6-0.8,0.8-7.6,4-7.6,4-7.6,6.4,7.2,8,7.2c0,0,13.2-7.6,14.4,16.8,0,0,6.8-14.4-2.4-21.2,0,0-14.8-2-13.6-7.2l7.2-12.4c3.6-5.2,2-2.4,2-2.4z\"/>\n   </g>\n   <g id=\"g530\" fill=\"#000\">\n    <path id=\"path532\" d=\"m-17.8-41.6-16,5.2-7.2,9.6s17.2-10,21.2-11.2,2-3.6,2-3.6z\"/>\n   </g>\n   <g id=\"g534\" fill=\"#000\">\n    <path id=\"path536\" d=\"m-57.8-35.2s-2,1.2-2.4,4-2.8,3.2-2,6,2.8,5.2,2.8,1.2,1.6-6,2.4-7.2,2.4-5.6-0.8-4z\"/>\n   </g>\n   <g id=\"g538\" fill=\"#000\">\n    <path id=\"path540\" d=\"m-66.6,26s-8.4-4-11.6-7.6-2.748,1.566-7.6,1.2c-5.847-0.441-4.8-16.4-4.8-16.4l-4,7.6s-1.2,14.4,6.8,12c3.907-1.172,5.2,0.4,3.6,1.2s5.6,1.2,2.8,2.8,11.6-3.6,9.2,6.8l5.6-7.6z\"/>\n   </g>\n   <g id=\"g542\" fill=\"#000\">\n    <path id=\"path544\" d=\"m-79.2,40.4s-15.4,4.4-19-5.2c0,0-4.8,2.4-2.6,5.4s3.4,3.4,3.4,3.4,5.4,1.2,4.8,2-3,4.2-3,4.2,10.2-6,16.4-9.8z\"/>\n   </g>\n   <g id=\"g546\" fill=\"#FFF\">\n    <path id=\"path548\" d=\"m149.2,118.6c-0.43,2.14-2.1,2.94-4,3.6-1.92-0.96-4.51-4.06-6.4-2-0.47-0.48-1.25-0.54-1.6-1.2-0.46-0.9-0.19-1.94-0.53-2.74-0.55-1.28-1.25-2.64-1.07-4.06,1.81-0.71,2.4-2.62,1.93-4.38-0.07-0.26-0.5-0.45-0.3-0.8,0.19-0.33,0.5-0.55,0.77-0.82-0.13,0.14-0.28,0.37-0.39,0.35-0.61-0.11-0.49-0.75-0.36-1.13,0.59-1.75,2.6-2.01,3.95-0.82,0.26-0.56,0.77-0.37,1.2-0.4-0.05-0.58,0.36-1.11,0.56-1.53,0.52-1.09,2.14,0.01,2.94-0.6,1.08-0.83,2.14-1.52,3.22-0.92,1.81,1.01,3.52,2.22,4.72,3.97,0.57,0.83,0.81,2.11,0.75,3.07-0.04,0.65-1.42,0.29-1.76,1.22-0.65,1.75,1.19,2.27,1.94,3.61,0.2,0.35-0.06,0.65-0.38,0.75-0.41,0.13-1.19-0.06-1.06,0.39,0.98,3.19-1.78,3.87-4.13,4.44z\"/>\n   </g>\n   <g id=\"g550\" fill=\"#FFF\">\n    <path id=\"path552\" d=\"m139.6,138.2c-0.01-1.74-1.61-3.49-0.4-5.2,0.14,0.14,0.27,0.36,0.4,0.36,0.14,0,0.27-0.22,0.4-0.36,1.5,2.22,5.15,3.14,5.01,5.99-0.03,0.45-1.11,1.37-0.21,2.01-1.81,1.35-1.87,3.72-2.8,5.6-1.24-0.28-2.45-0.65-3.6-1.2,0.35-1.48,0.24-3.17,1.06-4.49,0.43-0.7,0.14-1.78,0.14-2.71z\"/>\n   </g>\n   <g id=\"g554\" fill=\"#CCC\">\n    <path id=\"path556\" d=\"m-26.6,129.2s-16.858,10.14-2.8-5.2c8.8-9.6,18.8-15.2,18.8-15.2s10.4-4.4,14-5.6,18.8-6.4,22-6.8,12.8-4.4,19.6-0.4,14.8,8.4,14.8,8.4-16.4-8.4-20-6-10.8,2-16.8,5.2c0,0-14.8,4.4-18,6.4s-13.6,13.6-15.2,12.8,0.4-1.2,1.6-4-0.8-4.4-8.8,2-9.2,8.4-9.2,8.4z\"/>\n   </g>\n   <g id=\"g558\" fill=\"#000\">\n    <path id=\"path560\" d=\"m-19.195,123.23s1.41-13.04,9.888-11.37c0,0,8.226-4.17,10.948-6.14,0,0,8.139-1.7,9.449-2.32,18.479-8.698,33.198-4.179,33.745-5.299,0.546-1.119,20.171,5.999,23.78,10.079,0.391,0.45-10.231-5.59-19.929-7.48-8.273-1.617-29.875,0.24-40.781,5.78-2.973,1.51-11.918,7.29-14.449,7.18s-12.651,9.57-12.651,9.57z\"/>\n   </g>\n   <g id=\"g562\" fill=\"#CCC\">\n    <path id=\"path564\" d=\"m-23,148.8s-15.2-2.4,1.6-4c0,0,18-2,22-7.2,0,0,13.6-9.2,16.4-9.6s32.8-7.6,33.2-10,6-2.4,7.6-1.6,0.8,2-2,2.8-34,17.2-40.4,18.4-18,8.8-22.8,10-15.6,1.2-15.6,1.2z\"/>\n   </g>\n   <g id=\"g566\" fill=\"#000\">\n    <path id=\"path568\" d=\"m-3.48,141.4s-8.582-0.83,0.019-1.64c0,0,8.816-3.43,10.864-6.09,0,0,6.964-4.71,8.397-4.92,1.434-0.2,15.394-3.89,15.599-5.12s34.271-13.81,38.691-10.62c2.911,2.1-6.99,0.43-16.624,4.84-1.355,0.62-35.208,15.2-38.485,15.82-3.277,0.61-9.216,4.5-11.674,5.12-2.457,0.61-6.787,2.61-6.787,2.61z\"/>\n   </g>\n   <g id=\"g570\" fill=\"#000\">\n    <path id=\"path572\" d=\"m-11.4,143.6s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g574\" fill=\"#000\">\n    <path id=\"path576\" d=\"m-18.6,145.2s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g578\" fill=\"#000\">\n    <path id=\"path580\" d=\"m-29,146.8s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g582\" fill=\"#000\">\n    <path id=\"path584\" d=\"m-36.6,147.6s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g586\" fill=\"#000\">\n    <path id=\"path588\" d=\"m1.8,108,3.2,1.6c-1.2,1.6-4.4,1.2-4.4,1.2l1.2-2.8z\"/>\n   </g>\n   <g id=\"g590\" fill=\"#000\">\n    <path id=\"path592\" d=\"m-8.2,113.6s6.506-2.14,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g594\" fill=\"#000\">\n    <path id=\"path596\" d=\"m-19.4,118.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g598\" fill=\"#000\">\n    <path id=\"path600\" d=\"m-27,124.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g602\" fill=\"#000\">\n    <path id=\"path604\" d=\"m-33.8,129.2s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g606\" fill=\"#000\">\n    <path id=\"path608\" d=\"m5.282,135.6s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g610\" fill=\"#000\">\n    <path id=\"path612\" d=\"m15.682,130.8s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g614\" fill=\"#000\">\n    <path id=\"path616\" d=\"m26.482,126.4s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g618\" fill=\"#000\">\n    <path id=\"path620\" d=\"m36.882,121.6s6.921-0.53,5.324,1.6c-1.597,2.12-4.792,1.06-4.792,1.06l-0.532-2.66z\"/>\n   </g>\n   <g id=\"g622\" fill=\"#000\">\n    <path id=\"path624\" d=\"m9.282,103.6s6.921-0.53,5.324,1.6c-1.597,2.12-5.592,1.86-5.592,1.86l0.268-3.46z\"/>\n   </g>\n   <g id=\"g626\" fill=\"#000\">\n    <path id=\"path628\" d=\"m19.282,100.4s6.921-0.534,5.324,1.6c-1.597,2.12-5.992,1.86-5.992,1.86l0.668-3.46z\"/>\n   </g>\n   <g id=\"g630\" fill=\"#000\">\n    <path id=\"path632\" d=\"m-3.4,140.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g634\" fill=\"#992600\">\n    <path id=\"path636\" d=\"m-76.6,41.2s-4.4,8.8-4.8,12c0,0,0.8-8.8,2-10.8s2.8-1.2,2.8-1.2z\"/>\n   </g>\n   <g id=\"g638\" fill=\"#992600\">\n    <path id=\"path640\" d=\"m-95,55.2s-3.2,14.4-2.8,17.2c0,0-1.2-11.6-0.8-12.8s3.6-4.4,3.6-4.4z\"/>\n   </g>\n   <g id=\"g642\" fill=\"#CCC\">\n    <path id=\"path644\" d=\"m-74.2-19.4-0.2,3.2-2.2,0.2s14.2,12.6,14.8,20.2c0,0,0.8-8.2-12.4-23.6z\"/>\n   </g>\n   <g id=\"g646\" fill=\"#000\">\n    <path id=\"path648\" d=\"m-70.216-18.135c-0.431-0.416-0.212-1.161-0.62-1.421-0.809-0.516,1.298-0.573,1.07-1.289-0.383-1.206-0.196-1.227-0.318-2.503-0.057-0.598,0.531-2.138,0.916-2.578,1.446-1.652,0.122-4.584,1.762-6.135,0.304-0.289,0.68-0.841,0.965-1.259,0.659-0.963,1.843-1.451,2.793-2.279,0.318-0.276,0.117-1.103,0.686-1.011,0.714,0.115,1.955-0.015,1.91,0.826-0.113,2.12-1.442,3.84-2.722,5.508,0.451,0.704-0.007,1.339-0.291,1.896-1.335,2.62-1.146,5.461-1.32,8.301-0.005,0.085-0.312,0.163-0.304,0.216,0.353,2.335,0.937,4.534,1.816,6.763,0.366,0.93,0.837,1.825,0.987,2.752,0.111,0.686,0.214,1.519-0.194,2.224,2.035,2.89,0.726,5.541,1.895,9.072,0.207,0.625,1.899,2.539,1.436,2.378-2.513-0.871-2.625-1.269-2.802-2.022-0.146-0.623-0.476-2-0.713-2.602-0.064-0.164-0.235-2.048-0.313-2.17-1.513-2.382-0.155-2.206-1.525-4.564-1.428-0.68-2.394-1.784-3.517-2.946-0.198-0.204,0.945-0.928,0.764-1.141-1.092-1.289-2.245-2.056-1.909-3.549,0.155-0.69,0.292-1.747-0.452-2.467z\"/>\n   </g>\n   <g id=\"g650\" fill=\"#000\">\n    <path id=\"path652\" d=\"m-73.8-16.4s0.4,6.8,2.8,8.4,1.2,0.8-2-0.4-2-2-2-2-2.8,0.4-0.4,2.4,6,4.4,4.4,4.4-9.2-4-9.2-6.8-1-6.9-1-6.9,1.1-0.8,5.9-0.7c0,0,1.4,0.7,1.5,1.6z\"/>\n   </g>\n   <g id=\"g654\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path656\" d=\"m-74.6,2.2s-8.52-2.791-27,0.6c0,0,9.031-2.078,27.8,0.2,10.3,1.25-0.8-0.8-0.8-0.8z\"/>\n   </g>\n   <g id=\"g658\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path660\" d=\"m-72.502,2.129s-8.246-3.518-26.951-1.737c0,0,9.178-1.289,27.679,2.603,10.154,2.136-0.728-0.866-0.728-0.866z\"/>\n   </g>\n   <g id=\"g662\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path664\" d=\"m-70.714,2.222s-7.962-4.121-26.747-3.736c0,0,9.248-0.604,27.409,4.654,9.966,2.885-0.662-0.918-0.662-0.918z\"/>\n   </g>\n   <g id=\"g666\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path668\" d=\"m-69.444,2.445s-6.824-4.307-23.698-5.405c0,0,8.339,0.17,24.22,6.279,8.716,3.353-0.522-0.874-0.522-0.874z\"/>\n   </g>\n   <g id=\"g670\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path672\" d=\"m45.84,12.961s-0.93,0.644-0.716-0.537c0.215-1.181,28.423-14.351,32.037-14.101,0,0-30.248,13.206-31.321,14.638z\"/>\n   </g>\n   <g id=\"g674\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path676\" d=\"m42.446,13.6s-0.876,0.715-0.755-0.479,27.208-16.539,30.83-16.573c0,0-29.117,15.541-30.075,17.052z\"/>\n   </g>\n   <g id=\"g678\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path680\" d=\"m39.16,14.975s-0.828,0.772-0.786-0.428c0.042-1.199,19.859-16.696,29.671-18.57,0,0-18.03,8.127-28.885,18.998z\"/>\n   </g>\n   <g id=\"g682\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path684\" d=\"m36.284,16.838s-0.745,0.694-0.707-0.385c0.038-1.08,17.872-15.027,26.703-16.713,0,0-16.226,7.314-25.996,17.098z\"/>\n   </g>\n   <g id=\"g686\" fill=\"#CCC\">\n    <path id=\"path688\" d=\"m4.6,164.8s-15.2-2.4,1.6-4c0,0,18-2,22-7.2,0,0,13.6-9.2,16.4-9.6s19.2-4,19.6-6.4,6.4-4.8,8-4,1.6,10-1.2,10.8-21.6,8-28,9.2-18,8.8-22.8,10-15.6,1.2-15.6,1.2z\"/>\n   </g>\n   <g id=\"g690\" fill=\"#000\">\n    <path id=\"path692\" d=\"m77.6,127.4s-3,1.6-4.2,4.2c0,0-6.4,10.6-20.6,13.8,0,0-23,9-30.8,11,0,0-13.4,5-20.8,4.2,0,0-7,0.2-0.8,1.8,0,0,20.2-2,23.6-3.8,0,0,15.6-5.2,18.6-7.8s21.2-7.6,23.4-9.6,12-10.4,11.6-13.8z\"/>\n   </g>\n   <g id=\"g694\" fill=\"#000\">\n    <path id=\"path696\" d=\"m18.882,158.91s5.229-0.23,4.076,1.32-3.601,0.68-3.601,0.68l-0.475-2z\"/>\n   </g>\n   <g id=\"g698\" fill=\"#000\">\n    <path id=\"path700\" d=\"m11.68,160.26s5.228-0.22,4.076,1.33c-1.153,1.55-3.601,0.67-3.601,0.67l-0.475-2z\"/>\n   </g>\n   <g id=\"g702\" fill=\"#000\">\n    <path id=\"path704\" d=\"m1.251,161.51s5.229-0.23,4.076,1.32-3.601,0.68-3.601,0.68l-0.475-2z\"/>\n   </g>\n   <g id=\"g706\" fill=\"#000\">\n    <path id=\"path708\" d=\"m-6.383,162.06s5.229-0.23,4.076,1.32-3.601,0.67-3.601,0.67l-0.475-1.99z\"/>\n   </g>\n   <g id=\"g710\" fill=\"#000\">\n    <path id=\"path712\" d=\"m35.415,151.51s6.96-0.3,5.425,1.76c-1.534,2.07-4.793,0.9-4.793,0.9l-0.632-2.66z\"/>\n   </g>\n   <g id=\"g714\" fill=\"#000\">\n    <path id=\"path716\" d=\"m45.73,147.09s5.959-3.3,5.425,1.76c-0.27,2.55-4.793,0.9-4.793,0.9l-0.632-2.66z\"/>\n   </g>\n   <g id=\"g718\" fill=\"#000\">\n    <path id=\"path720\" d=\"m54.862,144.27s7.159-3.7,5.425,1.77c-0.778,2.44-4.794,0.9-4.794,0.9l-0.631-2.67z\"/>\n   </g>\n   <g id=\"g722\" fill=\"#000\">\n    <path id=\"path724\" d=\"m64.376,139.45s4.359-4.9,5.425,1.76c0.406,2.54-4.793,0.9-4.793,0.9l-0.632-2.66z\"/>\n   </g>\n   <g id=\"g726\" fill=\"#000\">\n    <path id=\"path728\" d=\"m26.834,156s5.228-0.23,4.076,1.32c-1.153,1.55-3.602,0.68-3.602,0.68l-0.474-2z\"/>\n   </g>\n   <g id=\"g730\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path732\" d=\"m62.434,34.603s-0.726,0.665-0.727-0.406c0-1.07,17.484-14.334,26.327-15.718,0,0-16.099,6.729-25.6,16.124z\"/>\n   </g>\n   <g id=\"g734\" fill=\"#000\">\n    <path id=\"path736\" d=\"m65.4,98.4s22.001,22.4,31.201,26c0,0,9.199,11.2,5.199,37.2,0,0-3.199,7.6-6.399-13.2,0,0,3.2-25.2-8-9.2,0,0-8.401-9.9-2.001-9.6,0,0,3.201,2,3.601,0.4s-7.601-15.2-24.801-29.6,1.2-2,1.2-2z\"/>\n   </g>\n   <g id=\"g738\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path740\" d=\"m7,137.2s-0.2-1.8,1.6-1,96,7,127.6,31c0,0-45.199-23.2-129.2-30z\"/>\n   </g>\n   <g id=\"g742\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path744\" d=\"m17.4,132.8s-0.2-1.8,1.6-1,138.4-0.2,162,32.2c0,0-22-25.2-163.6-31.2z\"/>\n   </g>\n   <g id=\"g746\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path748\" d=\"m29,128.8s-0.2-1.8,1.6-1,175.2-12.2,198.8,20.2c0,0-9.6-25.6-200.4-19.2z\"/>\n   </g>\n   <g id=\"g750\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path752\" d=\"m39,124s-0.2-1.8,1.6-1,124-37.8,147.6-5.4c0,0-13.4-24.6-149.2,6.4z\"/>\n   </g>\n   <g id=\"g754\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path756\" d=\"m-19,146.8s-0.2-1.8,1.6-1,19.6,3,21.6,41.8c0,0-7.2-42-23.2-40.8z\"/>\n   </g>\n   <g id=\"g758\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path760\" d=\"m-27.8,148.4s-0.2-1.8,1.6-1,16-3.8,13.2,35c0,0,1.2-35.2-14.8-34z\"/>\n   </g>\n   <g id=\"g762\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path764\" d=\"m-35.8,148.8s-0.2-1.8,1.6-1,17.2,1.4,4.8,23.8c0,0,9.6-24-6.4-22.8z\"/>\n   </g>\n   <g id=\"g766\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path768\" d=\"m11.526,104.46s-0.444,2,1.105,0.79c16.068-12.628,48.51-71.53,104.2-77.164,0,0-38.312-12.11-105.3,76.374z\"/>\n   </g>\n   <g id=\"g770\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path772\" d=\"m22.726,102.66s-1.363-1.19,0.505-1.81c1.868-0.63,114.31-73.13,153.6-65.164,0,0-27.11-7.51-154.1,66.974z\"/>\n   </g>\n   <g id=\"g774\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path776\" d=\"m1.885,108.77s-0.509,1.6,1.202,0.62c8.975-5.12,12.59-62.331,56.167-63.586,0,0-32.411-14.714-57.369,62.966z\"/>\n   </g>\n   <g id=\"g778\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path780\" d=\"m-18.038,119.79s-1.077,1.29,0.876,1.03c10.246-1.33,31.651-42.598,76.09-37.519,0,0-31.966-14.346-76.966,36.489z\"/>\n   </g>\n   <g id=\"g782\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path784\" d=\"m-6.8,113.67s-0.811,1.47,1.058,0.84c9.799-3.27,22.883-47.885,67.471-51.432,0,0-34.126-7.943-68.529,50.592z\"/>\n   </g>\n   <g id=\"g786\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path788\" d=\"m-25.078,124.91s-0.873,1.04,0.709,0.84c8.299-1.08,25.637-34.51,61.633-30.396,0,0-25.893-11.62-62.342,29.556z\"/>\n   </g>\n   <g id=\"g790\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path792\" d=\"m-32.677,130.82s-1.005,1.05,0.586,0.93c4.168-0.31,34.806-33.39,53.274-17.89,0,0-12.015-18.721-53.86,16.96z\"/>\n   </g>\n   <g id=\"g794\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path796\" d=\"m36.855,98.898s-1.201-1.355,0.731-1.74c1.932-0.384,122.63-58.097,160.59-45.231,0,0-25.94-10.874-161.32,46.971z\"/>\n   </g>\n   <g id=\"g798\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path800\" d=\"m3.4,163.2s-0.2-1.8,1.6-1,17.2,1.4,4.8,23.8c0,0,9.6-24-6.4-22.8z\"/>\n   </g>\n   <g id=\"g802\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path804\" d=\"m13.8,161.6s-0.2-1.8,1.6-1,19.6,3,21.6,41.8c0,0-7.2-42-23.2-40.8z\"/>\n   </g>\n   <g id=\"g806\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path808\" d=\"m20.6,160s-0.2-1.8,1.6-1,26.4,4.2,50,36.6c0,0-35.6-36.8-51.6-35.6z\"/>\n   </g>\n   <g id=\"g810\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path812\" d=\"m28.225,157.97s-0.437-1.76,1.453-1.2c1.89,0.55,22.324-1.35,60.421,32.83,0,0-46.175-34.94-61.874-31.63z\"/>\n   </g>\n   <g id=\"g814\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path816\" d=\"m38.625,153.57s-0.437-1.76,1.453-1.2c1.89,0.55,36.724,5.05,88.422,40.03,0,0-74.176-42.14-89.875-38.83z\"/>\n   </g>\n   <g id=\"g818\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path820\" d=\"m-1.8,142s-0.2-1.8,1.6-1,55.2,3.4,85.6,30.2c0,0-34.901-24.77-87.2-29.2z\"/>\n   </g>\n   <g id=\"g822\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path824\" d=\"m-11.8,146s-0.2-1.8,1.6-1,26.4,4.2,50,36.6c0,0-35.6-36.8-51.6-35.6z\"/>\n   </g>\n   <g id=\"g826\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path828\" d=\"m49.503,148.96s-0.565-1.72,1.361-1.3c1.926,0.41,36.996,2.34,91.116,33.44,0,0-77.663-34.4-92.477-32.14z\"/>\n   </g>\n   <g id=\"g830\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path832\" d=\"m57.903,146.56s-0.565-1.72,1.361-1.3c1.926,0.41,36.996,2.34,91.116,33.44,0,0-77.063-34.8-92.477-32.14z\"/>\n   </g>\n   <g id=\"g834\" stroke-width=\"0.1\" stroke=\"#000\" fill=\"#FFF\">\n    <path id=\"path836\" d=\"m67.503,141.56s-0.565-1.72,1.361-1.3c1.926,0.41,44.996,4.74,134.72,39.04,0,0-120.66-40.4-136.08-37.74z\"/>\n   </g>\n   <g id=\"g838\" fill=\"#000\">\n    <path id=\"path840\" d=\"m-43.8,148.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g842\" fill=\"#000\">\n    <path id=\"path844\" d=\"m-13,162.4s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g846\" fill=\"#000\">\n    <path id=\"path848\" d=\"m-21.8,162s5.2-0.4,4,1.2-3.6,0.8-3.6,0.8l-0.4-2z\"/>\n   </g>\n   <g id=\"g850\" fill=\"#000\">\n    <path id=\"path852\" d=\"m-117.17,150.18s5.05,1.32,3.39,2.44-3.67-0.42-3.67-0.42l0.28-2.02z\"/>\n   </g>\n   <g id=\"g854\" fill=\"#000\">\n    <path id=\"path856\" d=\"m-115.17,140.58s5.05,1.32,3.39,2.44-3.67-0.42-3.67-0.42l0.28-2.02z\"/>\n   </g>\n   <g id=\"g858\" fill=\"#000\">\n    <path id=\"path860\" d=\"m-122.37,136.18s5.05,1.32,3.39,2.44-3.67-0.42-3.67-0.42l0.28-2.02z\"/>\n   </g>\n   <g id=\"g862\" fill=\"#CCC\">\n    <path id=\"path864\" d=\"m-42.6,211.2-5.6,2c-2,0-13.2,3.6-18.8,13.6,0,0,12.4-9.6,24.4-15.6z\"/>\n   </g>\n   <g id=\"g866\" fill=\"#CCC\">\n    <path id=\"path868\" d=\"m45.116,303.85c0.141,0.25,0.196,0.67,0.488,0.69,0.658,0.04,1.891,0.34,1.766-0.29-0.848-4.31-1.722-9.25-5.855-11.05-0.639-0.28-2.081,0.13-2.155,1.02-0.127,1.52-0.244,2.87,0.065,4.33,0.3,1.43,2.458,1.43,3.375,0.05,0.936,1.67,1.368,3.52,2.316,5.25z\"/>\n   </g>\n   <g id=\"g870\" fill=\"#CCC\">\n    <path id=\"path872\" d=\"m34.038,308.58c0.748,1.41,0.621,3.27,2.036,3.84,0.74,0.29,2.59-0.68,2.172-1.76-0.802-2.06-1.19-4.3-2.579-6.11-0.2-0.26,0.04-0.79-0.12-1.12-0.594-1.22-1.739-1.96-3.147-1.63-1.115,2.2,0.033,4.33,1.555,6.04,0.136,0.15-0.03,0.53,0.083,0.74z\"/>\n   </g>\n   <g id=\"g874\" fill=\"#CCC\">\n    <path id=\"path876\" d=\"m-5.564,303.39c-0.108-0.38-0.146-0.84,0.019-1.16,0.531-1.03,1.324-2.15,0.987-3.18-0.348-1.05-1.464-0.87-2.114-0.3-1.135,0.99-1.184,2.82-1.875,4.18-0.196,0.38-0.145,0.96-0.586,1.35-0.474,0.42-0.914,1.94-0.818,2.51,0.053,0.32-0.13,10.22,0.092,9.96,0.619-0.73,3.669-10.47,3.738-11.36,0.057-0.73,0.789-1.19,0.557-2z\"/>\n   </g>\n   <g id=\"g878\" fill=\"#CCC\">\n    <path id=\"path880\" d=\"m-31.202,296.6c2.634-2.5,5.424-5.46,4.982-9.17-0.116-0.98-1.891-0.45-2.078,0.39-0.802,3.63-2.841,6.29-5.409,8.68-2.196,2.05-4.058,8.39-4.293,8.9,3.697-5.26,5.954-8,6.798-8.8z\"/>\n   </g>\n   <g id=\"g882\" fill=\"#CCC\">\n    <path id=\"path884\" d=\"m-44.776,290.64c0.523-0.38,0.221-0.87,0.438-1.2,0.953-1.46,2.254-2.7,2.272-4.44,0.003-0.28-0.375-0.59-0.71-0.36-0.277,0.18-0.619,0.31-0.727,0.44-2.03,2.45-3.43,5.12-4.873,7.93-0.183,0.36-1.327,4.85-1.014,4.96,0.239,0.09,1.959-4.09,2.169-4.21,1.263-0.68,1.275-2.3,2.445-3.12z\"/>\n   </g>\n   <g id=\"g886\" fill=\"#CCC\">\n    <path id=\"path888\" d=\"m-28.043,310.18c0.444-0.87,2.02-2.07,1.907-2.96-0.118-0.93,0.35-2.37-0.562-1.68-1.257,0.94-4.706,2.29-4.976,8.1-0.026,0.57,2.948-2.12,3.631-3.46z\"/>\n   </g>\n   <g id=\"g890\" fill=\"#CCC\">\n    <path id=\"path892\" d=\"m-13.6,293c0.4-0.67,1.108-0.19,1.567-0.46,0.648-0.37,1.259-0.93,1.551-1.58,0.97-2.14,2.739-3.96,2.882-6.36-1.491-1.4-2.17,0.64-2.8,1.6-1.323-1.65-2.322,0.23-3.622,0.75-0.07,0.03-0.283-0.32-0.358-0.29-1.177,0.44-1.857,1.52-2.855,2.3-0.171,0.13-0.576-0.05-0.723,0.09-0.652,0.6-1.625,0.93-1.905,1.61-1.11,2.7-4.25,4.8-6.137,12.34,0.381,0.91,4.512-6.64,4.999-7.34,0.836-1.2,0.954,1.66,2.23,1,0.051-0.03,0.237,0.21,0.371,0.34,0.194-0.28,0.412-0.51,0.8-0.4,0-0.4-0.134-0.96,0.067-1.11,1.237-0.98,1.153-2.05,1.933-3.29,0.458,0.79,1.519,0.07,2,0.8z\"/>\n   </g>\n   <g id=\"g894\" fill=\"#CCC\">\n    <path id=\"path896\" d=\"m46.2,347.4s7.4-20.4,3-31.6c0,0,11.4,21.6,6.8,32.8,0,0-0.4-10.4-4.4-15.4,0,0-4,12.8-5.4,14.2z\"/>\n   </g>\n   <g id=\"g898\" fill=\"#CCC\">\n    <path id=\"path900\" d=\"m31.4,344.8s5.4-8.8-2.6-27.2c0,0-0.8,20.4-7.6,31.4,0,0,14.2-20.2,10.2-4.2z\"/>\n   </g>\n   <g id=\"g902\" fill=\"#CCC\">\n    <path id=\"path904\" d=\"m21.4,342.8s-0.2-20,0.2-23c0,0-3.8,16.6-14,26.2,0,0,14.4-12,13.8-3.2z\"/>\n   </g>\n   <g id=\"g906\" fill=\"#CCC\">\n    <path id=\"path908\" d=\"m11.8,310.8s6,13.6-4,32c0,0,6.4-12.2,1.6-19.2,0,0,2.6-3.4,2.4-12.8z\"/>\n   </g>\n   <g id=\"g910\" fill=\"#CCC\">\n    <path id=\"path912\" d=\"m-7.4,342.4s-1-15.6,0.8-17.8c0,0,0.2-6.4-0.2-7.4,0,0,4-6.2,4.2,1.2,0,0,1.4,7.8,4.2,12.4,0,0,3.6,5.4,3.4,11.8,0,0-10-30.2-12.4-0.2z\"/>\n   </g>\n   <g id=\"g914\" fill=\"#CCC\">\n    <path id=\"path916\" d=\"m-11,314.8s-6.6,10.8-8.4,29.8c0,0-1.4-6.2,2.4-20.6,0,0,4.2-15.4,6-9.2z\"/>\n   </g>\n   <g id=\"g918\" fill=\"#CCC\">\n    <path id=\"path920\" d=\"m-32.8,334.6s5-5.4,6.4-10.4c0,0,3.6-15.8-2.8-7.2,0,0,0.2,8-8,15.4,0,0,4.8-2.4,4.4,2.2z\"/>\n   </g>\n   <g id=\"g922\" fill=\"#CCC\">\n    <path id=\"path924\" d=\"m-38.6,329.6s3.4-17.4,4.2-18.2c0,0,1.8-3.4-1-0.2,0,0-8.8,19.2-12.8,25.8,0,0,8-9.2,9.6-7.4z\"/>\n   </g>\n   <g id=\"g926\" fill=\"#CCC\">\n    <path id=\"path928\" d=\"m-44.4,313s11.6-22.4-10.2,3.4c0,0,11-9.8,10.2-3.4z\"/>\n   </g>\n   <g id=\"g930\" fill=\"#CCC\">\n    <path id=\"path932\" d=\"m-59.8,298.4s4.8-18.8,7.4-18.6l1.6,1.6s-6,9.6-5.4,19.4c0,0-0.6-9.6-3.6-2.4z\"/>\n   </g>\n   <g id=\"g934\" fill=\"#CCC\">\n    <path id=\"path936\" d=\"m270.5,287s-12-10-14.5-13.5c0,0,13.5,18.5,13.5,25.5,0,0,2.5-7.5,1-12z\"/>\n   </g>\n   <g id=\"g938\" fill=\"#CCC\">\n    <path id=\"path940\" d=\"m276,265s-21-15-24.5-22.5c0,0,26.5,29.5,26.5,34,0,0,0.5-9-2-11.5z\"/>\n   </g>\n   <g id=\"g942\" fill=\"#CCC\">\n    <path id=\"path944\" d=\"m293,111s-12-8-13.5-6c0,0,10.5,6.5,13,15,0,0-1.5-9,0.5-9z\"/>\n   </g>\n   <g id=\"g946\" fill=\"#CCC\">\n    <path id=\"path948\" d=\"m301.5,191.5-17.5-12s19,17,19.5,21l-2-9z\"/>\n   </g>\n   <g id=\"g950\" stroke=\"#000\">\n    <path id=\"path952\" d=\"m-89.25,169,22,4.75\"/>\n   </g>\n   <g id=\"g954\" stroke=\"#000\">\n    <path id=\"path956\" d=\"m-39,331s-0.5-3.5-9.5,7\"/>\n   </g>\n   <g id=\"g958\" stroke=\"#000\">\n    <path id=\"path960\" d=\"m-33.5,336s2-6.5-4.5-2\"/>\n   </g>\n   <g id=\"g962\" stroke=\"#000\">\n    <path id=\"path964\" d=\"m20.5,344.5s1.5-11-10,2\"/>\n   </g>\n  </g>\n </svg></div>"])), s, width, width, function (_) {
        var state = getState();
        var idx = state.items.indexOf(item);
        state.items.splice(idx, 1);
        setState({});
    });
}
// &#x20AC;&heartsuit;&#8364;
// mount application into some node
Doremifa.mount(document.body, function (state) { return html(templateObject_7 || (templateObject_7 = __makeTemplateObject([" \n\n  <div>Time now is: ", "</div>\n  <a href=\"#\">Show List</a> \n  <a href=\"#page2\">Show Page 2</a>\n  <a href=\"#page3\">Chartest</a>\n  ", "\n</div>\n\n"], [" \n\n  <div>Time now is: ", "</div>\n  <a href=\"#\">Show List</a> \n  <a href=\"#page2\">Show Page 2</a>\n  <a href=\"#page3\">Chartest</a>\n  ",
    "\n</div>\n\n"])), state.time, Doremifa.router({
    page3: function () {
        var w = 100 + Math.sin(Date.now() / 1000) * 100;
        var h = 100 + Math.sin(Date.now() / 1000) * 100;
        return html(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n\n    <div>&#x20AC;&heartsuit;&#8364;&time;&times;&auml;&Auml;</div>\n    <h2>&#x20AC;&heartsuit;&#8364;</h2>\n    &#x20AC;&heartsuit;&#8364;&#x20AC;&heartsuit;&#8364;  \n    <svg xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <rect x=\"10\" y=\"20\" width=\"30\" height=\"20\"/>\n      <text x=\"40\" y=\"20\">&auml;</text>\n    </svg>     \n    ", "\n\n    "], ["\n\n    <div>&#x20AC;&heartsuit;&#8364;&time;&times;&auml;&Auml;</div>\n    <h2>&#x20AC;&heartsuit;&#8364;</h2>\n    &#x20AC;&heartsuit;&#8364;&#x20AC;&heartsuit;&#8364;  \n    <svg xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <rect x=\"10\" y=\"20\" width=\"30\" height=\"20\"/>\n      <text x=\"40\" y=\"20\">&auml;</text>\n    </svg>     \n    ",
            "\n\n    "])), state.items.map(function (item, index) {
            var a = Date.now() / 1000;
            var x = 200 + 100 * Math.cos(a + index * 0.11);
            var y = 200 + 100 * Math.sin(a + index * 0.11);
            return render_cat(x, y, 100 + 30 * Math.cos(a + index * 0.3), item);
        }));
    },
    // route for #page2 
    page2: function (state) { return html(templateObject_9 || (templateObject_9 = __makeTemplateObject(["<h2>Route for page 2</h2>\n  <!-- table render example -->\n  <table class=\"table\">\n    ", "\n  </table>\n  <div>\n    The state is now \n    <pre>", "</pre>\n  </div>\n"], ["<h2>Route for page 2</h2>\n  <!-- table render example -->\n  <table class=\"table\">\n    ",
        "\n  </table>\n  <div>\n    The state is now \n    <pre>", "</pre>\n  </div>\n"])), [[1, 2], [3, 4]].map(function (tr) {
        return html(templateObject_10 || (templateObject_10 = __makeTemplateObject(["<tr>\n      ", "\n    </tr>"], ["<tr>\n      ", "\n    </tr>"])), tr.map(function (text) { return html(templateObject_11 || (templateObject_11 = __makeTemplateObject(["<td>Cell ", "</td>"], ["<td>Cell ", "</td>"])), text); }));
    }), JSON.stringify(state, null, 2)); },
    // route for #itemlist
    default: function (state) {
        return html(templateObject_12 || (templateObject_12 = __makeTemplateObject(["\n   <div>", "</div>\n   ", "\n\n<h2>Items ", " &#x20AC;</h2>\n\n<button type=\"button\" \n class=\"btn btn-primary\" onclick=", ">+ item</button>\n<button type=\"button\" \n class=\"btn btn-warning\" onclick=", ">Reverse</button>\n<button type=\"button\" \n class=\"btn btn-warning\" onclick=", ">", "</button>\n<ul class=\"list-group\">\n        ", "\n</ul>\n\n", "\n\n"], ["\n   <div>", "</div>\n   ", "\n\n<h2>Items ", " &#x20AC;</h2>\n\n<button type=\"button\" \n class=\"btn btn-primary\" onclick=", ">+ item</button>\n<button type=\"button\" \n class=\"btn btn-warning\" onclick=",
            ">Reverse</button>\n<button type=\"button\" \n class=\"btn btn-warning\" onclick=",
            ">", "</button>\n<ul class=\"list-group\">\n        ",
            "\n</ul>\n\n",
            "\n\n"])), [0, 1, 2, 3].map(function (ti) { return html(templateObject_13 || (templateObject_13 = __makeTemplateObject(["<button onclick=", ">type ", "</button>"], ["<button onclick=", ">type ", "</button>"])), function (_) { return setState({ type: ti }); }, ti); }), renderType(state), state.items.length, add_item, function (_) {
            setState({ items: state.items.reverse() });
        }, function (_) {
            setState({ editable: !state.editable });
        }, state.editable ? 'Hide Edits' : 'Toggle Editable', state.items.length ? state.items.map(function (item) {
            return state.editable ? editable_row(item) : std_row(item);
        }) : html(templateObject_14 || (templateObject_14 = __makeTemplateObject(["<li class=\"list-group-item\">List is empty</li>"], ["<li class=\"list-group-item\">List is empty</li>"]))), state.items.map(function (item, index) {
            var a = Date.now() / 1000;
            var x = 200 + 100 * Math.cos(a + item.id * 0.3);
            var y = 200 + 100 * Math.sin(a + item.id * 0.3);
            return render_cat(x, y, 100 + 30 * Math.cos(item.id * 0.11), item);
        }));
    },
    // route for #details/id/xxxx  
    details: function (state) {
        var item = state
            .items.filter(function (item) { return item.id == state.params.id; }).pop();
        return html(templateObject_15 || (templateObject_15 = __makeTemplateObject(["<h2>Item ", "</h2>\n        <input value=", " id=\"name\">\n        <button onclick=", ">Save</button>\n        <button onclick=", ">Delete</button>      "], ["<h2>Item ", "</h2>\n        <input value=", " id=\"name\">\n        <button onclick=",
            ">Save</button>\n        <button onclick=",
            ">Delete</button>      "])), item.id, item.name, function (e, tpl) {
            item.name = tpl.ids.name.value;
            window.location.hash = "#";
        }, function (_) {
            delete_item(item);
            window.location.hash = "#";
        });
    }
})); });
// update the clock
setInterval(function (_) {
    setState({ time: (new Date).toTimeString() });
}, 50);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_8, templateObject_11, templateObject_10, templateObject_9, templateObject_13, templateObject_14, templateObject_12, templateObject_15, templateObject_7;

},{"../src/":2}],2:[function(require,module,exports){
"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var xmlparser_1 = require("./xmlparser");
// Ideas:
// - https://polymer.github.io/lit-html/guide/writing-templates.html
// idea from lit-html
var envCachesTemplates = (function (t) { return t() === t(); })(function () { return (function (s) { return s; })(templateObject_1 || (templateObject_1 = __makeTemplateObject([""], [""]))); });
var drfmKey = /** @class */ (function () {
    function drfmKey() {
    }
    return drfmKey;
}());
exports.drfmKey = drfmKey;
function key(value) {
    var o = new drfmKey;
    o.value = typeof value === 'string' ? value : value + '';
    return o;
}
exports.key = key;
var svgNS = "http://www.w3.org/2000/svg";
var tickFunctions = [];
var drmfComponent = /** @class */ (function () {
    function drmfComponent() {
    }
    drmfComponent.prototype.tpl = function () {
        return this.lastRender;
    };
    drmfComponent.prototype.render = function () {
        return exports.drmf(templateObject_2 || (templateObject_2 = __makeTemplateObject(["<div>Hello World</div>"], ["<div>Hello World</div>"])));
    };
    return drmfComponent;
}());
exports.drmfComponent = drmfComponent;
var drmfTemplateCollection = /** @class */ (function () {
    function drmfTemplateCollection() {
    }
    drmfTemplateCollection.prototype.refreshFrom = function (tpls) {
        var curr_collection = this;
        var curr_tpls = curr_collection.list;
        var prevNode = curr_collection.node;
        var len = Math.max(tpls.length, curr_tpls.length);
        if (len === 0)
            return;
        if (tpls.length === 0) {
            for (var _i = 0, curr_tpls_1 = curr_tpls; _i < curr_tpls_1.length; _i++) {
                var t = curr_tpls_1[_i];
                t.removeBaseNodes();
            }
            curr_collection.list = [];
            return;
        }
        var ii = 0;
        var list = new Array(tpls.length);
        for (var ii_1 = 0; ii_1 < len; ii_1++) {
            var ct = curr_tpls[ii_1];
            var rt = tpls[ii_1];
            if (ct && rt) {
                var p = ct.replaceWith(rt);
                list[ii_1] = p;
                prevNode = p.getLastNode(); // p.rootNodes[p.rootNodes.length - 1]
                continue;
            }
            if (ct && !rt) {
                ct.removeBaseNodes();
                // ct.rootNodes.forEach( n => n.parentNode.removeChild(n))                              
                continue;
            }
            if (!ct && rt) {
                if (rt.baseNodes.length === 0)
                    rt.createDOM();
                rt.addAt(prevNode.parentNode, prevNode.nextSibling);
                list[ii_1] = rt;
                prevNode = rt.getLastNode();
                continue;
            }
        }
        curr_collection.list = list;
    };
    return drmfTemplateCollection;
}());
exports.drmfTemplateCollection = drmfTemplateCollection;
var drmfTemplate = /** @class */ (function () {
    function drmfTemplate() {
        this.rootNodes = [];
        // to get all the root nodes
        this.baseNodes = [];
        this.slotTypes = [];
    }
    drmfTemplate.prototype.onReady = function (fn) {
        this._ready = fn;
        return this;
    };
    drmfTemplate.prototype.getFirstNode = function () {
        var n = this.baseNodes[0];
        if (Array.isArray(n)) {
            return n[0];
        }
        if (n instanceof drmfTemplate) {
            return n.getFirstNode();
        }
        if (n instanceof drmfTemplateCollection) {
            return n.node;
        }
    };
    drmfTemplate.prototype.getLastNode = function () {
        if (this.baseNodes.length == 0)
            return null;
        var n = this.baseNodes[this.baseNodes.length - 1];
        if (Array.isArray(n)) {
            return n[n.length - 1];
        }
        if (n instanceof drmfTemplate) {
            return n.getLastNode();
        }
        if (n instanceof drmfTemplateCollection) {
            if (n.list.length == 0)
                return n.node;
            return n.list[n.list.length - 1].getLastNode();
        }
    };
    drmfTemplate.prototype.addAt = function (parentNode, before) {
        for (var _i = 0, _a = this.baseNodes; _i < _a.length; _i++) {
            var n = _a[_i];
            if (Array.isArray(n)) {
                for (var _b = 0, n_1 = n; _b < n_1.length; _b++) {
                    var node = n_1[_b];
                    parentNode.insertBefore(node, before);
                }
                continue;
            }
            if (n instanceof drmfTemplate) {
                n.addAt(parentNode, before);
            }
            if (n instanceof drmfTemplateCollection) {
                if (n.node)
                    parentNode.insertBefore(n.node, before);
                for (var _c = 0, _d = n.list; _c < _d.length; _c++) {
                    var el = _d[_c];
                    el.addAt(parentNode, before);
                }
            }
        }
    };
    drmfTemplate.prototype.removeBaseNodes = function () {
        for (var _i = 0, _a = this.baseNodes; _i < _a.length; _i++) {
            var n = _a[_i];
            if (Array.isArray(n)) {
                for (var _b = 0, n_2 = n; _b < n_2.length; _b++) {
                    var node = n_2[_b];
                    node.parentNode.removeChild(node);
                }
                continue;
            }
            if (n instanceof drmfTemplate) {
                n.removeBaseNodes();
            }
            if (n instanceof drmfTemplateCollection) {
                // remove the placeholder node...
                if (n.node && n.node.parentNode)
                    n.node.parentNode.removeChild(n.node);
                for (var _c = 0, _d = n.list; _c < _d.length; _c++) {
                    var el = _d[_c];
                    el.removeBaseNodes();
                }
            }
        }
    };
    drmfTemplate.prototype.replaceWith = function (renderedTpl) {
        if (this.key == renderedTpl.key) {
            // The problem is here, the update values will update root elements...
            this.updateValues(renderedTpl.values);
            return this;
        }
        // creates the nodes...
        renderedTpl.createDOM();
        var fNode = this.getFirstNode();
        // get the first render template node...
        renderedTpl.addAt(fNode.parentNode, fNode);
        this.removeBaseNodes();
        return renderedTpl;
    };
    drmfTemplate.prototype.updateValues = function (values) {
        var _this = this;
        var _loop_1 = function (i) {
            var value = values[i];
            if (typeof (value) === 'undefined')
                return "continue";
            var last_slot = this_1.slotTypes[i];
            if (value instanceof drfmKey) {
                return "continue";
            }
            if (typeof (last_slot) === 'undefined') {
                return "continue";
            }
            var last_type = last_slot[0];
            var last_root = last_slot[1];
            // assuming now that the type stays the same...
            switch (last_type) {
                case 1:
                    var name_1 = last_slot[2];
                    var is_svg = last_slot[4];
                    if (typeof (value) === 'function') {
                        last_root[name_1] = function (e) {
                            value(e, _this);
                        };
                        return "continue";
                    }
                    if (value === 'false' || value === 'true') {
                        var t = value === 'true';
                        if (t) {
                            if (is_svg) {
                                last_root.setAttributeNS(null, name_1, '');
                            }
                            else {
                                last_root.setAttribute(name_1, '');
                            }
                        }
                        else {
                            last_root.removeAttribute(name_1);
                        }
                    }
                    else {
                        if (is_svg) {
                            if (name_1 !== 'xmlns' && name_1 !== 'xmlns:xlink') {
                                last_root.setAttributeNS(null, name_1, value);
                            }
                            else {
                                last_root.setAttribute(name_1, value);
                            }
                        }
                        else {
                            last_root.setAttribute(name_1, value);
                        }
                    }
                    break;
                // last node was drmfTemplate
                case 2:
                    // simple content template was the last type...
                    var currTpl = last_slot[2];
                    var local_value = value;
                    if (Array.isArray(value)) {
                        local_value = html(templateObject_3 || (templateObject_3 = __makeTemplateObject(["", ""], ["", ""])), value);
                    }
                    if (local_value instanceof drmfTemplate) {
                        var renderedTpl = local_value;
                        this_1.slotTypes[i][2] = currTpl.replaceWith(renderedTpl);
                        if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                            this_1.baseNodes[i * 2 + 1] = this_1.slotTypes[i][2];
                    }
                    if (value instanceof drmfComponent) {
                        // render the situation now...
                        var renderedComp = value;
                        var rTpl = renderedComp.render();
                        var newTpl = currTpl.replaceWith(rTpl);
                        this_1.slotTypes[i] = [2, last_root, newTpl, newTpl.rootNodes];
                        if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                            this_1.baseNodes[i * 2 + 1] = newTpl;
                    }
                    // transform into txt node
                    if (typeof (value) == 'string') {
                        var txt = document.createTextNode(value);
                        var first = currTpl.getFirstNode();
                        first.parentNode.insertBefore(txt, first);
                        currTpl.removeBaseNodes();
                        this_1.slotTypes[i] = [3, first.parentNode, txt];
                        if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                            this_1.baseNodes[i * 2 + 1] = [txt];
                    }
                    break;
                // last node was text node
                case 3:
                    var text_node = last_slot[2];
                    if (typeof (value) == 'string') {
                        text_node.textContent = value;
                    }
                    else {
                        var v = value;
                        if (Array.isArray(value)) {
                            v = html(templateObject_4 || (templateObject_4 = __makeTemplateObject(["", ""], ["", ""])), value);
                        }
                        if (v instanceof drmfTemplate) {
                            v.createDOM();
                            v.addAt(text_node.parentNode, text_node);
                            text_node.parentNode.removeChild(text_node);
                            this_1.slotTypes[i] = [2, last_root, v];
                            // if the slot is base slot...
                            if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                                this_1.baseNodes[i * 2 + 1] = v;
                        }
                        if (v instanceof drmfComponent) {
                            var comp = v;
                            var tpl = comp.render();
                            tpl.createDOM();
                            tpl.addAt(text_node.parentNode, text_node);
                            text_node.parentNode.removeChild(text_node);
                            this_1.slotTypes[i] = [5, last_root, comp, tpl];
                            if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                                this_1.baseNodes[i * 2 + 1] = tpl;
                        }
                    }
                    break;
                // last node was drmfTemplateCollection
                case 4:
                    var curr_collection = last_slot[2];
                    if (Array.isArray(value)) {
                        var items = value;
                        var b_diff = false;
                        for (var i_1 = 0; i_1 < items.length; i_1++) {
                            var ii = items[i_1];
                            if (!(ii instanceof drmfTemplate)) {
                                b_diff = true;
                                break;
                            }
                        }
                        if (b_diff) {
                            var tpls = new Array(items.length);
                            for (var i_2 = 0; i_2 < items.length; i_2++) {
                                var ii = items[i_2];
                                if (ii instanceof drmfTemplate) {
                                    tpls[i_2] = ii;
                                }
                                else {
                                    tpls[i_2] = html(templateObject_5 || (templateObject_5 = __makeTemplateObject(["", ""], ["", ""])), ii);
                                }
                            }
                            curr_collection.refreshFrom(tpls);
                        }
                        else {
                            curr_collection.refreshFrom(value);
                        }
                    }
                    else {
                        var tpls = [html(templateObject_6 || (templateObject_6 = __makeTemplateObject(["", ""], ["", ""])), value)];
                        curr_collection.refreshFrom(tpls);
                    }
                    break;
                // last node was drmfComponent        
                case 5:
                    var local_tpl = value;
                    if (Array.isArray(value)) {
                        local_tpl = html(templateObject_7 || (templateObject_7 = __makeTemplateObject(["", ""], ["", ""])), value);
                    }
                    if (typeof (value) == 'string') {
                        var tplNow = last_slot[3];
                        var txt = document.createTextNode(value);
                        var first = tplNow.getFirstNode();
                        first.parentNode.insertBefore(txt, first);
                        tplNow.removeBaseNodes();
                        this_1.slotTypes[i] = [3, first.parentNode, txt];
                        if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                            this_1.baseNodes[i * 2 + 1] = [txt];
                    }
                    if (local_tpl instanceof drmfTemplate) {
                        var comp = last_slot[2];
                        var tplNow = last_slot[3];
                        var rTpl = local_tpl;
                        var newTpl = tplNow.replaceWith(rTpl);
                        this_1.slotTypes[i] = [2, last_root, newTpl];
                        if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                            this_1.baseNodes[i * 2 + 1] = local_tpl;
                    }
                    if (value instanceof drmfComponent) {
                        var comp = last_slot[2];
                        var tplNow = last_slot[3];
                        // render the situation now...
                        var renderedComp = value;
                        var rTpl = renderedComp.render();
                        var newTpl = tplNow.replaceWith(rTpl);
                        if (newTpl === rTpl) {
                            this_1.slotTypes[i][2] = renderedComp;
                            this_1.slotTypes[i][3] = newTpl;
                        }
                        if (typeof (this_1.baseNodes[i * 2 + 1]) !== 'undefined')
                            this_1.baseNodes[i * 2 + 1] = newTpl;
                    }
                    break;
            }
        };
        var this_1 = this;
        for (var i = 0; i < values.length; i++) {
            _loop_1(i);
        }
    };
    drmfTemplate.prototype.createDOM = function () {
        var _this = this;
        var parser = new xmlparser_1.XMLParser(this.valuestream);
        var eof = false;
        var nodetree = [];
        var activeNode;
        var is_svg = false;
        var me = this;
        var callbacks = {
            beginNode: function (name_orig, index) {
                var new_node;
                var name = name_orig.toLowerCase();
                switch (name) {
                    case "script":
                        activeNode = document.createElement(name);
                        return;
                    case "svg":
                        new_node = document.createElementNS(svgNS, "svg");
                        is_svg = true;
                        break;
                    // TODO: add full set of SVG elements
                    case "g":
                    case "rect":
                    case "path":
                    case "image":
                    case "line":
                    case "ellipse":
                    case "circle":
                        is_svg = true;
                    default:
                        if (is_svg) {
                            new_node = document.createElementNS(svgNS, name);
                        }
                        else {
                            new_node = document.createElement(name);
                        }
                }
                if (activeNode instanceof Node && activeNode) {
                    activeNode.appendChild(new_node);
                }
                else {
                    me.rootNodes.push(new_node);
                    if (!me.baseNodes[index])
                        me.baseNodes[index] = [];
                    me.baseNodes[index].push(new_node);
                }
                activeNode = new_node;
                nodetree.push(new_node);
            },
            setAttribute: function (name, value, index) {
                if (!activeNode)
                    return;
                if (value instanceof drfmKey) {
                    return;
                }
                if (index & 1) {
                    me.slotTypes[(index - 1) >> 1] = [1, activeNode, name, value, is_svg];
                }
                if (typeof (value) == 'function') {
                    if (activeNode instanceof Node) {
                        activeNode[name] = function (e) {
                            value(e, me);
                        };
                    }
                    return;
                }
                var node = activeNode;
                if (is_svg) {
                    if (value === 'false' || value === 'true') {
                        var t = value === 'true';
                        if (t) {
                            node.setAttributeNS(null, name, '');
                        }
                    }
                    else {
                        if (name !== 'xmlns' && name !== 'xmlns:xlink') {
                            node.setAttributeNS(null, name, value);
                        }
                        else {
                            node.setAttribute(name, value);
                        }
                    }
                }
                else {
                    if (value === 'false' || value === 'true') {
                        var t = value === 'true';
                        if (t) {
                            node.setAttribute(name, '');
                        }
                    }
                    else {
                        node.setAttribute(name, value);
                    }
                }
                if (name === 'id')
                    (me.ids = me.ids || {})[value] = node;
                if (name === 'list') {
                    if (!me.list[value])
                        (me.list = me.list || {})[value] = [];
                    me.list[value].push(node);
                }
            },
            closeNode: function (name) {
                if (name == 'svg') {
                    is_svg = false;
                }
                nodetree.pop();
                if (nodetree.length > 0) {
                    activeNode = nodetree[nodetree.length - 1];
                }
                else {
                    activeNode = null;
                }
            },
            addTextNode: function (value, index) {
                if (value instanceof drfmKey) {
                    return;
                }
                var append = function (new_node) {
                    if (activeNode) {
                        activeNode.appendChild(new_node);
                    }
                    else {
                        me.rootNodes.push(new_node);
                    }
                };
                if (index & 1) {
                    if (value instanceof drmfTemplate) {
                        var tpl = value;
                        var items = tpl.createDOM();
                        var snodes = [];
                        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
                            var it = items_1[_i];
                            append(it);
                            snodes.push(it);
                        }
                        // render template
                        me.slotTypes[(index - 1) >> 1] = [2, activeNode, tpl, snodes];
                        if (!activeNode)
                            me.baseNodes[index] = tpl;
                        return;
                    }
                    if (value instanceof drmfComponent) {
                        var comp = value;
                        var tpl = comp.render();
                        var items = tpl.createDOM();
                        var snodes = [];
                        for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {
                            var it = items_2[_a];
                            append(it);
                            snodes.push(it);
                        }
                        // render template
                        me.slotTypes[(index - 1) >> 1] = [5, activeNode, comp, tpl, snodes];
                        if (!activeNode)
                            me.baseNodes[index] = tpl;
                        return;
                    }
                    if (Array.isArray(value)) {
                        var coll = new drmfTemplateCollection;
                        var txtV = document.createTextNode('');
                        coll.node = txtV;
                        append(txtV);
                        var tpls = value.map(function (item) {
                            if (item instanceof drmfTemplate)
                                return item;
                            return html(templateObject_8 || (templateObject_8 = __makeTemplateObject(["", ""], ["", ""])), item);
                        });
                        coll.list = tpls;
                        var snodes = [];
                        for (var idx = 0; idx < tpls.length; idx++) {
                            var cont = tpls[idx];
                            var items = cont.createDOM();
                            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {
                                var it = items_3[_b];
                                append(it);
                                snodes.push(it);
                            }
                        }
                        me.slotTypes[(index - 1) >> 1] = [4, activeNode, coll, null];
                        if (!activeNode)
                            me.baseNodes[index] = coll;
                        return;
                    }
                }
                // the inserted text could be parsed...
                var v = value;
                if (!isNaN(v))
                    v = v + '';
                var txt = document.createTextNode(v);
                if (index & 1) {
                    // render text
                    me.slotTypes[(index - 1) >> 1] = [3, activeNode, txt];
                }
                if (!activeNode) {
                    if (!me.baseNodes[index])
                        me.baseNodes[index] = [];
                    me.baseNodes[index].push(txt);
                    me.rootNodes.push(txt);
                    return;
                }
                activeNode.appendChild(txt);
            },
            eof: function () {
                eof = true;
            }
        };
        var max_cnt = 100000;
        while (!parser.eof) {
            parser.parse(callbacks);
            if (max_cnt-- < 0)
                break;
        }
        if (this._ready) {
            tickFunctions.push(function () {
                _this._ready(_this);
            });
        }
        return this.rootNodes;
    };
    return drmfTemplate;
}());
exports.drmfTemplate = drmfTemplate;
function html(strings) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    var t = new drmfTemplate();
    var b_has_key = false;
    var key_v = '';
    for (var _a = 0, values_1 = values; _a < values_1.length; _a++) {
        var v = values_1[_a];
        if (v instanceof drfmKey) {
            b_has_key = true;
            key_v = v.value;
        }
    }
    if (envCachesTemplates && !b_has_key) {
        t.key = strings;
    }
    else {
        if (b_has_key) {
            t.key = strings.join('&') + key_v;
        }
        else {
            t.key = strings.join('&');
        }
    }
    t.values = values;
    for (var i_3 = 0; i_3 < t.values.length; i_3++) {
        if (typeof (t.values[i_3]) === 'undefined')
            t.values[i_3] = '';
        if (typeof (t.values[i_3]) === 'number')
            t.values[i_3] = t.values[i_3].toString();
    }
    var len = strings.length + values.length;
    t.valuestream = new Array(len);
    var i = 0, si = 0, vi = 0;
    while (i < len) {
        t.valuestream[i] = i & 1 ? t.values[vi++] : strings[si++];
        i++;
    }
    return t;
}
exports.html = html;
exports.drmf = html;
// the application state for doremifa
var app = {
    state: {
        page: '',
        params: {},
    }
};
function getState() {
    return app.state;
}
exports.getState = getState;
function setState(state) {
    try {
        app.state = __assign({}, app.state, state);
    }
    catch (e) {
    }
}
exports.setState = setState;
function reduce(reducer) {
    try {
        app.state = __assign({}, app.state, reducer(app.state));
    }
    catch (e) {
    }
}
exports.reduce = reduce;
var drmfRouter = /** @class */ (function (_super) {
    __extends(drmfRouter, _super);
    function drmfRouter(routes) {
        var _this = _super.call(this) || this;
        _this.routemap = routes;
        return _this;
    }
    drmfRouter.prototype.render = function () {
        var routermap = this.routemap;
        var page_name = app.state.page || 'default';
        var page = routermap[app.state.page || 'default'] || (page_name = 'default', routermap.default);
        var phase = 'refresh';
        if (page) {
            if (page_name != app.last_page_name) {
                var last_page = routermap[app.last_page_name];
                phase = 'init';
            }
            app.last_page_name = page_name;
            return page(__assign({}, app.state, { phase: phase }));
        }
        return exports.drmf(templateObject_9 || (templateObject_9 = __makeTemplateObject(["<div></div>"], ["<div></div>"])));
    };
    return drmfRouter;
}(drmfComponent));
function router(routermap) {
    return new drmfRouter(routermap);
}
exports.router = router;
var b_render_on = false;
var last_state;
var register_hash = function () {
    var parts = window.location.hash.substring(1).split('/');
    var name = parts.shift();
    var params = {};
    for (var i = 0; i < parts.length; i += 2) {
        params[parts[i]] = parts[i + 1];
    }
    app.state = __assign({}, app.state, { page: name, params: params });
};
var interval = null;
var current_node = null;
var is_registered = false;
var last_items = null;
var lastTpl;
// polyfill for really old browsers
(function () {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']
            || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }
    if (!window.requestAnimationFrame)
        window.requestAnimationFrame = function (callback) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
    if (!window.cancelAnimationFrame)
        window.cancelAnimationFrame = function (id) {
            clearTimeout(id);
        };
}());
// initialize app using init function...
function mount(root, comp, 
// renderFn : (state:any) => Promise<drmfTemplate>, 
state, options) {
    if (!app.is_registered) {
        app.is_registered = true;
        register_hash();
        window.addEventListener("hashchange", register_hash, false);
    }
    if (interval)
        clearInterval(interval);
    var update_delay = (options && options.updateInterval) || 100;
    var retry_cnt = 0;
    if (state)
        app.state = __assign({}, app.state, state);
    var update_application = function () {
        if (b_render_on && (retry_cnt < 5)) {
            retry_cnt++;
            return;
        }
        retry_cnt = 0;
        // try {
        if (last_state != app.state) {
            last_state = app.state;
            b_render_on = true;
            var tpl = void 0;
            if (typeof (comp) == 'function') {
                tpl = comp(app.state);
            }
            if (comp instanceof drmfComponent) {
                tpl = comp.render();
            }
            if (tpl) {
                if (lastTpl) {
                    lastTpl = lastTpl.replaceWith(tpl);
                }
                else {
                    tpl.createDOM();
                    tpl.addAt(root, root.lastChild);
                    lastTpl = tpl;
                }
            }
            b_render_on = false;
        }
        //} catch(e) {
        //  console.error(e)
        // }
        window.requestAnimationFrame(update_application);
        for (var _i = 0, tickFunctions_1 = tickFunctions; _i < tickFunctions_1.length; _i++) {
            var f = tickFunctions_1[_i];
            if (f)
                f();
        }
        tickFunctions.length = 0;
    };
    window.requestAnimationFrame(update_application);
    // interval = setInterval( update_application, update_delay);
}
exports.mount = mount;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;

},{"./xmlparser":3}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("./index");
function createDetector(strs) {
    var cached_detectors = new Array(256);
    function cacheDetector(str) {
        var cache_index = str.charCodeAt(0);
        if (!cached_detectors[cache_index])
            cached_detectors[cache_index] = [];
        cached_detectors[cache_index].push(function (buff, index) {
            if ((buff.length - index) < str.length)
                return false;
            for (var i = 0; i < str.length; i++) {
                if (str.charCodeAt(i) != buff.charCodeAt(index + i))
                    return false;
            }
            return true;
        });
    }
    for (var _i = 0, strs_1 = strs; _i < strs_1.length; _i++) {
        var s = strs_1[_i];
        cacheDetector(s);
    }
    return function (buff, index) {
        var detectors = cached_detectors[buff.charCodeAt(index)];
        if (detectors) {
            for (var _i = 0, detectors_1 = detectors; _i < detectors_1.length; _i++) {
                var fn = detectors_1[_i];
                if (fn(buff, index))
                    return true;
            }
        }
        return false;
    };
}
var isSelfClosingTag = createDetector(['area',
    'base',
    'br',
    'col',
    'command',
    'embd',
    'hr',
    'img',
    'input',
    'keygen ',
    'link',
    'menuitem',
    'meta',
    'param',
    'source',
    'track',
    'wbr',
]);
var isCommentStart = createDetector(['<!--']);
var isCommentEnd = createDetector(['-->']);
var namedChars = {
    "Aacute": 193,
    "Aacut": 193,
    "aacute": 225,
    "aacut": 225,
    "Abreve": 258,
    "abreve": 259,
    "ac": 8766,
    "acd": 8767,
    "acE": 8766,
    "Acirc": 194,
    "Acir": 194,
    "acirc": 226,
    "acir": 226,
    "acute": 180,
    "acut": 180,
    "Acy": 1040,
    "acy": 1072,
    "AElig": 198,
    "AEli": 198,
    "aelig": 230,
    "aeli": 230,
    "af": 8289,
    "Afr": 120068,
    "afr": 120094,
    "Agrave": 192,
    "Agrav": 192,
    "agrave": 224,
    "agrav": 224,
    "alefsym": 8501,
    "aleph": 8501,
    "Alpha": 913,
    "alpha": 945,
    "Amacr": 256,
    "amacr": 257,
    "amalg": 10815,
    "amp": 38,
    "am": 38,
    "AMP": 38,
    "AM": 38,
    "andand": 10837,
    "And": 10835,
    "and": 8743,
    "andd": 10844,
    "andslope": 10840,
    "andv": 10842,
    "ang": 8736,
    "ange": 10660,
    "angle": 8736,
    "angmsdaa": 10664,
    "angmsdab": 10665,
    "angmsdac": 10666,
    "angmsdad": 10667,
    "angmsdae": 10668,
    "angmsdaf": 10669,
    "angmsdag": 10670,
    "angmsdah": 10671,
    "angmsd": 8737,
    "angrt": 8735,
    "angrtvb": 8894,
    "angrtvbd": 10653,
    "angsph": 8738,
    "angst": 197,
    "angzarr": 9084,
    "Aogon": 260,
    "aogon": 261,
    "Aopf": 120120,
    "aopf": 120146,
    "apacir": 10863,
    "ap": 8776,
    "apE": 10864,
    "ape": 8778,
    "apid": 8779,
    "apos": 39,
    "ApplyFunction": 8289,
    "approx": 8776,
    "approxeq": 8778,
    "Aring": 197,
    "Arin": 197,
    "aring": 229,
    "arin": 229,
    "Ascr": 119964,
    "ascr": 119990,
    "Assign": 8788,
    "ast": 42,
    "asymp": 8776,
    "asympeq": 8781,
    "Atilde": 195,
    "Atild": 195,
    "atilde": 227,
    "atild": 227,
    "Auml": 196,
    "Aum": 196,
    "auml": 228,
    "aum": 228,
    "awconint": 8755,
    "awint": 10769,
    "backcong": 8780,
    "backepsilon": 1014,
    "backprime": 8245,
    "backsim": 8765,
    "backsimeq": 8909,
    "Backslash": 8726,
    "Barv": 10983,
    "barvee": 8893,
    "barwed": 8965,
    "Barwed": 8966,
    "barwedge": 8965,
    "bbrk": 9141,
    "bbrktbrk": 9142,
    "bcong": 8780,
    "Bcy": 1041,
    "bcy": 1073,
    "bdquo": 8222,
    "becaus": 8757,
    "because": 8757,
    "Because": 8757,
    "bemptyv": 10672,
    "bepsi": 1014,
    "bernou": 8492,
    "Bernoullis": 8492,
    "Beta": 914,
    "beta": 946,
    "beth": 8502,
    "between": 8812,
    "Bfr": 120069,
    "bfr": 120095,
    "bigcap": 8898,
    "bigcirc": 9711,
    "bigcup": 8899,
    "bigodot": 10752,
    "bigoplus": 10753,
    "bigotimes": 10754,
    "bigsqcup": 10758,
    "bigstar": 9733,
    "bigtriangledown": 9661,
    "bigtriangleup": 9651,
    "biguplus": 10756,
    "bigvee": 8897,
    "bigwedge": 8896,
    "bkarow": 10509,
    "blacklozenge": 10731,
    "blacksquare": 9642,
    "blacktriangle": 9652,
    "blacktriangledown": 9662,
    "blacktriangleleft": 9666,
    "blacktriangleright": 9656,
    "blank": 9251,
    "blk12": 9618,
    "blk14": 9617,
    "blk34": 9619,
    "block": 9608,
    "bne": 61,
    "bnequiv": 8801,
    "bNot": 10989,
    "bnot": 8976,
    "Bopf": 120121,
    "bopf": 120147,
    "bot": 8869,
    "bottom": 8869,
    "bowtie": 8904,
    "boxbox": 10697,
    "boxdl": 9488,
    "boxdL": 9557,
    "boxDl": 9558,
    "boxDL": 9559,
    "boxdr": 9484,
    "boxdR": 9554,
    "boxDr": 9555,
    "boxDR": 9556,
    "boxh": 9472,
    "boxH": 9552,
    "boxhd": 9516,
    "boxHd": 9572,
    "boxhD": 9573,
    "boxHD": 9574,
    "boxhu": 9524,
    "boxHu": 9575,
    "boxhU": 9576,
    "boxHU": 9577,
    "boxminus": 8863,
    "boxplus": 8862,
    "boxtimes": 8864,
    "boxul": 9496,
    "boxuL": 9563,
    "boxUl": 9564,
    "boxUL": 9565,
    "boxur": 9492,
    "boxuR": 9560,
    "boxUr": 9561,
    "boxUR": 9562,
    "boxv": 9474,
    "boxV": 9553,
    "boxvh": 9532,
    "boxvH": 9578,
    "boxVh": 9579,
    "boxVH": 9580,
    "boxvl": 9508,
    "boxvL": 9569,
    "boxVl": 9570,
    "boxVL": 9571,
    "boxvr": 9500,
    "boxvR": 9566,
    "boxVr": 9567,
    "boxVR": 9568,
    "bprime": 8245,
    "breve": 728,
    "Breve": 728,
    "brvbar": 166,
    "brvba": 166,
    "bscr": 119991,
    "Bscr": 8492,
    "bsemi": 8271,
    "bsim": 8765,
    "bsime": 8909,
    "bsolb": 10693,
    "bsol": 92,
    "bsolhsub": 10184,
    "bull": 8226,
    "bullet": 8226,
    "bump": 8782,
    "bumpE": 10926,
    "bumpe": 8783,
    "Bumpeq": 8782,
    "bumpeq": 8783,
    "Cacute": 262,
    "cacute": 263,
    "capand": 10820,
    "capbrcup": 10825,
    "capcap": 10827,
    "cap": 8745,
    "Cap": 8914,
    "capcup": 10823,
    "capdot": 10816,
    "CapitalDifferentialD": 8517,
    "caps": 8745,
    "caret": 8257,
    "caron": 711,
    "Cayleys": 8493,
    "ccaps": 10829,
    "Ccaron": 268,
    "ccaron": 269,
    "Ccedil": 199,
    "Ccedi": 199,
    "ccedil": 231,
    "ccedi": 231,
    "Ccirc": 264,
    "ccirc": 265,
    "Cconint": 8752,
    "ccups": 10828,
    "ccupssm": 10832,
    "Cdot": 266,
    "cdot": 267,
    "cedil": 184,
    "cedi": 184,
    "Cedilla": 184,
    "cemptyv": 10674,
    "cent": 162,
    "cen": 162,
    "centerdot": 183,
    "CenterDot": 183,
    "cfr": 120096,
    "Cfr": 8493,
    "CHcy": 1063,
    "chcy": 1095,
    "check": 10003,
    "checkmark": 10003,
    "Chi": 935,
    "chi": 967,
    "circ": 710,
    "circeq": 8791,
    "circlearrowleft": 8634,
    "circlearrowright": 8635,
    "circledast": 8859,
    "circledcirc": 8858,
    "circleddash": 8861,
    "CircleDot": 8857,
    "circledR": 174,
    "circledS": 9416,
    "CircleMinus": 8854,
    "CirclePlus": 8853,
    "CircleTimes": 8855,
    "cir": 9675,
    "cirE": 10691,
    "cire": 8791,
    "cirfnint": 10768,
    "cirmid": 10991,
    "cirscir": 10690,
    "ClockwiseContourIntegral": 8754,
    "CloseCurlyDoubleQuote": 8221,
    "CloseCurlyQuote": 8217,
    "clubs": 9827,
    "clubsuit": 9827,
    "colon": 58,
    "Colon": 8759,
    "Colone": 10868,
    "colone": 8788,
    "coloneq": 8788,
    "comma": 44,
    "commat": 64,
    "comp": 8705,
    "compfn": 8728,
    "complement": 8705,
    "complexes": 8450,
    "cong": 8773,
    "congdot": 10861,
    "Congruent": 8801,
    "conint": 8750,
    "Conint": 8751,
    "ContourIntegral": 8750,
    "copf": 120148,
    "Copf": 8450,
    "coprod": 8720,
    "Coproduct": 8720,
    "copy": 169,
    "cop": 169,
    "COPY": 169,
    "COP": 169,
    "copysr": 8471,
    "CounterClockwiseContourIntegral": 8755,
    "crarr": 8629,
    "cross": 10007,
    "Cross": 10799,
    "Cscr": 119966,
    "cscr": 119992,
    "csub": 10959,
    "csube": 10961,
    "csup": 10960,
    "csupe": 10962,
    "ctdot": 8943,
    "cudarrl": 10552,
    "cudarrr": 10549,
    "cuepr": 8926,
    "cuesc": 8927,
    "cularr": 8630,
    "cularrp": 10557,
    "cupbrcap": 10824,
    "cupcap": 10822,
    "CupCap": 8781,
    "cup": 8746,
    "Cup": 8915,
    "cupcup": 10826,
    "cupdot": 8845,
    "cupor": 10821,
    "cups": 8746,
    "curarr": 8631,
    "curarrm": 10556,
    "curlyeqprec": 8926,
    "curlyeqsucc": 8927,
    "curlyvee": 8910,
    "curlywedge": 8911,
    "curren": 164,
    "curre": 164,
    "curvearrowleft": 8630,
    "curvearrowright": 8631,
    "cuvee": 8910,
    "cuwed": 8911,
    "cwconint": 8754,
    "cwint": 8753,
    "cylcty": 9005,
    "dagger": 8224,
    "Dagger": 8225,
    "daleth": 8504,
    "darr": 8595,
    "Darr": 8609,
    "dArr": 8659,
    "dash": 8208,
    "Dashv": 10980,
    "dashv": 8867,
    "dbkarow": 10511,
    "dblac": 733,
    "Dcaron": 270,
    "dcaron": 271,
    "Dcy": 1044,
    "dcy": 1076,
    "ddagger": 8225,
    "ddarr": 8650,
    "DD": 8517,
    "dd": 8518,
    "DDotrahd": 10513,
    "ddotseq": 10871,
    "deg": 176,
    "de": 176,
    "Del": 8711,
    "Delta": 916,
    "delta": 948,
    "demptyv": 10673,
    "dfisht": 10623,
    "Dfr": 120071,
    "dfr": 120097,
    "dHar": 10597,
    "dharl": 8643,
    "dharr": 8642,
    "DiacriticalAcute": 180,
    "DiacriticalDot": 729,
    "DiacriticalDoubleAcute": 733,
    "DiacriticalGrave": 96,
    "DiacriticalTilde": 732,
    "diam": 8900,
    "diamond": 8900,
    "Diamond": 8900,
    "diamondsuit": 9830,
    "diams": 9830,
    "die": 168,
    "DifferentialD": 8518,
    "digamma": 989,
    "disin": 8946,
    "div": 247,
    "divide": 247,
    "divid": 247,
    "divideontimes": 8903,
    "divonx": 8903,
    "DJcy": 1026,
    "djcy": 1106,
    "dlcorn": 8990,
    "dlcrop": 8973,
    "dollar": 36,
    "Dopf": 120123,
    "dopf": 120149,
    "Dot": 168,
    "dot": 729,
    "DotDot": 8412,
    "doteq": 8784,
    "doteqdot": 8785,
    "DotEqual": 8784,
    "dotminus": 8760,
    "dotplus": 8724,
    "dotsquare": 8865,
    "doublebarwedge": 8966,
    "DoubleContourIntegral": 8751,
    "DoubleDot": 168,
    "DoubleDownArrow": 8659,
    "DoubleLeftArrow": 8656,
    "DoubleLeftRightArrow": 8660,
    "DoubleLeftTee": 10980,
    "DoubleLongLeftArrow": 10232,
    "DoubleLongLeftRightArrow": 10234,
    "DoubleLongRightArrow": 10233,
    "DoubleRightArrow": 8658,
    "DoubleRightTee": 8872,
    "DoubleUpArrow": 8657,
    "DoubleUpDownArrow": 8661,
    "DoubleVerticalBar": 8741,
    "DownArrowBar": 10515,
    "downarrow": 8595,
    "DownArrow": 8595,
    "Downarrow": 8659,
    "DownArrowUpArrow": 8693,
    "DownBreve": 785,
    "downdownarrows": 8650,
    "downharpoonleft": 8643,
    "downharpoonright": 8642,
    "DownLeftRightVector": 10576,
    "DownLeftTeeVector": 10590,
    "DownLeftVectorBar": 10582,
    "DownLeftVector": 8637,
    "DownRightTeeVector": 10591,
    "DownRightVectorBar": 10583,
    "DownRightVector": 8641,
    "DownTeeArrow": 8615,
    "DownTee": 8868,
    "drbkarow": 10512,
    "drcorn": 8991,
    "drcrop": 8972,
    "Dscr": 119967,
    "dscr": 119993,
    "DScy": 1029,
    "dscy": 1109,
    "dsol": 10742,
    "Dstrok": 272,
    "dstrok": 273,
    "dtdot": 8945,
    "dtri": 9663,
    "dtrif": 9662,
    "duarr": 8693,
    "duhar": 10607,
    "dwangle": 10662,
    "DZcy": 1039,
    "dzcy": 1119,
    "dzigrarr": 10239,
    "Eacute": 201,
    "Eacut": 201,
    "eacute": 233,
    "eacut": 233,
    "easter": 10862,
    "Ecaron": 282,
    "ecaron": 283,
    "Ecirc": 202,
    "Ecir": 202,
    "ecirc": 234,
    "ecir": 8790,
    "ecolon": 8789,
    "Ecy": 1069,
    "ecy": 1101,
    "eDDot": 10871,
    "Edot": 278,
    "edot": 279,
    "eDot": 8785,
    "ee": 8519,
    "efDot": 8786,
    "Efr": 120072,
    "efr": 120098,
    "eg": 10906,
    "Egrave": 200,
    "Egrav": 200,
    "egrave": 232,
    "egrav": 232,
    "egs": 10902,
    "egsdot": 10904,
    "el": 10905,
    "Element": 8712,
    "elinters": 9191,
    "ell": 8467,
    "els": 10901,
    "elsdot": 10903,
    "Emacr": 274,
    "emacr": 275,
    "empty": 8709,
    "emptyset": 8709,
    "EmptySmallSquare": 9723,
    "emptyv": 8709,
    "EmptyVerySmallSquare": 9643,
    "emsp13": 8196,
    "emsp14": 8197,
    "emsp": 8195,
    "ENG": 330,
    "eng": 331,
    "ensp": 8194,
    "Eogon": 280,
    "eogon": 281,
    "Eopf": 120124,
    "eopf": 120150,
    "epar": 8917,
    "eparsl": 10723,
    "eplus": 10865,
    "epsi": 949,
    "Epsilon": 917,
    "epsilon": 949,
    "epsiv": 1013,
    "eqcirc": 8790,
    "eqcolon": 8789,
    "eqsim": 8770,
    "eqslantgtr": 10902,
    "eqslantless": 10901,
    "Equal": 10869,
    "equals": 61,
    "EqualTilde": 8770,
    "equest": 8799,
    "Equilibrium": 8652,
    "equiv": 8801,
    "equivDD": 10872,
    "eqvparsl": 10725,
    "erarr": 10609,
    "erDot": 8787,
    "escr": 8495,
    "Escr": 8496,
    "esdot": 8784,
    "Esim": 10867,
    "esim": 8770,
    "Eta": 919,
    "eta": 951,
    "ETH": 208,
    "ET": 208,
    "eth": 240,
    "et": 240,
    "Euml": 203,
    "Eum": 203,
    "euml": 235,
    "eum": 235,
    "euro": 8364,
    "excl": 33,
    "exist": 8707,
    "Exists": 8707,
    "expectation": 8496,
    "exponentiale": 8519,
    "ExponentialE": 8519,
    "fallingdotseq": 8786,
    "Fcy": 1060,
    "fcy": 1092,
    "female": 9792,
    "ffilig": 64259,
    "fflig": 64256,
    "ffllig": 64260,
    "Ffr": 120073,
    "ffr": 120099,
    "filig": 64257,
    "FilledSmallSquare": 9724,
    "FilledVerySmallSquare": 9642,
    "fjlig": 102,
    "flat": 9837,
    "fllig": 64258,
    "fltns": 9649,
    "fnof": 402,
    "Fopf": 120125,
    "fopf": 120151,
    "forall": 8704,
    "ForAll": 8704,
    "fork": 8916,
    "forkv": 10969,
    "Fouriertrf": 8497,
    "fpartint": 10765,
    "frac12": 189,
    "frac1": 188,
    "frac13": 8531,
    "frac14": 188,
    "frac15": 8533,
    "frac16": 8537,
    "frac18": 8539,
    "frac23": 8532,
    "frac25": 8534,
    "frac34": 190,
    "frac3": 190,
    "frac35": 8535,
    "frac38": 8540,
    "frac45": 8536,
    "frac56": 8538,
    "frac58": 8541,
    "frac78": 8542,
    "frasl": 8260,
    "frown": 8994,
    "fscr": 119995,
    "Fscr": 8497,
    "gacute": 501,
    "Gamma": 915,
    "gamma": 947,
    "Gammad": 988,
    "gammad": 989,
    "gap": 10886,
    "Gbreve": 286,
    "gbreve": 287,
    "Gcedil": 290,
    "Gcirc": 284,
    "gcirc": 285,
    "Gcy": 1043,
    "gcy": 1075,
    "Gdot": 288,
    "gdot": 289,
    "ge": 8805,
    "gE": 8807,
    "gEl": 10892,
    "gel": 8923,
    "geq": 8805,
    "geqq": 8807,
    "geqslant": 10878,
    "gescc": 10921,
    "ges": 10878,
    "gesdot": 10880,
    "gesdoto": 10882,
    "gesdotol": 10884,
    "gesl": 8923,
    "gesles": 10900,
    "Gfr": 120074,
    "gfr": 120100,
    "gg": 8811,
    "Gg": 8921,
    "ggg": 8921,
    "gimel": 8503,
    "GJcy": 1027,
    "gjcy": 1107,
    "gla": 10917,
    "gl": 8823,
    "glE": 10898,
    "glj": 10916,
    "gnap": 10890,
    "gnapprox": 10890,
    "gne": 10888,
    "gnE": 8809,
    "gneq": 10888,
    "gneqq": 8809,
    "gnsim": 8935,
    "Gopf": 120126,
    "gopf": 120152,
    "grave": 96,
    "GreaterEqual": 8805,
    "GreaterEqualLess": 8923,
    "GreaterFullEqual": 8807,
    "GreaterGreater": 10914,
    "GreaterLess": 8823,
    "GreaterSlantEqual": 10878,
    "GreaterTilde": 8819,
    "Gscr": 119970,
    "gscr": 8458,
    "gsim": 8819,
    "gsime": 10894,
    "gsiml": 10896,
    "gtcc": 10919,
    "gtcir": 10874,
    "gt": 62,
    "g": 62,
    "GT": 62,
    "G": 62,
    "Gt": 8811,
    "gtdot": 8919,
    "gtlPar": 10645,
    "gtquest": 10876,
    "gtrapprox": 10886,
    "gtrarr": 10616,
    "gtrdot": 8919,
    "gtreqless": 8923,
    "gtreqqless": 10892,
    "gtrless": 8823,
    "gtrsim": 8819,
    "gvertneqq": 8809,
    "gvnE": 8809,
    "Hacek": 711,
    "hairsp": 8202,
    "half": 189,
    "hamilt": 8459,
    "HARDcy": 1066,
    "hardcy": 1098,
    "harrcir": 10568,
    "harr": 8596,
    "hArr": 8660,
    "harrw": 8621,
    "Hat": 94,
    "hbar": 8463,
    "Hcirc": 292,
    "hcirc": 293,
    "hearts": 9829,
    "heartsuit": 9829,
    "hellip": 8230,
    "hercon": 8889,
    "hfr": 120101,
    "Hfr": 8460,
    "HilbertSpace": 8459,
    "hksearow": 10533,
    "hkswarow": 10534,
    "hoarr": 8703,
    "homtht": 8763,
    "hookleftarrow": 8617,
    "hookrightarrow": 8618,
    "hopf": 120153,
    "Hopf": 8461,
    "horbar": 8213,
    "HorizontalLine": 9472,
    "hscr": 119997,
    "Hscr": 8459,
    "hslash": 8463,
    "Hstrok": 294,
    "hstrok": 295,
    "HumpDownHump": 8782,
    "HumpEqual": 8783,
    "hybull": 8259,
    "hyphen": 8208,
    "Iacute": 205,
    "Iacut": 205,
    "iacute": 237,
    "iacut": 237,
    "ic": 8291,
    "Icirc": 206,
    "Icir": 206,
    "icirc": 238,
    "icir": 238,
    "Icy": 1048,
    "icy": 1080,
    "Idot": 304,
    "IEcy": 1045,
    "iecy": 1077,
    "iexcl": 161,
    "iexc": 161,
    "iff": 8660,
    "ifr": 120102,
    "Ifr": 8465,
    "Igrave": 204,
    "Igrav": 204,
    "igrave": 236,
    "igrav": 236,
    "ii": 8520,
    "iiiint": 10764,
    "iiint": 8749,
    "iinfin": 10716,
    "iiota": 8489,
    "IJlig": 306,
    "ijlig": 307,
    "Imacr": 298,
    "imacr": 299,
    "image": 8465,
    "ImaginaryI": 8520,
    "imagline": 8464,
    "imagpart": 8465,
    "imath": 305,
    "Im": 8465,
    "imof": 8887,
    "imped": 437,
    "Implies": 8658,
    "incare": 8453,
    "in": 8712,
    "infin": 8734,
    "infintie": 10717,
    "inodot": 305,
    "intcal": 8890,
    "int": 8747,
    "Int": 8748,
    "integers": 8484,
    "Integral": 8747,
    "intercal": 8890,
    "Intersection": 8898,
    "intlarhk": 10775,
    "intprod": 10812,
    "InvisibleComma": 8291,
    "InvisibleTimes": 8290,
    "IOcy": 1025,
    "iocy": 1105,
    "Iogon": 302,
    "iogon": 303,
    "Iopf": 120128,
    "iopf": 120154,
    "Iota": 921,
    "iota": 953,
    "iprod": 10812,
    "iquest": 191,
    "iques": 191,
    "iscr": 119998,
    "Iscr": 8464,
    "isin": 8712,
    "isindot": 8949,
    "isinE": 8953,
    "isins": 8948,
    "isinsv": 8947,
    "isinv": 8712,
    "it": 8290,
    "Itilde": 296,
    "itilde": 297,
    "Iukcy": 1030,
    "iukcy": 1110,
    "Iuml": 207,
    "Ium": 207,
    "iuml": 239,
    "ium": 239,
    "Jcirc": 308,
    "jcirc": 309,
    "Jcy": 1049,
    "jcy": 1081,
    "Jfr": 120077,
    "jfr": 120103,
    "jmath": 567,
    "Jopf": 120129,
    "jopf": 120155,
    "Jscr": 119973,
    "jscr": 119999,
    "Jsercy": 1032,
    "jsercy": 1112,
    "Jukcy": 1028,
    "jukcy": 1108,
    "Kappa": 922,
    "kappa": 954,
    "kappav": 1008,
    "Kcedil": 310,
    "kcedil": 311,
    "Kcy": 1050,
    "kcy": 1082,
    "Kfr": 120078,
    "kfr": 120104,
    "kgreen": 312,
    "KHcy": 1061,
    "khcy": 1093,
    "KJcy": 1036,
    "kjcy": 1116,
    "Kopf": 120130,
    "kopf": 120156,
    "Kscr": 119974,
    "kscr": 120000,
    "lAarr": 8666,
    "Lacute": 313,
    "lacute": 314,
    "laemptyv": 10676,
    "lagran": 8466,
    "Lambda": 923,
    "lambda": 955,
    "lang": 10216,
    "Lang": 10218,
    "langd": 10641,
    "langle": 10216,
    "lap": 10885,
    "Laplacetrf": 8466,
    "laquo": 171,
    "laqu": 171,
    "larrb": 8676,
    "larrbfs": 10527,
    "larr": 8592,
    "Larr": 8606,
    "lArr": 8656,
    "larrfs": 10525,
    "larrhk": 8617,
    "larrlp": 8619,
    "larrpl": 10553,
    "larrsim": 10611,
    "larrtl": 8610,
    "latail": 10521,
    "lAtail": 10523,
    "lat": 10923,
    "late": 10925,
    "lates": 10925,
    "lbarr": 10508,
    "lBarr": 10510,
    "lbbrk": 10098,
    "lbrace": 123,
    "lbrack": 91,
    "lbrke": 10635,
    "lbrksld": 10639,
    "lbrkslu": 10637,
    "Lcaron": 317,
    "lcaron": 318,
    "Lcedil": 315,
    "lcedil": 316,
    "lceil": 8968,
    "lcub": 123,
    "Lcy": 1051,
    "lcy": 1083,
    "ldca": 10550,
    "ldquo": 8220,
    "ldquor": 8222,
    "ldrdhar": 10599,
    "ldrushar": 10571,
    "ldsh": 8626,
    "le": 8804,
    "lE": 8806,
    "LeftAngleBracket": 10216,
    "LeftArrowBar": 8676,
    "leftarrow": 8592,
    "LeftArrow": 8592,
    "Leftarrow": 8656,
    "LeftArrowRightArrow": 8646,
    "leftarrowtail": 8610,
    "LeftCeiling": 8968,
    "LeftDoubleBracket": 10214,
    "LeftDownTeeVector": 10593,
    "LeftDownVectorBar": 10585,
    "LeftDownVector": 8643,
    "LeftFloor": 8970,
    "leftharpoondown": 8637,
    "leftharpoonup": 8636,
    "leftleftarrows": 8647,
    "leftrightarrow": 8596,
    "LeftRightArrow": 8596,
    "Leftrightarrow": 8660,
    "leftrightarrows": 8646,
    "leftrightharpoons": 8651,
    "leftrightsquigarrow": 8621,
    "LeftRightVector": 10574,
    "LeftTeeArrow": 8612,
    "LeftTee": 8867,
    "LeftTeeVector": 10586,
    "leftthreetimes": 8907,
    "LeftTriangleBar": 10703,
    "LeftTriangle": 8882,
    "LeftTriangleEqual": 8884,
    "LeftUpDownVector": 10577,
    "LeftUpTeeVector": 10592,
    "LeftUpVectorBar": 10584,
    "LeftUpVector": 8639,
    "LeftVectorBar": 10578,
    "LeftVector": 8636,
    "lEg": 10891,
    "leg": 8922,
    "leq": 8804,
    "leqq": 8806,
    "leqslant": 10877,
    "lescc": 10920,
    "les": 10877,
    "lesdot": 10879,
    "lesdoto": 10881,
    "lesdotor": 10883,
    "lesg": 8922,
    "lesges": 10899,
    "lessapprox": 10885,
    "lessdot": 8918,
    "lesseqgtr": 8922,
    "lesseqqgtr": 10891,
    "LessEqualGreater": 8922,
    "LessFullEqual": 8806,
    "LessGreater": 8822,
    "lessgtr": 8822,
    "LessLess": 10913,
    "lesssim": 8818,
    "LessSlantEqual": 10877,
    "LessTilde": 8818,
    "lfisht": 10620,
    "lfloor": 8970,
    "Lfr": 120079,
    "lfr": 120105,
    "lg": 8822,
    "lgE": 10897,
    "lHar": 10594,
    "lhard": 8637,
    "lharu": 8636,
    "lharul": 10602,
    "lhblk": 9604,
    "LJcy": 1033,
    "ljcy": 1113,
    "llarr": 8647,
    "ll": 8810,
    "Ll": 8920,
    "llcorner": 8990,
    "Lleftarrow": 8666,
    "llhard": 10603,
    "lltri": 9722,
    "Lmidot": 319,
    "lmidot": 320,
    "lmoustache": 9136,
    "lmoust": 9136,
    "lnap": 10889,
    "lnapprox": 10889,
    "lne": 10887,
    "lnE": 8808,
    "lneq": 10887,
    "lneqq": 8808,
    "lnsim": 8934,
    "loang": 10220,
    "loarr": 8701,
    "lobrk": 10214,
    "longleftarrow": 10229,
    "LongLeftArrow": 10229,
    "Longleftarrow": 10232,
    "longleftrightarrow": 10231,
    "LongLeftRightArrow": 10231,
    "Longleftrightarrow": 10234,
    "longmapsto": 10236,
    "longrightarrow": 10230,
    "LongRightArrow": 10230,
    "Longrightarrow": 10233,
    "looparrowleft": 8619,
    "looparrowright": 8620,
    "lopar": 10629,
    "Lopf": 120131,
    "lopf": 120157,
    "loplus": 10797,
    "lotimes": 10804,
    "lowast": 8727,
    "lowbar": 95,
    "LowerLeftArrow": 8601,
    "LowerRightArrow": 8600,
    "loz": 9674,
    "lozenge": 9674,
    "lozf": 10731,
    "lpar": 40,
    "lparlt": 10643,
    "lrarr": 8646,
    "lrcorner": 8991,
    "lrhar": 8651,
    "lrhard": 10605,
    "lrm": 8206,
    "lrtri": 8895,
    "lsaquo": 8249,
    "lscr": 120001,
    "Lscr": 8466,
    "lsh": 8624,
    "Lsh": 8624,
    "lsim": 8818,
    "lsime": 10893,
    "lsimg": 10895,
    "lsqb": 91,
    "lsquo": 8216,
    "lsquor": 8218,
    "Lstrok": 321,
    "lstrok": 322,
    "ltcc": 10918,
    "ltcir": 10873,
    "lt": 60,
    "l": 60,
    "LT": 60,
    "L": 60,
    "Lt": 8810,
    "ltdot": 8918,
    "lthree": 8907,
    "ltimes": 8905,
    "ltlarr": 10614,
    "ltquest": 10875,
    "ltri": 9667,
    "ltrie": 8884,
    "ltrif": 9666,
    "ltrPar": 10646,
    "lurdshar": 10570,
    "luruhar": 10598,
    "lvertneqq": 8808,
    "lvnE": 8808,
    "macr": 175,
    "mac": 175,
    "male": 9794,
    "malt": 10016,
    "maltese": 10016,
    "Map": 10501,
    "map": 8614,
    "mapsto": 8614,
    "mapstodown": 8615,
    "mapstoleft": 8612,
    "mapstoup": 8613,
    "marker": 9646,
    "mcomma": 10793,
    "Mcy": 1052,
    "mcy": 1084,
    "mdash": 8212,
    "mDDot": 8762,
    "measuredangle": 8737,
    "MediumSpace": 8287,
    "Mellintrf": 8499,
    "Mfr": 120080,
    "mfr": 120106,
    "mho": 8487,
    "micro": 181,
    "micr": 181,
    "midast": 42,
    "midcir": 10992,
    "mid": 8739,
    "middot": 183,
    "middo": 183,
    "minusb": 8863,
    "minus": 8722,
    "minusd": 8760,
    "minusdu": 10794,
    "MinusPlus": 8723,
    "mlcp": 10971,
    "mldr": 8230,
    "mnplus": 8723,
    "models": 8871,
    "Mopf": 120132,
    "mopf": 120158,
    "mp": 8723,
    "mscr": 120002,
    "Mscr": 8499,
    "mstpos": 8766,
    "Mu": 924,
    "mu": 956,
    "multimap": 8888,
    "mumap": 8888,
    "nabla": 8711,
    "Nacute": 323,
    "nacute": 324,
    "nang": 8736,
    "nap": 8777,
    "napE": 10864,
    "napid": 8779,
    "napos": 329,
    "napprox": 8777,
    "natural": 9838,
    "naturals": 8469,
    "natur": 9838,
    "nbsp": 160,
    "nbs": 160,
    "nbump": 8782,
    "nbumpe": 8783,
    "ncap": 10819,
    "Ncaron": 327,
    "ncaron": 328,
    "Ncedil": 325,
    "ncedil": 326,
    "ncong": 8775,
    "ncongdot": 10861,
    "ncup": 10818,
    "Ncy": 1053,
    "ncy": 1085,
    "ndash": 8211,
    "nearhk": 10532,
    "nearr": 8599,
    "neArr": 8663,
    "nearrow": 8599,
    "ne": 8800,
    "nedot": 8784,
    "NegativeMediumSpace": 8203,
    "NegativeThickSpace": 8203,
    "NegativeThinSpace": 8203,
    "NegativeVeryThinSpace": 8203,
    "nequiv": 8802,
    "nesear": 10536,
    "nesim": 8770,
    "NestedGreaterGreater": 8811,
    "NestedLessLess": 8810,
    "NewLine": 10,
    "nexist": 8708,
    "nexists": 8708,
    "Nfr": 120081,
    "nfr": 120107,
    "ngE": 8807,
    "nge": 8817,
    "ngeq": 8817,
    "ngeqq": 8807,
    "ngeqslant": 10878,
    "nges": 10878,
    "nGg": 8921,
    "ngsim": 8821,
    "nGt": 8811,
    "ngt": 8815,
    "ngtr": 8815,
    "nGtv": 8811,
    "nharr": 8622,
    "nhArr": 8654,
    "nhpar": 10994,
    "ni": 8715,
    "nis": 8956,
    "nisd": 8954,
    "niv": 8715,
    "NJcy": 1034,
    "njcy": 1114,
    "nlarr": 8602,
    "nlArr": 8653,
    "nldr": 8229,
    "nlE": 8806,
    "nle": 8816,
    "nleftarrow": 8602,
    "nLeftarrow": 8653,
    "nleftrightarrow": 8622,
    "nLeftrightarrow": 8654,
    "nleq": 8816,
    "nleqq": 8806,
    "nleqslant": 10877,
    "nles": 10877,
    "nless": 8814,
    "nLl": 8920,
    "nlsim": 8820,
    "nLt": 8810,
    "nlt": 8814,
    "nltri": 8938,
    "nltrie": 8940,
    "nLtv": 8810,
    "nmid": 8740,
    "NoBreak": 8288,
    "NonBreakingSpace": 160,
    "nopf": 120159,
    "Nopf": 8469,
    "Not": 10988,
    "not": 172,
    "no": 172,
    "NotCongruent": 8802,
    "NotCupCap": 8813,
    "NotDoubleVerticalBar": 8742,
    "NotElement": 8713,
    "NotEqual": 8800,
    "NotEqualTilde": 8770,
    "NotExists": 8708,
    "NotGreater": 8815,
    "NotGreaterEqual": 8817,
    "NotGreaterFullEqual": 8807,
    "NotGreaterGreater": 8811,
    "NotGreaterLess": 8825,
    "NotGreaterSlantEqual": 10878,
    "NotGreaterTilde": 8821,
    "NotHumpDownHump": 8782,
    "NotHumpEqual": 8783,
    "notin": 8713,
    "notindot": 8949,
    "notinE": 8953,
    "notinva": 8713,
    "notinvb": 8951,
    "notinvc": 8950,
    "NotLeftTriangleBar": 10703,
    "NotLeftTriangle": 8938,
    "NotLeftTriangleEqual": 8940,
    "NotLess": 8814,
    "NotLessEqual": 8816,
    "NotLessGreater": 8824,
    "NotLessLess": 8810,
    "NotLessSlantEqual": 10877,
    "NotLessTilde": 8820,
    "NotNestedGreaterGreater": 10914,
    "NotNestedLessLess": 10913,
    "notni": 8716,
    "notniva": 8716,
    "notnivb": 8958,
    "notnivc": 8957,
    "NotPrecedes": 8832,
    "NotPrecedesEqual": 10927,
    "NotPrecedesSlantEqual": 8928,
    "NotReverseElement": 8716,
    "NotRightTriangleBar": 10704,
    "NotRightTriangle": 8939,
    "NotRightTriangleEqual": 8941,
    "NotSquareSubset": 8847,
    "NotSquareSubsetEqual": 8930,
    "NotSquareSuperset": 8848,
    "NotSquareSupersetEqual": 8931,
    "NotSubset": 8834,
    "NotSubsetEqual": 8840,
    "NotSucceeds": 8833,
    "NotSucceedsEqual": 10928,
    "NotSucceedsSlantEqual": 8929,
    "NotSucceedsTilde": 8831,
    "NotSuperset": 8835,
    "NotSupersetEqual": 8841,
    "NotTilde": 8769,
    "NotTildeEqual": 8772,
    "NotTildeFullEqual": 8775,
    "NotTildeTilde": 8777,
    "NotVerticalBar": 8740,
    "nparallel": 8742,
    "npar": 8742,
    "nparsl": 11005,
    "npart": 8706,
    "npolint": 10772,
    "npr": 8832,
    "nprcue": 8928,
    "nprec": 8832,
    "npreceq": 10927,
    "npre": 10927,
    "nrarrc": 10547,
    "nrarr": 8603,
    "nrArr": 8655,
    "nrarrw": 8605,
    "nrightarrow": 8603,
    "nRightarrow": 8655,
    "nrtri": 8939,
    "nrtrie": 8941,
    "nsc": 8833,
    "nsccue": 8929,
    "nsce": 10928,
    "Nscr": 119977,
    "nscr": 120003,
    "nshortmid": 8740,
    "nshortparallel": 8742,
    "nsim": 8769,
    "nsime": 8772,
    "nsimeq": 8772,
    "nsmid": 8740,
    "nspar": 8742,
    "nsqsube": 8930,
    "nsqsupe": 8931,
    "nsub": 8836,
    "nsubE": 10949,
    "nsube": 8840,
    "nsubset": 8834,
    "nsubseteq": 8840,
    "nsubseteqq": 10949,
    "nsucc": 8833,
    "nsucceq": 10928,
    "nsup": 8837,
    "nsupE": 10950,
    "nsupe": 8841,
    "nsupset": 8835,
    "nsupseteq": 8841,
    "nsupseteqq": 10950,
    "ntgl": 8825,
    "Ntilde": 209,
    "Ntild": 209,
    "ntilde": 241,
    "ntild": 241,
    "ntlg": 8824,
    "ntriangleleft": 8938,
    "ntrianglelefteq": 8940,
    "ntriangleright": 8939,
    "ntrianglerighteq": 8941,
    "Nu": 925,
    "nu": 957,
    "num": 35,
    "numero": 8470,
    "numsp": 8199,
    "nvap": 8781,
    "nvdash": 8876,
    "nvDash": 8877,
    "nVdash": 8878,
    "nVDash": 8879,
    "nvge": 8805,
    "nvgt": 62,
    "nvHarr": 10500,
    "nvinfin": 10718,
    "nvlArr": 10498,
    "nvle": 8804,
    "nvlt": 60,
    "nvltrie": 8884,
    "nvrArr": 10499,
    "nvrtrie": 8885,
    "nvsim": 8764,
    "nwarhk": 10531,
    "nwarr": 8598,
    "nwArr": 8662,
    "nwarrow": 8598,
    "nwnear": 10535,
    "Oacute": 211,
    "Oacut": 211,
    "oacute": 243,
    "oacut": 243,
    "oast": 8859,
    "Ocirc": 212,
    "Ocir": 212,
    "ocirc": 244,
    "ocir": 8858,
    "Ocy": 1054,
    "ocy": 1086,
    "odash": 8861,
    "Odblac": 336,
    "odblac": 337,
    "odiv": 10808,
    "odot": 8857,
    "odsold": 10684,
    "OElig": 338,
    "oelig": 339,
    "ofcir": 10687,
    "Ofr": 120082,
    "ofr": 120108,
    "ogon": 731,
    "Ograve": 210,
    "Ograv": 210,
    "ograve": 242,
    "ograv": 242,
    "ogt": 10689,
    "ohbar": 10677,
    "ohm": 937,
    "oint": 8750,
    "olarr": 8634,
    "olcir": 10686,
    "olcross": 10683,
    "oline": 8254,
    "olt": 10688,
    "Omacr": 332,
    "omacr": 333,
    "Omega": 937,
    "omega": 969,
    "Omicron": 927,
    "omicron": 959,
    "omid": 10678,
    "ominus": 8854,
    "Oopf": 120134,
    "oopf": 120160,
    "opar": 10679,
    "OpenCurlyDoubleQuote": 8220,
    "OpenCurlyQuote": 8216,
    "operp": 10681,
    "oplus": 8853,
    "orarr": 8635,
    "Or": 10836,
    "or": 8744,
    "ord": 186,
    "order": 8500,
    "orderof": 8500,
    "ordf": 170,
    "ordm": 186,
    "origof": 8886,
    "oror": 10838,
    "orslope": 10839,
    "orv": 10843,
    "oS": 9416,
    "Oscr": 119978,
    "oscr": 8500,
    "Oslash": 216,
    "Oslas": 216,
    "oslash": 248,
    "oslas": 248,
    "osol": 8856,
    "Otilde": 213,
    "Otild": 213,
    "otilde": 245,
    "otild": 245,
    "otimesas": 10806,
    "Otimes": 10807,
    "otimes": 8855,
    "Ouml": 214,
    "Oum": 214,
    "ouml": 246,
    "oum": 246,
    "ovbar": 9021,
    "OverBar": 8254,
    "OverBrace": 9182,
    "OverBracket": 9140,
    "OverParenthesis": 9180,
    "para": 182,
    "par": 8741,
    "parallel": 8741,
    "parsim": 10995,
    "parsl": 11005,
    "part": 8706,
    "PartialD": 8706,
    "Pcy": 1055,
    "pcy": 1087,
    "percnt": 37,
    "period": 46,
    "permil": 8240,
    "perp": 8869,
    "pertenk": 8241,
    "Pfr": 120083,
    "pfr": 120109,
    "Phi": 934,
    "phi": 966,
    "phiv": 981,
    "phmmat": 8499,
    "phone": 9742,
    "Pi": 928,
    "pi": 960,
    "pitchfork": 8916,
    "piv": 982,
    "planck": 8463,
    "planckh": 8462,
    "plankv": 8463,
    "plusacir": 10787,
    "plusb": 8862,
    "pluscir": 10786,
    "plus": 43,
    "plusdo": 8724,
    "plusdu": 10789,
    "pluse": 10866,
    "PlusMinus": 177,
    "plusmn": 177,
    "plusm": 177,
    "plussim": 10790,
    "plustwo": 10791,
    "pm": 177,
    "Poincareplane": 8460,
    "pointint": 10773,
    "popf": 120161,
    "Popf": 8473,
    "pound": 163,
    "poun": 163,
    "prap": 10935,
    "Pr": 10939,
    "pr": 8826,
    "prcue": 8828,
    "precapprox": 10935,
    "prec": 8826,
    "preccurlyeq": 8828,
    "Precedes": 8826,
    "PrecedesEqual": 10927,
    "PrecedesSlantEqual": 8828,
    "PrecedesTilde": 8830,
    "preceq": 10927,
    "precnapprox": 10937,
    "precneqq": 10933,
    "precnsim": 8936,
    "pre": 10927,
    "prE": 10931,
    "precsim": 8830,
    "prime": 8242,
    "Prime": 8243,
    "primes": 8473,
    "prnap": 10937,
    "prnE": 10933,
    "prnsim": 8936,
    "prod": 8719,
    "Product": 8719,
    "profalar": 9006,
    "profline": 8978,
    "profsurf": 8979,
    "prop": 8733,
    "Proportional": 8733,
    "Proportion": 8759,
    "propto": 8733,
    "prsim": 8830,
    "prurel": 8880,
    "Pscr": 119979,
    "pscr": 120005,
    "Psi": 936,
    "psi": 968,
    "puncsp": 8200,
    "Qfr": 120084,
    "qfr": 120110,
    "qint": 10764,
    "qopf": 120162,
    "Qopf": 8474,
    "qprime": 8279,
    "Qscr": 119980,
    "qscr": 120006,
    "quaternions": 8461,
    "quatint": 10774,
    "quest": 63,
    "questeq": 8799,
    "quot": 34,
    "quo": 34,
    "QUOT": 34,
    "QUO": 34,
    "rAarr": 8667,
    "race": 8765,
    "Racute": 340,
    "racute": 341,
    "radic": 8730,
    "raemptyv": 10675,
    "rang": 10217,
    "Rang": 10219,
    "rangd": 10642,
    "range": 10661,
    "rangle": 10217,
    "raquo": 187,
    "raqu": 187,
    "rarrap": 10613,
    "rarrb": 8677,
    "rarrbfs": 10528,
    "rarrc": 10547,
    "rarr": 8594,
    "Rarr": 8608,
    "rArr": 8658,
    "rarrfs": 10526,
    "rarrhk": 8618,
    "rarrlp": 8620,
    "rarrpl": 10565,
    "rarrsim": 10612,
    "Rarrtl": 10518,
    "rarrtl": 8611,
    "rarrw": 8605,
    "ratail": 10522,
    "rAtail": 10524,
    "ratio": 8758,
    "rationals": 8474,
    "rbarr": 10509,
    "rBarr": 10511,
    "RBarr": 10512,
    "rbbrk": 10099,
    "rbrace": 125,
    "rbrack": 93,
    "rbrke": 10636,
    "rbrksld": 10638,
    "rbrkslu": 10640,
    "Rcaron": 344,
    "rcaron": 345,
    "Rcedil": 342,
    "rcedil": 343,
    "rceil": 8969,
    "rcub": 125,
    "Rcy": 1056,
    "rcy": 1088,
    "rdca": 10551,
    "rdldhar": 10601,
    "rdquo": 8221,
    "rdquor": 8221,
    "rdsh": 8627,
    "real": 8476,
    "realine": 8475,
    "realpart": 8476,
    "reals": 8477,
    "Re": 8476,
    "rect": 9645,
    "reg": 174,
    "re": 174,
    "REG": 174,
    "RE": 174,
    "ReverseElement": 8715,
    "ReverseEquilibrium": 8651,
    "ReverseUpEquilibrium": 10607,
    "rfisht": 10621,
    "rfloor": 8971,
    "rfr": 120111,
    "Rfr": 8476,
    "rHar": 10596,
    "rhard": 8641,
    "rharu": 8640,
    "rharul": 10604,
    "Rho": 929,
    "rho": 961,
    "rhov": 1009,
    "RightAngleBracket": 10217,
    "RightArrowBar": 8677,
    "rightarrow": 8594,
    "RightArrow": 8594,
    "Rightarrow": 8658,
    "RightArrowLeftArrow": 8644,
    "rightarrowtail": 8611,
    "RightCeiling": 8969,
    "RightDoubleBracket": 10215,
    "RightDownTeeVector": 10589,
    "RightDownVectorBar": 10581,
    "RightDownVector": 8642,
    "RightFloor": 8971,
    "rightharpoondown": 8641,
    "rightharpoonup": 8640,
    "rightleftarrows": 8644,
    "rightleftharpoons": 8652,
    "rightrightarrows": 8649,
    "rightsquigarrow": 8605,
    "RightTeeArrow": 8614,
    "RightTee": 8866,
    "RightTeeVector": 10587,
    "rightthreetimes": 8908,
    "RightTriangleBar": 10704,
    "RightTriangle": 8883,
    "RightTriangleEqual": 8885,
    "RightUpDownVector": 10575,
    "RightUpTeeVector": 10588,
    "RightUpVectorBar": 10580,
    "RightUpVector": 8638,
    "RightVectorBar": 10579,
    "RightVector": 8640,
    "ring": 730,
    "risingdotseq": 8787,
    "rlarr": 8644,
    "rlhar": 8652,
    "rlm": 8207,
    "rmoustache": 9137,
    "rmoust": 9137,
    "rnmid": 10990,
    "roang": 10221,
    "roarr": 8702,
    "robrk": 10215,
    "ropar": 10630,
    "ropf": 120163,
    "Ropf": 8477,
    "roplus": 10798,
    "rotimes": 10805,
    "RoundImplies": 10608,
    "rpar": 41,
    "rpargt": 10644,
    "rppolint": 10770,
    "rrarr": 8649,
    "Rrightarrow": 8667,
    "rsaquo": 8250,
    "rscr": 120007,
    "Rscr": 8475,
    "rsh": 8625,
    "Rsh": 8625,
    "rsqb": 93,
    "rsquo": 8217,
    "rsquor": 8217,
    "rthree": 8908,
    "rtimes": 8906,
    "rtri": 9657,
    "rtrie": 8885,
    "rtrif": 9656,
    "rtriltri": 10702,
    "RuleDelayed": 10740,
    "ruluhar": 10600,
    "rx": 8478,
    "Sacute": 346,
    "sacute": 347,
    "sbquo": 8218,
    "scap": 10936,
    "Scaron": 352,
    "scaron": 353,
    "Sc": 10940,
    "sc": 8827,
    "sccue": 8829,
    "sce": 10928,
    "scE": 10932,
    "Scedil": 350,
    "scedil": 351,
    "Scirc": 348,
    "scirc": 349,
    "scnap": 10938,
    "scnE": 10934,
    "scnsim": 8937,
    "scpolint": 10771,
    "scsim": 8831,
    "Scy": 1057,
    "scy": 1089,
    "sdotb": 8865,
    "sdot": 8901,
    "sdote": 10854,
    "searhk": 10533,
    "searr": 8600,
    "seArr": 8664,
    "searrow": 8600,
    "sect": 167,
    "sec": 167,
    "semi": 59,
    "seswar": 10537,
    "setminus": 8726,
    "setmn": 8726,
    "sext": 10038,
    "Sfr": 120086,
    "sfr": 120112,
    "sfrown": 8994,
    "sharp": 9839,
    "SHCHcy": 1065,
    "shchcy": 1097,
    "SHcy": 1064,
    "shcy": 1096,
    "ShortDownArrow": 8595,
    "ShortLeftArrow": 8592,
    "shortmid": 8739,
    "shortparallel": 8741,
    "ShortRightArrow": 8594,
    "ShortUpArrow": 8593,
    "shy": 173,
    "sh": 173,
    "Sigma": 931,
    "sigma": 963,
    "sigmaf": 962,
    "sigmav": 962,
    "sim": 8764,
    "simdot": 10858,
    "sime": 8771,
    "simeq": 8771,
    "simg": 10910,
    "simgE": 10912,
    "siml": 10909,
    "simlE": 10911,
    "simne": 8774,
    "simplus": 10788,
    "simrarr": 10610,
    "slarr": 8592,
    "SmallCircle": 8728,
    "smallsetminus": 8726,
    "smashp": 10803,
    "smeparsl": 10724,
    "smid": 8739,
    "smile": 8995,
    "smt": 10922,
    "smte": 10924,
    "smtes": 10924,
    "SOFTcy": 1068,
    "softcy": 1100,
    "solbar": 9023,
    "solb": 10692,
    "sol": 47,
    "Sopf": 120138,
    "sopf": 120164,
    "spades": 9824,
    "spadesuit": 9824,
    "spar": 8741,
    "sqcap": 8851,
    "sqcaps": 8851,
    "sqcup": 8852,
    "sqcups": 8852,
    "Sqrt": 8730,
    "sqsub": 8847,
    "sqsube": 8849,
    "sqsubset": 8847,
    "sqsubseteq": 8849,
    "sqsup": 8848,
    "sqsupe": 8850,
    "sqsupset": 8848,
    "sqsupseteq": 8850,
    "square": 9633,
    "Square": 9633,
    "SquareIntersection": 8851,
    "SquareSubset": 8847,
    "SquareSubsetEqual": 8849,
    "SquareSuperset": 8848,
    "SquareSupersetEqual": 8850,
    "SquareUnion": 8852,
    "squarf": 9642,
    "squ": 9633,
    "squf": 9642,
    "srarr": 8594,
    "Sscr": 119982,
    "sscr": 120008,
    "ssetmn": 8726,
    "ssmile": 8995,
    "sstarf": 8902,
    "Star": 8902,
    "star": 9734,
    "starf": 9733,
    "straightepsilon": 1013,
    "straightphi": 981,
    "strns": 175,
    "sub": 8834,
    "Sub": 8912,
    "subdot": 10941,
    "subE": 10949,
    "sube": 8838,
    "subedot": 10947,
    "submult": 10945,
    "subnE": 10955,
    "subne": 8842,
    "subplus": 10943,
    "subrarr": 10617,
    "subset": 8834,
    "Subset": 8912,
    "subseteq": 8838,
    "subseteqq": 10949,
    "SubsetEqual": 8838,
    "subsetneq": 8842,
    "subsetneqq": 10955,
    "subsim": 10951,
    "subsub": 10965,
    "subsup": 10963,
    "succapprox": 10936,
    "succ": 8827,
    "succcurlyeq": 8829,
    "Succeeds": 8827,
    "SucceedsEqual": 10928,
    "SucceedsSlantEqual": 8829,
    "SucceedsTilde": 8831,
    "succeq": 10928,
    "succnapprox": 10938,
    "succneqq": 10934,
    "succnsim": 8937,
    "succsim": 8831,
    "SuchThat": 8715,
    "sum": 8721,
    "Sum": 8721,
    "sung": 9834,
    "sup1": 185,
    "sup": 8835,
    "sup2": 178,
    "sup3": 179,
    "Sup": 8913,
    "supdot": 10942,
    "supdsub": 10968,
    "supE": 10950,
    "supe": 8839,
    "supedot": 10948,
    "Superset": 8835,
    "SupersetEqual": 8839,
    "suphsol": 10185,
    "suphsub": 10967,
    "suplarr": 10619,
    "supmult": 10946,
    "supnE": 10956,
    "supne": 8843,
    "supplus": 10944,
    "supset": 8835,
    "Supset": 8913,
    "supseteq": 8839,
    "supseteqq": 10950,
    "supsetneq": 8843,
    "supsetneqq": 10956,
    "supsim": 10952,
    "supsub": 10964,
    "supsup": 10966,
    "swarhk": 10534,
    "swarr": 8601,
    "swArr": 8665,
    "swarrow": 8601,
    "swnwar": 10538,
    "szlig": 223,
    "szli": 223,
    "Tab": 9,
    "target": 8982,
    "Tau": 932,
    "tau": 964,
    "tbrk": 9140,
    "Tcaron": 356,
    "tcaron": 357,
    "Tcedil": 354,
    "tcedil": 355,
    "Tcy": 1058,
    "tcy": 1090,
    "tdot": 8411,
    "telrec": 8981,
    "Tfr": 120087,
    "tfr": 120113,
    "there4": 8756,
    "therefore": 8756,
    "Therefore": 8756,
    "Theta": 920,
    "theta": 952,
    "thetasym": 977,
    "thetav": 977,
    "thickapprox": 8776,
    "thicksim": 8764,
    "ThickSpace": 8287,
    "ThinSpace": 8201,
    "thinsp": 8201,
    "thkap": 8776,
    "thksim": 8764,
    "THORN": 222,
    "THOR": 222,
    "thorn": 254,
    "thor": 254,
    "tilde": 732,
    "Tilde": 8764,
    "TildeEqual": 8771,
    "TildeFullEqual": 8773,
    "TildeTilde": 8776,
    "timesbar": 10801,
    "timesb": 8864,
    "times": 215,
    "timesd": 10800,
    "tint": 8749,
    "toea": 10536,
    "topbot": 9014,
    "topcir": 10993,
    "top": 8868,
    "Topf": 120139,
    "topf": 120165,
    "topfork": 10970,
    "tosa": 10537,
    "tprime": 8244,
    "trade": 8482,
    "TRADE": 8482,
    "triangle": 9653,
    "triangledown": 9663,
    "triangleleft": 9667,
    "trianglelefteq": 8884,
    "triangleq": 8796,
    "triangleright": 9657,
    "trianglerighteq": 8885,
    "tridot": 9708,
    "trie": 8796,
    "triminus": 10810,
    "TripleDot": 8411,
    "triplus": 10809,
    "trisb": 10701,
    "tritime": 10811,
    "trpezium": 9186,
    "Tscr": 119983,
    "tscr": 120009,
    "TScy": 1062,
    "tscy": 1094,
    "TSHcy": 1035,
    "tshcy": 1115,
    "Tstrok": 358,
    "tstrok": 359,
    "twixt": 8812,
    "twoheadleftarrow": 8606,
    "twoheadrightarrow": 8608,
    "Uacute": 218,
    "Uacut": 218,
    "uacute": 250,
    "uacut": 250,
    "uarr": 8593,
    "Uarr": 8607,
    "uArr": 8657,
    "Uarrocir": 10569,
    "Ubrcy": 1038,
    "ubrcy": 1118,
    "Ubreve": 364,
    "ubreve": 365,
    "Ucirc": 219,
    "Ucir": 219,
    "ucirc": 251,
    "ucir": 251,
    "Ucy": 1059,
    "ucy": 1091,
    "udarr": 8645,
    "Udblac": 368,
    "udblac": 369,
    "udhar": 10606,
    "ufisht": 10622,
    "Ufr": 120088,
    "ufr": 120114,
    "Ugrave": 217,
    "Ugrav": 217,
    "ugrave": 249,
    "ugrav": 249,
    "uHar": 10595,
    "uharl": 8639,
    "uharr": 8638,
    "uhblk": 9600,
    "ulcorn": 8988,
    "ulcorner": 8988,
    "ulcrop": 8975,
    "ultri": 9720,
    "Umacr": 362,
    "umacr": 363,
    "uml": 168,
    "um": 168,
    "UnderBar": 95,
    "UnderBrace": 9183,
    "UnderBracket": 9141,
    "UnderParenthesis": 9181,
    "Union": 8899,
    "UnionPlus": 8846,
    "Uogon": 370,
    "uogon": 371,
    "Uopf": 120140,
    "uopf": 120166,
    "UpArrowBar": 10514,
    "uparrow": 8593,
    "UpArrow": 8593,
    "Uparrow": 8657,
    "UpArrowDownArrow": 8645,
    "updownarrow": 8597,
    "UpDownArrow": 8597,
    "Updownarrow": 8661,
    "UpEquilibrium": 10606,
    "upharpoonleft": 8639,
    "upharpoonright": 8638,
    "uplus": 8846,
    "UpperLeftArrow": 8598,
    "UpperRightArrow": 8599,
    "upsi": 965,
    "Upsi": 978,
    "upsih": 978,
    "Upsilon": 933,
    "upsilon": 965,
    "UpTeeArrow": 8613,
    "UpTee": 8869,
    "upuparrows": 8648,
    "urcorn": 8989,
    "urcorner": 8989,
    "urcrop": 8974,
    "Uring": 366,
    "uring": 367,
    "urtri": 9721,
    "Uscr": 119984,
    "uscr": 120010,
    "utdot": 8944,
    "Utilde": 360,
    "utilde": 361,
    "utri": 9653,
    "utrif": 9652,
    "uuarr": 8648,
    "Uuml": 220,
    "Uum": 220,
    "uuml": 252,
    "uum": 252,
    "uwangle": 10663,
    "vangrt": 10652,
    "varepsilon": 1013,
    "varkappa": 1008,
    "varnothing": 8709,
    "varphi": 981,
    "varpi": 982,
    "varpropto": 8733,
    "varr": 8597,
    "vArr": 8661,
    "varrho": 1009,
    "varsigma": 962,
    "varsubsetneq": 8842,
    "varsubsetneqq": 10955,
    "varsupsetneq": 8843,
    "varsupsetneqq": 10956,
    "vartheta": 977,
    "vartriangleleft": 8882,
    "vartriangleright": 8883,
    "vBar": 10984,
    "Vbar": 10987,
    "vBarv": 10985,
    "Vcy": 1042,
    "vcy": 1074,
    "vdash": 8866,
    "vDash": 8872,
    "Vdash": 8873,
    "VDash": 8875,
    "Vdashl": 10982,
    "veebar": 8891,
    "vee": 8744,
    "Vee": 8897,
    "veeeq": 8794,
    "vellip": 8942,
    "verbar": 124,
    "Verbar": 8214,
    "vert": 124,
    "Vert": 8214,
    "VerticalBar": 8739,
    "VerticalLine": 124,
    "VerticalSeparator": 10072,
    "VerticalTilde": 8768,
    "VeryThinSpace": 8202,
    "Vfr": 120089,
    "vfr": 120115,
    "vltri": 8882,
    "vnsub": 8834,
    "vnsup": 8835,
    "Vopf": 120141,
    "vopf": 120167,
    "vprop": 8733,
    "vrtri": 8883,
    "Vscr": 119985,
    "vscr": 120011,
    "vsubnE": 10955,
    "vsubne": 8842,
    "vsupnE": 10956,
    "vsupne": 8843,
    "Vvdash": 8874,
    "vzigzag": 10650,
    "Wcirc": 372,
    "wcirc": 373,
    "wedbar": 10847,
    "wedge": 8743,
    "Wedge": 8896,
    "wedgeq": 8793,
    "weierp": 8472,
    "Wfr": 120090,
    "wfr": 120116,
    "Wopf": 120142,
    "wopf": 120168,
    "wp": 8472,
    "wr": 8768,
    "wreath": 8768,
    "Wscr": 119986,
    "wscr": 120012,
    "xcap": 8898,
    "xcirc": 9711,
    "xcup": 8899,
    "xdtri": 9661,
    "Xfr": 120091,
    "xfr": 120117,
    "xharr": 10231,
    "xhArr": 10234,
    "Xi": 926,
    "xi": 958,
    "xlarr": 10229,
    "xlArr": 10232,
    "xmap": 10236,
    "xnis": 8955,
    "xodot": 10752,
    "Xopf": 120143,
    "xopf": 120169,
    "xoplus": 10753,
    "xotime": 10754,
    "xrarr": 10230,
    "xrArr": 10233,
    "Xscr": 119987,
    "xscr": 120013,
    "xsqcup": 10758,
    "xuplus": 10756,
    "xutri": 9651,
    "xvee": 8897,
    "xwedge": 8896,
    "Yacute": 221,
    "Yacut": 221,
    "yacute": 253,
    "yacut": 253,
    "YAcy": 1071,
    "yacy": 1103,
    "Ycirc": 374,
    "ycirc": 375,
    "Ycy": 1067,
    "ycy": 1099,
    "yen": 165,
    "ye": 165,
    "Yfr": 120092,
    "yfr": 120118,
    "YIcy": 1031,
    "yicy": 1111,
    "Yopf": 120144,
    "yopf": 120170,
    "Yscr": 119988,
    "yscr": 120014,
    "YUcy": 1070,
    "yucy": 1102,
    "yuml": 255,
    "yum": 255,
    "Yuml": 376,
    "Zacute": 377,
    "zacute": 378,
    "Zcaron": 381,
    "zcaron": 382,
    "Zcy": 1047,
    "zcy": 1079,
    "Zdot": 379,
    "zdot": 380,
    "zeetrf": 8488,
    "ZeroWidthSpace": 8203,
    "Zeta": 918,
    "zeta": 950,
    "zfr": 120119,
    "Zfr": 8488,
    "ZHcy": 1046,
    "zhcy": 1078,
    "zigrarr": 8669,
    "zopf": 120171,
    "Zopf": 8484,
    "Zscr": 119989,
    "zscr": 120015,
    "zwj": 8205,
    "zwnj": 8204
};
var XMLParser = /** @class */ (function () {
    function XMLParser(initWith) {
        this.__len = 0;
        this.buff_index = 0;
        this.used_index = 0;
        this.parents = [];
        this.tag_depth = 0;
        this.i = 0;
        this.eof = false;
        this.last_finished = null;
        this.in_tagdef = false;
        this.is_selfclosing = false;
        this.last_tag_name = '';
        this.buffers = initWith;
        this.buff = initWith[0];
        this.i = 0;
        this.buff_index = 0;
        this.used_index = 0;
        this.eof = false;
        if (typeof (this.buff) === 'undefined')
            this.eof = true;
    }
    XMLParser.prototype.code = function (index) {
        if ((this.buff_index & 1) && typeof (this.buff) != 'string') {
            return 0;
        }
        if (this.buff.length <= this.i + index) {
            var next = this.buffers[this.buff_index + 1];
            if (typeof (next) != 'string') {
                return 0;
            }
            if (next) {
                return next.charCodeAt(this.i + index - this.buff.length);
            }
            return 0;
        }
        return this.buff.charCodeAt(this.i + index);
    };
    XMLParser.prototype.here = function () {
        if (typeof (this.buff) != 'string')
            return 0;
        return this.buff.charCodeAt(this.i);
    };
    XMLParser.prototype.isValueBlock = function () {
        return ((this.buff_index & 1) === 1);
    };
    XMLParser.prototype.isHere = function (value) {
        return this.buff.charCodeAt(this.i) == value;
    };
    XMLParser.prototype.step = function (index) {
        this.i += index;
        this.used_index = this.buff_index;
        if (this.buff.length <= this.i) {
            this.i = this.i - this.buff.length;
            this.buff_index = this.buff_index + 1;
            this.used_index = this.buff_index;
            this.buff = this.buffers[this.buff_index];
            if (typeof (this.buff) === 'undefined') {
                this.eof = true;
                return 0;
            }
            else {
                if (typeof (this.buff) != 'string')
                    return 0;
                return this.buff.charCodeAt(0);
            }
        }
        return this.buff.charCodeAt(this.i);
    };
    XMLParser.prototype.stepBuffer = function () {
        this.buff_index = this.buff_index + 1;
        this.used_index = this.buff_index;
        this.buff = this.buffers[this.buff_index];
        this.i = 0;
        if (typeof (this.buff) === 'undefined') {
            this.eof = true;
        }
    };
    XMLParser.prototype.skipspace = function () {
        if (typeof (this.buff) != 'string')
            return;
        var c = this.here();
        while (!this.eof) {
            if (c > 32)
                break;
            c = this.step(1);
            var b = this.buff;
            if (b instanceof index_1.drfmKey) {
                this.stepBuffer();
            }
        }
    };
    XMLParser.prototype.isTagChar = function (c, first) {
        return (((c >= 65) && (c <= 90)) // A - Z
            || ((c >= 97) && (c <= 122)) // a - z
            || (c == 95) // _
            || (c == 58) // :
            || (!first && (c >= 48) && (c <= 57)) // 0 - 9
            || (!first && c == 46) // .
            || (!first && c == 45) // -
        );
    };
    // collects a name like div or attribute name ( a bit simplified version )
    XMLParser.prototype.collectXMLName = function () {
        var sp = this.i;
        var c = this.here();
        var first = true;
        var start_buff = this.buff;
        while (!this.eof && this.isTagChar(c, first)) {
            c = this.step(1);
            first = false;
        }
        if (start_buff == this.buff) {
            return this.buff.substring(sp, this.i);
        }
        return start_buff.substring(sp) + this.buff.substring(0, this.i);
    };
    XMLParser.prototype.colllectText = function () {
        if (this.isValueBlock()) {
            var v = this.buff;
            this.used_index = this.buff_index;
            this.buff_index++;
            this.buff = this.buffers[this.buff_index];
            if (typeof (this.buff) === 'undefined')
                this.eof = true;
            this.i = 0;
            return v;
        }
        var sp = this.i;
        var c1 = this.here();
        var c2 = this.code(1);
        var start_buff = this.buff;
        var curr_buff = this.buff;
        var intermediate = [];
        var last_i = this.i;
        var did_step = false;
        // read text as long as not <c... or </...
        while (!this.eof && (!(c1 == 60 && // "<"
            ((c2 == 47) || // "/"
                this.isTagChar(c2, true) || // valid tag char
                (c2 == 33)))) // <! comment start...
        ) {
            if (curr_buff != this.buff) {
                break;
            }
            if (c1 === 38) {
                if (c2 === 35) {
                    // &#
                    intermediate.push(this.buff.substring(sp, this.i));
                    this.step(2);
                    var code = this.collectUntil(59);
                    var cc = parseInt('0' + code);
                    if (isNaN(cc)) {
                        intermediate.push('&#' + code + ';');
                    }
                    else {
                        intermediate.push(String.fromCharCode(cc));
                    }
                    this.step(1);
                    if (this.eof)
                        break;
                    c1 = this.code(0);
                    c2 = this.code(1);
                    sp = this.i;
                    did_step = true;
                }
                else {
                    // named charater references...
                    // store what we have so far...
                    if ((c2 >= 65 && c2 <= 90) || (c2 >= 97 && c2 <= 122)) {
                        intermediate.push(this.buff.substring(sp, this.i));
                        this.step(1);
                        var name_1 = this.collectUntil(59);
                        var cc = namedChars[name_1];
                        if (cc) {
                            intermediate.push(String.fromCharCode(cc));
                        }
                        else {
                            intermediate.push('&' + name_1 + ';');
                        }
                        this.step(1);
                        if (this.eof)
                            break;
                        c1 = this.code(0);
                        c2 = this.code(1);
                        sp = this.i;
                        did_step = true;
                    }
                }
            }
            if (!did_step) {
                c1 = this.step(1);
                if (this.eof)
                    break;
                c2 = this.code(1);
                if (this.eof)
                    break;
                if (curr_buff != this.buff) {
                    break;
                }
            }
            did_step = false;
            curr_buff = this.buff;
        }
        if (intermediate.length > 0) {
            if (start_buff == this.buff) {
                return intermediate.join('') + this.buff.substring(sp, this.i);
            }
            else {
                return intermediate.join('') + start_buff.substring(sp);
            }
        }
        if (start_buff == this.buff) {
            return this.buff.substring(sp, this.i);
        }
        return start_buff.substring(sp);
    };
    XMLParser.prototype.skipUntil = function (fn) {
        var curr_buff = this.buff;
        while ((false === fn(this.buff, this.i)) && !this.eof) {
            this.step(1);
            if (curr_buff != this.buff) {
                if (this.isValueBlock()) {
                    this.stepBuffer();
                }
            }
            curr_buff = this.buff;
        }
    };
    XMLParser.prototype.collectUntil = function (value) {
        var sp = this.i;
        var c = this.here();
        var start_buff = this.buff;
        var curr_buff = this.buff;
        var intermediate = [];
        while (c != value && !this.eof) {
            c = this.step(1);
            if (curr_buff != this.buff) {
                intermediate.push(this.buff);
            }
            curr_buff = this.buff;
        }
        if (start_buff == this.buff) {
            return this.buff.substring(sp, this.i);
        }
        intermediate.pop(); // remove last intermediate because it is this.buff
        return start_buff.substring(sp) + intermediate.join('') + this.buff.substring(0, this.i);
    };
    XMLParser.prototype.collectXMLAttributeValue = function () {
        this.skipspace();
        if (this.isHere(61)) {
            this.step(1);
            this.skipspace();
            // if the current buffer is...
            // setAttributeFunction
            if (typeof (this.buff) != 'string' || (this.isValueBlock())) {
                var v = this.buff;
                this.used_index = this.buff_index;
                this.buff_index++;
                this.buff = this.buffers[this.buff_index];
                if (typeof (this.buff) === 'undefined')
                    this.eof = true;
                return v;
            }
            var quoteChar = this.here();
            if (quoteChar == 34 || quoteChar == 39) {
                this.step(1);
                var value = this.collectUntil(quoteChar); // collect to the "
                this.step(1);
                return value;
            }
            else {
                return this.collectXMLName();
            }
        }
        return '';
    };
    // parse something that is meaningful imperatively and then create a callback
    XMLParser.prototype.parse = function (callback) {
        if (typeof (this.buff) === 'undefined') {
            this.eof = true;
            callback.eof();
            return;
        }
        var cc1 = 0;
        var cc2 = 0;
        while (!this.eof) {
            if (typeof (this.buff) === 'string' && this.buff.length === 0) {
                var idx = this.buff_index;
                callback.addTextNode('', idx);
                this.stepBuffer();
                continue;
            }
            cc1 = this.here();
            if (this.in_tagdef) {
                // <div  something = "..."
                this.skipspace();
                cc1 = this.here();
                // if tag ends immediately like <div/> or <br/>
                if (cc1 == 47) {
                    this.step(2);
                    this.in_tagdef = false;
                    callback.closeNode(this.last_tag_name, this.used_index);
                    return;
                }
                if (cc1 != 62) {
                    var name_2 = this.collectXMLName();
                    var value = this.collectXMLAttributeValue();
                    callback.setAttribute(name_2, value, this.used_index);
                    return;
                }
                // if ">", check if self closing
                if (this.is_selfclosing) {
                    // this.step(1)
                    // this.in_tagdef = false
                    callback.closeNode(this.last_tag_name, this.used_index);
                }
                this.step(1);
                this.in_tagdef = false;
                continue;
            }
            if (this.isValueBlock()) {
                var idx = this.buff_index;
                callback.addTextNode(this.colllectText(), idx);
                continue;
            }
            // <
            if (cc1 == 60) {
                cc2 = this.code(1);
                // </ tag is closing
                if (cc2 == 47) {
                    this.step(2);
                    var tag = this.collectXMLName();
                    this.step(1);
                    callback.closeNode(tag, this.used_index);
                    return;
                }
                if (this.isTagChar(cc2, true)) {
                    this.is_selfclosing = isSelfClosingTag(this.buff, this.i + 1);
                    this.step(1);
                    this.in_tagdef = true;
                    this.last_tag_name = this.collectXMLName();
                    callback.beginNode(this.last_tag_name, this.used_index);
                    return;
                }
                if (isCommentStart(this.buff, this.i)) {
                    this.skipUntil(isCommentEnd);
                    this.step(3); // -->
                    continue;
                }
            }
            // > the div can be closing....
            if (!this.eof) {
                var idx = this.buff_index;
                callback.addTextNode(this.colllectText(), idx);
            }
            return;
        }
        callback.eof();
    };
    return XMLParser;
}());
exports.XMLParser = XMLParser;

},{"./index":2}]},{},[1]);
